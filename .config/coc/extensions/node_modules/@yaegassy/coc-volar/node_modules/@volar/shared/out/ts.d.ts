import type * as ts from 'typescript/lib/tsserverlibrary';
export declare function createTsLanguageService(ts: typeof import('typescript/lib/tsserverlibrary'), ShPlugin: typeof import('typescript-vscode-sh-plugin'), _host: ts.LanguageServiceHost): ts.LanguageService;
export declare function getWorkspaceTypescriptPath(tsdk: string, workspaceFolderFsPaths: string[]): string | undefined;
export declare function getWorkspaceTypescriptLocalizedPath(tsdk: string, lang: string, workspaceFolderFsPaths: string[]): string | undefined;
export declare function findTypescriptModulePathInLib(lib: string): string | undefined;
export declare function findTypescriptLocalizedPathInLib(lib: string, lang: string): string | undefined;
export declare function getVscodeTypescriptPath(appRoot: string): string;
export declare function getVscodeTypescriptLocalizedPath(appRoot: string, lang: string): string | undefined;
export declare function loadTypescript(tsPath: string): typeof import('typescript/lib/tsserverlibrary');
export declare function loadTypescriptLocalized(tsPath: string): ts.MapLike<string> | undefined;
export declare function getTypeScriptVersion(serverPath: string): string | undefined;
export declare function createParsedCommandLine(ts: typeof import('typescript/lib/tsserverlibrary'), parseConfigHost: ts.ParseConfigHost, tsConfig: string): ts.ParsedCommandLine;
