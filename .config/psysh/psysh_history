_HiStOrY_V2_
file_get_contents('https://gist.githubusercontent.com/keeguon/2310008/raw/bdc2ce1c1e3f28f9cab5b4393c7549f38361be4e/countries.json')
$json\040=\040file_get_contents('https://gist.githubusercontent.com/keeguon/2310008/raw/bdc2ce1c1e3f28f9cab5b4393c7549f38361be4e/countries.json')
json_decode($json_\012$json\040=\040file_get_contents('https://gist.githubusercontent.com/keeguon/2310008/raw/bdc2ce1c1e3f28f9cab5b4393c7549f38361be4e/countries.json'))
json_decode($json)
$json\040=\040file_get_contents('http://country.io/names.json')
$countries\040=\040json_decode($json)
collect($countries)
collect($countries)->mapWithKeys(function($country,\040$code){\040return\040[strtolower($country)\040=>\040['name'\040=>\040$country,\040'code'\040=>\040$code]];\040});
collect($countries)->mapWithKeys(function($country,\040$code){\040return\040[Str::slug($country)\040=>\040['name'\040=>\040$country,\040'code'\040=>\040$code]];\040});
use\040App\134Contracts\134Country
app(Country::class)
app(Country::class)->make('indonesia)
app(Country::class)->make('indonesia')
app(Country::class)->make('indonesia')
use\040App\134Contracts\134Country
app(Country::class)->make('indonesia')
app(Country::class)->make('indonesia')->getCountryCode()
app(Country::class)->make('indonesia')->getCountryFlagUnicode()
use\040App\134Contracts\134Country
app(Country::class)->make('indonesia')->getCountryFlagUnicode()
use\040App\134Contracts\134Country
app(Country::class)->make('indonesia')->getCountryFlagUnicode()
app(Country::class)->make('indonesia')->getCountryFlagUrl()
DB::getPDO()
DB::getPDO()
DB::getPDO()
DB::getPDO()
DB::getPDO()
DB::getPDO()
$r\040=\040null
$r['a']
use\040App\134Repositories\134CompanyRepository
app(CompanyRepository::class)
app(CompanyRepository::class)->all()
AuthServer::getClientAccessToken()
AuthServer::getClientAccessToken()
$r\040=\0400
$r\040=\0400
$r\040??\0401
$r\040??\0402
$r\040?:\0402
$r\040?:\0401
$r\040=\0409
$r\040?:\0401
Insurance::first()
use\040App\134Models\134Insurance
Insurance::first()
Insurance::first()->start_date
use\040App\134Models\134Insurance
Insurance::first()->user
use\040App\134Models\134User
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->insurances
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->insurances
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->insurances
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->insurances()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->insurances
use\040App\134Models\134User;
User::where('email',\040'bini@oghe.com')->first()
User::where('email',\040'bini@oghe.com')->update(['designation_id'\040=>\040NULL])
User::where('email',\040'bini@oghe.com')->first()
use\040App\134Models\134EmploymentHistory;
EmploymentHistory::first()
EmploymentHistory::first()->only('position')
Money::amount(9000)
Money::amount(9000)->withCurrency('MYR')
Money::amount(9000)->withCurrency('MYR')->format()
Money::amount(9000)->withCurrency('MYR')->format()
Money::amount(200)->withCurrency('MYR')->format()
Money::amount(200)->withCurrency('USD')->format()
Money::amount(9000)->withCurrency('MYR')->locale('en_US')->format()
Money::amount(9000)->withCurrency('USD')->locale('en_US')->format()
Money::amount(9000)->withCurrency('USD')->locale('en_US')->format()
Money::amount(9000)->withCurrency('USD')->locale('en_US')->format()
Money::lowestDenominatorAmount(90000)->withCurrency('MYR')->format()
Money::lowestDenominatorAmount((425.984*100))->withCurrency('MYR')->format()
Money::lowestDenominatorAmount((425.984\040*\040100))->withCurrency('MYR')->format()
$r\040=\040425.98
$r\040*\040100
Money::lowestDenominatorAmount(\040(int)\040(425.984\040*\040100))->withCurrency('MYR')->format()
Money::amount(3000)->lowestDenominator(function($amount)\040{\040return\040$amount\040*\040900;\040})
use\040App\134Models\134User;
use\040App\134Models\134User;
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getFirstMediaUrl()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getFirstMedia()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->photos()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getMedia()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getMedia('profile_photos')
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getFirstMediaUrl('profile_photos')
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getFirstMedia('profile_photos')
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getFirstMedia('profile_photos')->getFullUrl()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getLastMedia('profile_photos')->getFullUrl()
User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->getLastMedia('profile_photos')->getFullUrl()
$userData\040=\040User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')
$userData\040=\040User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->toArray()
$userData\040=\040User::find('be54c0db-97dc-44ff-beaa-be473ebbc0oo')->toArray()['profile_photo']\040=\040'dd'
$userData
use\040App\134Models\134Approval;
Approval::first(\012)
Approval::first()->type
use\040App\134Models\134Approval;
Approval::first()->type
use\040App\134Models\134Approval;
Approval::first()->type
use\040App\134Models\134Approval\040as\040A
A::first()
A::first()->user
use\040App\134Models\134Approval\040as\040A
A::first()->user
A::first()->approver
A::find('a050f0d3-cea4-470f-9a33-3d62c2d13cf2')->approver
(bool)\040null
2
2\040-\0400.5
2\040-\0400.5
dd('fff')
AuthServer::getUserInfo()
AuthServer::getUserInfo()
AuthServer::getUserInfo()
is_int(3.4)
is_numeric(4.5)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
app(L::class)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
use\040App\134Contracts\134LeaveAllocationSummary\040as\040L
app(L::class)
use\040Carbon\134Carbon;
Carbon::now()->timezone
Carbon::now()->toDateTimeString()
use\040App\134Models\134LeaveRequest;
LeaveRequest::first()
LeaveRequest::first()->leaveType
use\040App\134Models\134LeaveRequest;
LeaveRequest::first()->leaveType
use\040App\134Models\134LeaveRequest;
LeaveRequest::first()->leaveType
LeaveRequest::first()->leaveType()->toSql()
LeaveRequest::first()->leaveType()->toSql()
LeaveRequest::first()->leaveType
User::first()->approvals
User::first()->approvals
use\040App\134Models\134LeaveRequest;
LeaveRequest::first()
LeaveRequest::first()->user
LeaveRequest::first()
LeaveRequest::first()->user
LeaveRequest::first()->user()->toSql()
LeaveRequest::first()->user
use\040App\134Models\134LeaveRequestApproval
LeaveRequestApproval::first()->approver
LeaveRequestApproval::first()
LeaveRequestApproval::first()
LeaveRequestApproval::first()->approval
LeaveRequestApproval::first()->approver
LeaveRequestApproval::first()->approver
url()
url('/')
use\040App\134Models\134LeaveRequest;
LeaveRequest::first()
LeaveRequest::first()->approvals
LeaveRequest::first()->approvals
config('postmark')
bcrypt('111111')
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()
ClaimRequest::first()->type
ClaimRequest::first()->type()
ClaimRequest::first()->type()->toSql()
ClaimRequest::first()->type()->toSql()
ClaimRequest::first()->type
use\040App\134Contracts\134ClaimExpenseSummary\040as\040C;
app(C::class)
use\040App\134Models\134User
User::find('
User::find('0b094f13-839f-44b2-bbef-2c6771b5f406')
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')
use\040App\134Models\134TravellerVisa
use\040App\134Models\134TravellerVisa\040as\040T
use\040App\134Models\134TravellerVisa\040as\040T
T::first()
T::first()->issuerCountry
T::first()->issuerCountry
use\040App\134Models\134TravellerVisa\040as\040T
T::first()->issuerCountry
use\040App\134Models\134TravellerFlight\040as\040F
F::first()
F::first()->class
use\040App\134Models\134User
User::first()
User::first()->claimableMonths()
use\040App\134Contracts\134ClaimableDate\040as\040D;
app(D::class)
app(D::class)
use\040App\134Contracts\134ClaimableDate\040as\040D;
app(D::class)
app(D::class)->setMonth(12)->getMonth()
use\040App\134Contracts\134ClaimableDate\040as\040D;
app(D::class)->setMonth(12)->getMonth()
use\040App\134Models\134User;
User::first()->claimableMonths()
User::first()->claimableMonths()
(bool)\040true
$r\040=\040'a'
$t\040=\040'a'
(bool)\040$r\040===\040$a
(bool)\040$r\040===\040$t
$r\040===\040$t
use\040App\134User;
User::first()
ClaimRequest::first()
ClaimRequest::first()->expenses
ClaimRequest::first()->expenses->sum('amount')
use\040App\134Models\134ClaimRequest
$claim\040=\040ClaimRequest::first()
use\040App\134Models\134TravelRequest
$travel\040=\040TravelRequest::first()
$travel->advanceClaim()
use\040App\134Models\134TravelRequest
use\040App\134Models\134ClaimRequest
$travel\040=\040TravelRequest::first()
$claim\040=\040ClaimRequest::first()
$travel->advanceClaim()
$travel->advanceClaim
$travel->advanceClaim()->create(['claim_id'\040=>\040$claim->id])
$claim->advanceRequest
app('advance_type')
AuthServer::getClientAccessToken()
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()
ClaimRequest::first()->approvalRequests
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()->claimer
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()->claimer
ClaimRequest::first()->claimer()
ClaimRequest::first()->claimer()->toSql()
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()->claimer()->toSql()
ClaimRequest::first()->claimer
ClaimRequest::first()->claimer()->getBindings*(\012)
ClaimRequest::first()->claimer()->getBindings()
ClaimRequest::first()->claimer()->getBindings*(\012)
use\040App\134Models\134ClaimRequest;
ClaimRequest::first()->claimer
ClaimRequest::first()->claimer
ClaimRequest::first()->claimer()
ClaimRequest::first()->claimer()->toSql()
ClaimRequest::first()->claimer()->toSql()
ClaimRequest::first()->claimer
ClaimRequest::last()
ClaimRequest::get()
ClaimRequest::get()->last()
ClaimRequest::get()->last()->claimer
ClaimRequest::get()->last()->claimer()->getBindings()
use\040App\134Models\134User;
User::find('0449b7a6-d148-455e-897c-81709f479b0a')
User::find('0449b7a6-d148-455e-897c-81709f479b0a')->claims
Claim::where('user_id',\040'0449b7a6-d148-455e-897c-81709f479b0a')->get()
ClaimRequest::where('user_id',\040'0449b7a6-d148-455e-897c-81709f479b0a')->get()
ClaimRequest::where('user_id',\040'0449b7a6-d148-455e-897c-81709f479b0a')->first()
ClaimRequest::where('user_id',\040'0449b7a6-d148-455e-897c-81709f479b0a')->first()->claimer
ClaimRequest::select()
ClaimRequest::select()->delete()
use\040App\134Models\134ClaimRequest
$claim\040=\040ClaimRequest::find('83be171d-9c0e-44a2-a3fa-6285fb0a5364')
$claim->approvalRequests
use\040App\134Models\134CashAdvanceRequest
CashAdvanceRequest::all()
CashAdvanceRequest::select()->forceDelete()
CashAdvanceRequest::first()
CashAdvanceRequest::first()->user
CashAdvanceRequest::first()->requester
CashAdvanceRequest::first()
CashAdvanceRequest::first()->requester
CashAdvanceRequest::first()->requester
ApprovalRequest::first()
ApprovalRequest::first()->approver
ApprovalRequest::first()->approval
ApprovalRequest::first()->approval->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approval
ApprovalRequest::first()->approval
ApprovalRequest::first()->approval
ApprovalRequest::first()->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approver
ApprovalRequest::first()->approval
ApprovalRequest::first()->requester
CashAdvanceRequest::first()
CashAdvanceRequest::first()->company
use\040App\134Models\134ApprovalRequest
ApprovalRequest::first()
ApprovalRequest::first()->histories
ApprovalRequest::first()->histories()->toSql()
route('travel_info')
route('travel_info,\040'a')
route('travel_info',\040'a')
use\040App\134Models\134Traveller;
Traveller::first()
TravellerVisa::first()
TravellerVisa::first()->owner
TravellerVisa::first()->owner
TravellerVisa::first()->owner()
TravellerVisa::first()->owner()->toSql()
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner()->toSql()
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner()->toSql()
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner()->getBindings()
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner()->getBindings()
TravellerVisa::find('5724fb7d-cb33-45f7-a939-3920f3be7113')->owner
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->visa
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->visa
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->visa->type
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->visa->type
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->flight
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->flight->type
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->hotel
Traveller::find('39963db1-8ac6-4731-9bf0-e78153688e99')->hotel
route('approval_procedure')
route('approval_procedure',\040'a')
route('approval_procedure',\040'a',\040'b')
route('approval_procedure',\040'a',\040'b',\040'c')
route('approval_procedure',\040'a',\040'b',\040'c',\040'd')
route('approval_procedure',\040[1,2,3])
use\040App\134Models\134ClaimRequest
ClaimRequest::first()
ClaimRequest::first()->expensesSummary
ClaimRequest::first()->expensesSummary()
ClaimRequest::select()->forceDelete()
ClaimExpense::first()
ClaimExpense::select()->forceDelete()
ClaimRequest::select()->forceDelete()
clear
ClaimRequest::first()
ClaimRequest::first()->expenses
ClaimRequest::first()->expensesSummary()
ClaimRequest::first()->expensesSummary()->first()
ClaimRequest::first()->expensesSummary()->first()->getType()
ClaimRequest::first()->expensesSummary()->first()->getExpenseType()
ClaimRequest::first()->expensesSummary()->first()->getExpenseAmount()
Event::first()
use\040App\134Models\134Event
Event::first()
Event::first()->type
Event::get()->last()->type
Event::get()->last()->type
use\040App\134Models\134Event
Event::get()->last()->type
use\040App\134Contracts\134CalendarEvent\040as\040E
app(E::class)
use\040App\134Contracts\134CalendarEvent\040as\040E
app(E::class)
use\040App\134Contracts\134CalendarEvent\040as\040E
app(E::class)
use\040App\134Contracts\134CalendarEvents\040as\040E
app(E::class)
app(E::class)->totalEvents()
use\040App\134Models\134User;
User::find('79f5e8b1-02b3-487e-9df1-c9378b1b0f6a')
User::find('79f5e8b1-02b3-487e-9df1-c9378b1b0f6a')
User::find('79f5e8b1-02b3-487e-9df1-c9378b1b0f6a')
$dateRange\040=\040CarbonPeriod::create(Carbon::today(),\040Carbon::today()->addDays(7))
use\040Carbon\134CarbonPeriod;
use\040Carbon\134Carbon;
$dateRange\040=\040CarbonPeriod::create(Carbon::today(),\040Carbon::today()->addDays(7))
$dateRange->toArray()
$dateCollection\040=\040collect($dateRange->toArray())
$dateCollection->filter(function($date)\040{\040return\040$date->isWeekDay();\040})
$dateCollection->filter(function($date)\040{\040return\040$date->isWeekDay();\040})->values()
use\040App\134Models\134ClientPermission
ClientPermission::all()
ClientPermission::all()->where('name',\040'update-relative')
use\040App\134Models\134ClientPermission
ClientPermission::all()->where('name',\040'delete-relative')
use\040Carbon\134Carbon;
Carbon::getDays()
use\040App\134Models\134User;
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
use\040App\134Models\134User;
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
use\040App\134Models\134User;
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType()->toSql()
User::find('41fe3ba9-e67a-43ab-8d3f-7c8a6eac2ab0')->shiftType
User::find('1529bd81-624b-40e6-9ea2-e767ee93544f')
User::find('1529bd81-624b-40e6-9ea2-e767ee93544f')->shiftType
0.0\040/\0408
0\040/\0408
8\040/\0400
ceil(0.1453333)
round(0.1453333)
round(1.6458333333333)
ceil(1.6458333333333)
round(1.6458333333333,\0402)
round(0.1453333,\0402)
$t\040=\040.5
round(0.1453333,\0402)\040+\040$t
round(0.1453333,\0403)\040+\040$t
round(0.1453333,\0404)\040+\040$t
round(0.1453333,\0401)\040+\040$t
round(0.1453333,\0400)\040+\040$t
$current\040=\0401.5
round(0.1453333,\0401)\040+\040$current
round(0.1453333,\0402)\040+\040$current
round(0.1453333,\0403)\040+\040$current
round(0.1453333,\0401)\040+\040$current
round(0.1453333,\0401)
round(0.1453333,\0402)
LeaveLieuRequest::first()
LeaveLieuRequest::first()->requester
use\040App\134Models\134Approval
Approval::select()->delete()
Approval::select()->forceDelete()
use\040Carbon\134Carbon;
Carbon::createFromDate(2020,\0402,\0401)
bcrypt('111111')
API::notFound()
API::notFound()
use\040App\134Repositories\134CompanyRepository;
app(CompanyRepository::class)
Company::last()
Company::get()->last()
CompanyContact::get()->last()
use\040App\134Models\134CompanyContact;
CompanyContact::first()
CompanyContact::get()
CompanyContact::get()->last()
CompanyContact::get()->last()->company
CompanyContact::get()->last()->designation
CompanyContact::get()->last()->department
CompanyContact::get()->last()->contacts
use\040Carbon\134Carbon;
Carbon::parse('2020-05-26T16:00:00.000000Z')
Carbon::parse('2020-05-26T16:00:00.000000Z',\040'Asia/Kuala_Lumpur')
Carbon::parse('2020-05-26T16:00:00.000000Z',\040'Asia/Kuala_Lumpur')->timezone('Asia/Kuala_Lumpur')
use\040App\134Models\134Company
Company::latest('created_at')
Company::latest('created_at')->first()
$serial\040=\04000001
$serial\040=\040(float)\040000001
$serial\040+\0401
$serial\040=\04000001
$serial\040+\0401
interface\040Broker\040{\012public\040const\040BEFORE_SUFFIX\040=\040'BEFORE_SUFFIX';\012}
Broker::BEFORE_SUFFIX
class\040R\012public\040static\040function\040getBroker()\040{
class\040R\012public\040static\040function\040getBroker()\040{
class\040R\040{\012public\040static\040function\040getBroker()\040{\012return\040$this;\012}\012}
R::getBroker()
class\040R\040{\012public\040static\040function\040getBroker()\040{\012return\040statix;\012}\012}
class\040T\040{\012public\040static\040function\040getBroker()\040{\012return\040app(static::class);\012}\012}
T::getBroker()
SerialBroker::bind('aaa',\040'aaa',\040'bbb')
SerialBroker::bind('aaa',\040'aaa',\040'bbb')
CompanyAccount::first()
CompanyAccount::getSerialBroker()
CompanyAccount::getSerialBroker()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
$r\040=\040"000000001"
$r\040=\040"000000001"
$r\040=\040"00001"
str_pad(2,\0400,\0405)
str_pad(2,\0400,\0405,\040STR_PAD_LEFT)
str_pad(2,\040'0',\0405,\040STR_PAD_LEFT)
str_pad(2,\040'0',\0405,\040STR_PAD_LEFT)
str_pad('2',\040'0',\0405,\040STR_PAD_LEFT)
str_pad('2',\040'0',\0405,\040STR_PAD_LEFT)
str_pad('2',\0405,\040'0',\040STR_PAD_LEFT)
str_pad('10',\0405,\040'0',\040STR_PAD_LEFT)
str_pad('10',\0405,\040'0',\040STR_PAD_LEFT)
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
1++
$r\040=\0401;
$r++
$r++
$r++
$r++
$r++
$r\040=\0401;
++$r
++$r
++$r
$r\040=\0401;
$r++
$r++
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getPreviousSerial()
CompanyAccount::getSerialBroker()->getPreviousSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
CompanyAccount::getSerialBroker()->getNextSerial()
DB::table('nature_business')->all()
DB::table('nature_business')->get()
DB::table('nature_businesses')->get()
DB::table('nature_businesses')->get()->pluck('name')
use\040App\134Models\134CompanyAccount
CompanyAccount::first()
CompanyAccount::first()->businessNature
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts()
CompanyAccount::first()->contacts
CompanyAccount::first()->contacts()->toSql()
CompanyAccount::first()->contacts()->getBindings()
CompanyAccount::first()->contacts()->getBindings()
CompanyAccount::find('4c63f9fc-8fee-4176-be5e-beb70478f38e')->contacts()->getBindings()
CompanyAccount::find('4c63f9fc-8fee-4176-be5e-beb70478f38e')->contacts
CompanyAccount::find('4c63f9fc-8fee-4176-be5e-beb70478f38e')->contacts()->toSql()
CompanyAccount::find('4c63f9fc-8fee-4176-be5e-beb70478f38e')->contacts()->toSql()
CompanyAccount::find('4c63f9fc-8fee-4176-be5e-beb70478f38e')->contacts
$roles\040=\040['STAFF',\040'ADMIN']
$should\040=\040['CRM\040ADMIN']
array_diff($roles)
array_diff($roles,\040$shoul)
array_diff($roles,\040$should)
array_diff($should,\040$roles)
!array_diff($roles,\040$should)
$should\040=\040['CRM\040ADMIN',\040'CRM\040SALES]
$should\040=\040['CRM\040ADMIN',\040'CRM\040SALES']
$roles
!array_diff($roles,\040$should)
$roles[]\040=\040'CRM\040STAFF'
$roles
!array_diff($roles,\040$should)
$roles[]\040=\040'CRM\040SALES'
!array_diff($roles,\040$should)
$roles
$should
array_intersect($roles,\040$should)
$t\040=\040['HR\040ADMIN']
array_intersect($t,\040$should)
use\040App\134Models\134Service;
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs
use\040App\134Models\134Service;
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs()->toSql()
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs()->toSql()
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs
use\040App\134Models\134Service;
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs()->toSql()
Service::find('53b0de9d-94d4-4442-8825-2202af71e9bd')->childs
use\040App\134Models\134Service;
Service::find('074c06cd-3b79-4350-8f4c-c69d8fc195a2')
Service::find('074c06cd-3b79-4350-8f4c-c69d8fc195a2')->parent
use\040App\134Models\134Term;
Term::find('74a202a3-78c9-48e3-9a22-8c6c2c8d57d5')
Term::find('74a202a3-78c9-48e3-9a22-8c6c2c8d57d5')->inputs
BOM::addField()
BOM::addField()
BOM::addField('name',\040function($field))
BOM::addField('name',\040function($field)\040{});
BOM::addField('name',\040function($field)\040{});
BOM::addField('name',\040function($field)\040{});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');$field->alias('Check\040Box');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');$field->alias('Check\040Box');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');$field->alias('Check\040Box');\040});
BOM::addField('name',\040function($field)\040{\040$field->addOption('Required');$field->alias('Check\040Box');\040});
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)
app(R::class)->all()
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->all()
app(R::class)->get('textbox')
app(R::class)->get('textbox')->getOptions()
app(R::class)->get('textbox')->getOptions()
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->all()
app(R::class)->get('checkbox')
app(R::class)->get('checkbox')->getOptions()
app(R::class)->get('selectbox')->getOptions()
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->get('checkbox')->getOptions()
app(R::class)->get('checkbox')->getOptions()
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->get('checkbox')->getOptions()
app(R::class)->get('checkbox')->hasOption('required')
app(R::class)->get('checkbox')->hasOption('required')
app(R::class)->get('checkbox')->hasOption('required')
app(R::class)->get('checkbox')->hasOption('required')
app(R::class)->get('checkbox')->hasOption('Required')
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->get('checkbox')->hasOption('required')
app(R::class)->get('checkbox')->hasOption('requiredd')
app(R::class)->get('selectbox')->hasOption('required')
use\040App\134Registries\134BOMFormFieldRegistry\040as\040R;
app(R::class)->get('selectbox')->hasOption('required')
app(R::class)->get('selectbox')->getOptions()
use\040App\134Models\134Remark
Remark::first()
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark()
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark()->create(['description'\040=>\040'test',\040'active'\040=>\040true])
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark()
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark()->create(['description'\040=>\040'test',\040'is_active'\040=>\040true])
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark()->create(['description'\040=>\040'test',\040'is_active'\040=>\040true])
use\040App\134Models\134ClaimRequest;
use\040App\134Models\134ClaimRequest;
ClaimRequest::find('f703678c-9744-453f-85a8-e581490040cb')->remark
decrypt('eyJpdiI6IlRwNjBobEM3ZTJIanhWa1M2VlR0b3c9PSIsInZhbHVlIjoiSjlHOFZxTUpXOEozM2syTTgybHRENk5xb3lxQlJuRjBIWUpMSlNjdkI4aGkyUG5tZFl4eDNSN1BFdytXQ1pDMHdXSU5JRDVDOFFiSmNDMGdGWmo3NlltZ0RmcnpwOWlzREhIRFFMM2MwamdmYjZqNDk2ZHVkQmdqU2FDanZsdkxLMXVXaXE2MlRDclV1SlZHb2F0dU0xa1ZtNUJMOTVwRElpRmJaRytMcDlLbFR5NXduODJJWHYwQ0dSRlE2QWpSIiwibWFjIjoiY2NjNGYzZmI3YmIzMGQyNTNjNmFiNjIxYTc1MmIzNTA2OTdhOTBmMjZhNjg3NWY4NDFjMzMzNDAzMmY1YTUyMCJ9')
use\040App\134Models\134TravelRequest;
TravelRequest::find('d1569ded-b736-4f2c-8b46-3791c5017268')
TravelRequest::find('d1569ded-b736-4f2c-8b46-3791c5017268')->remark
TravelRequest::find('d1569ded-b736-4f2c-8b46-3791c5017268')->remark
bcrypt(111111)
bcrypt(11111111)
use\040App\134User;
User::create(['id'\040=>\0401,\040'email'\040=>\040'admin@admin.com',\040'name'\040=>\040'Admin',\040'password'\040=>\040bcrypt(111111),\040'balance'\040=>\040100000]);
User::create(['id'\040=>\0401,\040'email'\040=>\040'admin@admin.com',\040'name'\040=>\040'Admin',\040'password'\040=>\040bcrypt(111111),\040'balance'\040=>\040100000,\040'role'\040=>\040'admin']);
use\040App\134Models\134OauthClient;
OauthClient::all()
OauthClient::find('fa603401-2778-4e3d-ae31-d0040e237b0f')
OauthClient::find('fa603401-2778-4e3d-ae31-d0040e237b0f')->update(['redirect'\040=>\040'http://hrms-vue.test/auth/callback'])
OauthClient::find('fa603401-2778-4e3d-ae31-d0040e237b0f')
app('bb-auth-server')
app('bb-auth-server')->getRedirectTo()
app('bb-auth-server')->getRedirectTo()
bcrypt(111111)
clear
encryp(Str::uuid())
use\040Str;
encryp(Str::uuid())
use\040Illuminate\134Support\134Str;
encryp(Str::uuid())
encrypt(Str::uuid())
encrypt(uuid())
encrypt(str_random(50))
use\040BillingService;
BillingService::isAuthenticated()
use\040BoneyBone\134BillingService\134Contracts\134Store\040as\040S;
app(S::class)
use\040BoneyBone\134BillingService\134Contracts\134Store\040as\040S;
app(S::class)
use\040BoneyBone\134BillingService\134SessionStore;
app(SessionStore::class)
use\040BoneyBone\134BillingService\134SessionStore;
app(SessionStore::class)
use\040BoneyBone\134BillingService\134Contracts\134Store\040as\040S;
app(S::class)
app(S::class)->set('a',\040'a')
app(S::class)->get('a')
bcrypt(111111)
BillingService::isAuthenticated()
bcrypt(111111)
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
config('billing-service.client_id')
config('billing-service.client')
config('billing-service.client_endpoint')
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
clear
clear
app(R::class)
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
use\040BoneyBone\134BillingService\134Contracts\134RequestClient\040as\040R;
app(R::class)
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::authenticateSDK()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::isAuthenticated()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::isAuthenticated()
use\040BoneyBone\134BillingService\134Contracts\134Store\040as\040S;
$store\040=\040app(S::Class)
$store\040=\040app(S::class)
$store->set('access_token',\040'asassss')
$store->get('access_token')
60*60*60
use\040BoneyBone\134BillingServices\134Registries\134EntityRegistry\040as\040E
app(E::class)
use\040BoneyBone\134BillingService\134Registries\134EntityRegistry\040as\040E
app(E::class)
app(E::class)->all()
use\040BoneyBone\134BillingService\134Registries\134EntityRegistry\040as\040E
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
app(E::class)->get(InvoiceEntity::class)
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::use('invoice')
BillingService::use(Invoice::class)
BillingService::use(InvoiceEntity::class)
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::isAuthenticated()
BillingService::authenticateSDK()
BillingService::isAuthenticated()
BillingService::getAccessToken()
clear
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::getBillingServiceEndpoint()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
clear
BillingService::getAccessToken()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list(['invoice_ids'\040=>\040'1'])
$r\040=\040[1,2,3,4]
implode(",",\040$r)
BillingService::use('invoice')->list(['invoice_ids'\040=>\040'1'])
use\040GuzzleHttp\134Client;
$client\040=\040new\040Client(['base_uri'\040=>\040'https://installer.allo.my/api/getslot/listall'])
$client->get('')
$client2\040=\040new\040Client(['base_uri'\040=>\040'https://rizalfakhri.id'])
$client2->get()
$client2->get('')
$client2->get('')->getBody()->getContents()
BillingService::authenticateSDK()
BillingService::authenticateSDK()
BillingService::isAuthenticated()
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
use\040BoneyBone\134BillingService\134Entities\134InvoiceEntity
BillingService::entity('invoiceeeee',\040InvoiceEntity::class)
BillingService::use('invoice')
BillingService::use('invoice')
bcrypt(11111111)
BillingService::use('customer')
BillingService::use('customer')->list()
BillingService::use('customer')->list()
BillingService::use('customer')->list()
clear
clear
clear
clear
clear
clear
clear
clear
clear
clear
BillingService::use('customer')->list()
BillingService::use('customer')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::use('invoice')->list()
BillingService::isAuthenticated()
BillingService::authenticateSDK()
clear
BillingService::use('invoice')->list()
BillingService::use('customer')->list()
BillingService::isAuthenticated()
BillingService::authenticateSDK()
clear
[\012\040\040"customer_addresses"\040=>\040array:24\040[
BillingService::getAccessToken()
strtotime("3\040january\0402020")
class_exists(BillingService::class)
class_exists(BillingServices::class)
Cache::flush()
BillingService::getAccessToken()
Cache::forget('*')
BillingService::getAccessToken()
BillingService::getAccessToken()
Cache::flush()
Cache::get('bb_billing_service_access_token')
BillingService::getAccessToken()
InvoiceBroker::hello()
InvoiceBroker::hello()
InvoiceBroker::hello()
InvoiceBroker::getService()
InvoiceBroker::getService()->use('invoice')
$theOptions\040=\040[]
$theOptions\040=\040array_merge($theOptions,\040[1\040=>\0402])
$theOptions
$theOptions\040=\040array_merge($theOptions,\040['1'\040=>\0402])
$theOptions\040=\040array_merge($theOptions,\040['1'\040=>\040'a'])
$theOptions\040=\040array_combine($theOptions,\040['1'\040=>\040'a'])
$theOptions\040=\040[1\040=>\0402]
$theOptions\040=\040array_merge_recursive($theOptions,\040['2'\040=>\040'a'])
$theOptions\040=\040array_merge_recursive($theOptions,\040['2'\040=>\040'a'])
clear
$realOptions\040=\040["size"\040=>\040"no"]
array_merge($realOptions,\040$realOptions)
array_merge($realOptions,\040$realOptions)
array_merge($realOptions,\040["color"\040=>\040"red"])
array_merge($realOptions,\040["color"\040=>\040"red"])
InvoiceBroker::make(106912)
InvoiceBroker::make(106912)->getInvoice()
InvoiceBroker::getInvoice()
InvoiceBroker::getInvoice()
InvoiceBroker::make(106912)->getInvoice()
InvoiceBroker::make(106912)->getInvoice()
InvoiceBroker::make(106912)->getInvoice()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
InvoiceBroker::make(106912)->getInvoice()->isPaid()
panel_name()
app('modules')
app('modules')->all()
User::first()->isAdmin()
clear
app('modules')
app('modules')->all()
app('modules')->find('Reseller\040Module')
app('modules')->find('Reseller\040Module')->getName()
PluginManager::hello()
Module::all()
Module::boot()
Module::boot()
Module::get()
Module::find()
Module::find('ResellerModule')
Module::find('ResellerModule')->getTitle()
PluginManager::getAdminMenu()
base_path()
bcrypt(111111)
bcrypt(111111)
clear
API::successResponse()
ReceiptBroker::hello()
ReceiptBroker::make(1)
ReceiptBroker::make(12797)
ReceiptBroker::make(12797)->getReceipt()
ReceiptBroker::make(12797)->getReceiptItem()
ReceiptBroker::make('R000005087')->getReceiptItem()
ReceiptBroker::make('R000005087')->getReceipt()
ReceiptBroker::make('R000005087')->getReceipt()
ReceiptBroker::make('R000005087')->getReceipt()
ReceiptBroker::make('R000005087')->getInvoice()
BillingService::use('receipt')
BillingService::use('receipt')
ReceiptBroker::make('R000005087')->register()
ReceiptBroker::make('R000005087')->register()
ReceiptBroker::make('R000005087')->register()
ReceiptBroker::make('R000005147')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
use\040Carbon\134Carbon;
Carbon::parse('2020-05-06\04016:53:41')->format('d\040f\040Y')
Carbon::parse('2020-05-06\04016:53:41')->format('d\040F\040Y')
Carbon::parse('2020-02-06\04016:53:41')->format('d\040F\040Y')
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
ReceiptBroker::make('R000005104')->register()
:q
use\040App\134Contracts\134Concerns\134Link;
app(Link::class)
Alert::primary('aa')
Alert::primary('aa')
Alert::primary('aa')
Alert::primary('aa')
Alert::primary('aa')
Alert::primary('Please\040click\040:configure_plugin_link:\040to\040configure\040the\040plugin!')
Alert::primary('Please\040click\040:configure_plugin_link:\040to\040configure\040the\040plugin!')
Alert::primary('Please\040click\040:configure_plugin_link:\040to\040configure\040the\040plugin!')
Alert::primary('Please\040click\040:configure_plugin_link:\040to\040configure\040the\040plugin!')
Alert::primary('Please\040click\040:configure_plugin_link:\040to\040configure\040the\040plugin!')
Alerts::getAlerts()
Alert::getAlerts()
Infobox::hello()
Infobox::hello()
use\040App\134Services\134Infobox
use\040App\134Services\134Infobox\134PlainInfobox
app(PlainInfobox::class)
app(PlainInfobox::class)->getView()
app(PlainInfobox::class)->getView()->render()
app(InfoboxRegistry::class)
use\040App\134Registries\134InfoboxRegistry\040as\040I
app(I::class)
app(I::class)->all()
Infobox::getBoxes()
app()->getNamespace()
Livewire::component()
use\040phpseclib\134Crypt\134RSA
$rsa\040=\040new\040RSA()
$rsa->SetPublicKeyComment('sshpanel-key-vault')
$rsa->setComment('sshpanel-key-vault')
$rsa
extract($rsa->createKey())
$rsa->setPublicKeyFormat(RSA::PUBLIC_FORMAT_OPENSSH);
$rsa->createKey()
use\040App\134Contracts\134Infobox;
app(Infobox::class)
app(Infobox::class)
class\040R\040{}
class\040R\040{\012public\040function\040__construct($v)\012$this->v\040=\040$v;
class\040R\040{\012public\040function\040__construct($v)\040{\012$this->v\040=\040$v;\012}\012}
$t\040=\040new\040R('server')
$y\040=\040new\040R('dns')
$u\040=\040array()
$u[]\040=\040$t
$u
$u[]\040=\040$y;
$u
clear
ServerUtils
ServerUtils::getSoftware()
Userinfo::all()
Userinfo::update(['ix_billing_customer_id'\040=>\040null])
Userinfo::whereNotNull('ix_billing_customer_id')->update(['ix_billing_customer_id'\040=>\040null])
Userinfo::whereNotNull('ix_billing_customer_id')->update(['ix_billing_customer_id'\040=>\040null])
decrypt("eyJpdiI6IjBtWTFBWDVJNFNKUktmcVk5TXNDZVE9PSIsInZhbHVlIjoiYkZiN2NjVmgxdTNrc2w2WW9MUFBuNDg3THgxSjF3bFU1ZStiV0p5bU14ampzb3BBMjRtMUIreVN0OGdJVGlocDNLVWJXalhzUkJ4aUMyem9nU2NtRE9WNEVzZGVkdnRDV0swblFrWlZSSWI2RVIwQUxuTUhtbE5QVnQ1cklFTUx3TEpLOUhSbFBXRWRObWE1QUtGRXpBUlQ2bWtTbStrejFacE56dzN0TVJFczZPMnh2NHpEWXE3a0hVNHNyTkYxckZ5RjdVQUVrbzIvS3V2WHFTNWduRERvMHMzUElvQmtldWR2MXFqV3F6QVAxcjM4UXdtT1J0d0VJNjlrVEllNmZrWkp6RFMvc28zNFBTdE0ycE43TmdLdmREN3phWDFoczM3SFJmYzVtUWZuSmZyK3hPamM2TzVRZ1Y2UnhIL0hHQU1iaFVuSW8zK2M3MkkwQnl3U0dRc1NPK0xuejBVWG16MC9ZZUpQMWEzSERyaVJvUmR6MnE1L1JHQXkxZWdaRVZYcG0rZ3M1U2dvTTk0alpHN3BLN2x1RDk1bFl4VU5xSTdHYkxOTTM1em1Tc0FMTllBY2IrUlc2ZnNOMlhmNDBieURBWHpTZVBxY1I3Z2gwTFd4allVTVczOTVGUEI3bUFpOS9VRkpUNHlXSThkK2NDbUV4Z3UzcGxVamtrMHl6amRNckUwRXJFREtGcmd2eWt1elQ3aXVJdnNITFdkMk1SSEowaHZ5Q0I1Yis1VUYyMG5KMVNCWE96QStaYjl1QUhWaGR1NmZxemZ0NkpqVEhSeUVxcUpGbEJOdkd3MWFXQmRBbkZCUTV1YnlSL21IanEycDVqTDFrUzVySmYvcDFrRFBHN21IZnhYZXByM2Nra3FnZktZSGpjd2RXamFhN0dzYmg3RWF5ckxDRlFtWW5FRHZ4dHVYVko3L3huVDlkNVh5YUc4eGszMW5kKzJDOXJsSUJiY0xzRVVOOGt0MVdKeG5EaEJLM3JxamxsbGNVdUpZNmJ0RXJacTQ3a09BSFNOTFBLU1dYMk8xNnFHT1FCQ0NEa3VrZlQ4Q1R1S2laUHVWWnRNUHpnRThvQ1htWWVrVFpUVFZkRDdCdFEwdURCck9ibGNsMnFnbzhZSXBORjNvblR3Lzl6dW11ZnR0Y1dQVERhZWFXeW5EVFF6SlgySlE1eVBZeTR2aGF6dzlSQXNBRm5CakwvcnNhMkFabVgvRkhXZ3JRNzcycWxDUnRRQWJFKzN2UmpsdGZCNDRVNUExSUZEUFo3bjl6MVVOQVN5ekJiR05GL2JKT0ZlaVFLMFZrYU9qTGJHN3l2VE1IaVdLWHo3a0tneGNwRzBRbVNuaERkQk1ZT1NNSEFwYXRFVy9sU29mZ3lNNUtvZjVnWnNuMzE2M1NhT1BxbFZyMm5qcFBsemNZbEtQWXAvVWNiblViTGpNZ0s0TFF4UFpRRUtSU0lUNmE4MVZhbGY4SXRRTWpadGhFL3BqQkZtMTZhVmdLSkdhOW1ic29lYmd1RVBrMWlUaEtXNm1SY1FYOG1GWDU0bWluR0VsZStSOGNFN0s3WS9WOWdtb1B2VXNVU2tYdndwTnRoV1dhbjJSYzVSdi9memV2OUh4TVBwNlVrWit6L1NGTGFVV1kxTjhFdWhzWnZTK3JFV1d0VElYdmsxRHpLYmcxSG4yWkdEL0x6TW1iNHZsdVFib0c1VXlWRlhBVHdyanJiQW1rWUVTM3U0OTdISmoyUklVdm1aNmFKWGhMU1V4clZGQ3NZUDVpYzAzQnFva3FHNmo5Ujl0MW50dWVHWXRROXZpZXJ1U3NUUk9KSC9GWnNrRExaK0xQMVJuTUVVRzJ1WmFlekI4ZXI4MDUxdEFUVnE2cjBoTWdlc1VhRit5M2szMDA2K1dXcXFzRmNVNzNPNDlNdTJZSmxHa2RaVHlpVEpScFhGTDlIY3JENCs3aitUbzMzWGJjMnhUOTJVT015VzZ1Z1pDQ2I2T1dzMGhqTFBhQXdMSklRVldvY3dxTnEwVVlrYmErTDQ5N1RiYzBpcXRxdWdjNzREcWNoRVFrNk13VXpyN3R0OVdxSStyTVlCWEs3eTYxaGVFMGI3VGV3eE5HRFZZUDlORGYraklHb0NLVzFqcGh5ZkhMNFMwTjJtRS9WekgrWjZsVjdibHJyaFBCSHZSZHZHcmF6SmxmSlpySFNyb0ZhY3VrbmJiYUxFTkFUdFhCdmcwdlZ6TWtQSGxpWjZmMHdPOGUralg5TmxLd0VOeXArdDJFdWlmSnJBSllpcXZpTVZKZWxIZFV5LzBzMWM3ZGl3SUhaUnZJK0s2elNjM3Rkd3BrcFV1VjIyM3BIbjlYOS9Nd1RMYTUxT09KS2MwREtyUy9aVUUwZDNEZVYvRmtGeFdQVFJwQU5nMm5qSkpZZVpHZW1hVHNNb3ZsZTNMZ2lJU3crMzBnbVpVVEV3VGNVUy9EeUFiNEhNTG5tc2NlNFNXMjlKRjcxYms0Rld3aVF5aklhdVNmMkw2U3pRMWdhNC8xbFZ3cWxJQ1RFU3dncGJMajYxdTUvU1pQNW1BTjZhdmNCODlabzdrdHBuemlqRElFNVJjbktnRDI0OGRnaHlVZlIwQXpTYlhKbEZ3RnJBNWFUZ0hiY0k2MndvaFpEVmE0Tk5pd2YybnpZUm1UVjBpYUQvUzlsY3Vwb0EzYTZLalpjRlM4SFAxSWNvd0JZN0N0R1FNYmEyM2Q1ZU95S1RsajFuelpmN2NGQk5Td1JNSXFkTEpDWVdRYjRibW5seVlEQ250bDZMcmZSTDdmcUZVOHZERGVtREJXeDhxV1ZBQThVSkUrMmJMN0JPWnkrN2gwdXZSVUZYMUE4UTByY3VMOGdjZThxRlFldDhBN3VXc3JlSkxvM2hhbnBsb01jZDN4K1Z0UVd2bGIyKzdzb002TTF5c20yclgvdFZhZGE5K1N4eEh0SllwRlowNXk2S1N3bjdTaWliSjdFUHhlU3ZxRTJRV3lHaVlsT1F4dkw5ZFRjYjJtaHdxSThmWm80dk12eUhWbE0vOE9qb2N1T1JNanZYQXpPaVN3WmtISnpvZ0pWNnhyRnlWUG9zMDVOVFlxTDZaVzBwNzRzQkJzZ2V0MjlMVDJEN2Vad3gwRCtQT0xyUlRRMjNRSGtHeEcvRG9IdWsvV0V0VlhNZkNnMDRwY0crZmE0c3YwRzlzalVMRXBOTzFKSzdyN09xRlBPUHB2MkpDS3hpMHJIVnpCb081NGVuR1BBQlY0NytyVlp2aHYvc21RMG1jQ3NhWDFQTm0zVm5zQkVraituNmhBeXFiVUxkVWZWU2ZQeGNZOS9hMkdoaGZibzBXekZOb0tnc3J3NGhmQnZEdndYcER6b293S0F0RUM0SWFWeXZMUzk2NDlzd0NSQ1RmVkUvWnJ1TmhaSWNhUFFOTWpWM3BXQm5PVUhMZnQxVEFtVXVQYTJvZmlEQkZwMnVLdlR2TWRrK1BUMnM5aGRwL1hpN0p1RTJBanhXa3kweGRyREIvU1lTZE1yaTU0bnNLUW80MTArU3FBcjNqSitHZDI2S2JtV3FYZjJFWkJTc2tJL1gyeG90MDdpVTN5c3M0NWVlVEdJNEsxbnNuZHhLWFNPYmlCbTFxdGhGcE9QcUdQS1Fta3RGTmhOMzkxY0pYL3F0VUdCcHhBTkx4QTd3SkVHbjVDZm9XTS9vd0VhYjRYdlZJYkJET3dvaWVYN2NraDViMUZvZlVqQzlScWovVHRDNGdDREZScnhkNkRzbDE4a1ppWm95V21teGx5ckM5eEU3UHJHMUVuRGFmNW9PTmNNL1ZQU3hTVUZHdC9qUllnR0hiWEFudXRuMk5xdUNxbFVyUmNaLzR2TTBXaWt4dVBmanowMXVKTFF3d0xUREFDS3E4UUlhQkxRMjZPTTRmTTVzK3MzVy9tSFVHc1lBY3dQUzhoRDRCNlp1NW1KNFRpc0d5d2VGYnlSTlpNY1VKOWVCNXJxVUZ5eGtHRHNlWHN3UEoyOTZsMHQ5TXF6NXJldlZmZ0trQUJWWlJOazAzSTZId3dpZzNOZUNxcEprN0NTMWM1RGIvQW9UZk9SK0ZRbU9RbE5Od3NKN3hCbkcrYzJhMlRyejI5WU1mMEdCUUVmLzA5MWxEN0tucThZbkJwcFMzSmVtZDJGSUVnZnF6MUJHbXZXZy91TXpqRjBpU1ByeW8xK2hhOUlHU0kwaG9IQ2xKaXNsQzZRZDdWUXhaN0JxanpCYkxjWkhEUjdBQWRaZDBJOGZNZ0dTMTFsUnFiS1ZOZHJ3a1o4NU93T0xpaHNsa1NRNmZYVHk0Ykxyclg1WUlGSDduSzNKc1ViaWRJemp5bnIvbmxURlBramRFSitpdVBTY0Qzb1FuUll3eXFyMHNwZlZOZWdhelFKY3pWSGk2TGZOZEExWExabkgvYlhUeXhwUkU0S2x2MmNqd1ZGNldhTmlPYkdzaGZGaGFVbk5JUmtYRTh1UGgrditDSEhiMTVwcHRyOWs2bGZ0Vzd2UldMclVGdkhKdWdyc2doWUxqMVI5NERFdkFDemMvY2VvK051Lzg2cWdCaXI0PSIsIm1hYyI6IjE1ODFlMTU5ZjE3ZWQ4OWUyMzYzNTMwODQzYmIyZGZhZjhhZDUzNzEwN2MyYTRhZjUxMTlmMGEyNzc3MTQyYjQifQ==")
url('/')
encrypt(16)
Byte::hello()
Byte::format(0x80233)
Byte::format(11111)
Byte::format(10)
Byte::format(1)
Byte::format(123112123123)
Percentage::calculate(50,\040100)
$days\040=\04090;
use\040Carbon\134Carbon;
$today\040=\040Carbon::today()
$expired\040=\040Carbon::today()->addDays($days)
$today->diffInMonths($expired)
$today->floatDiffInMonths($expired)
ceil($today->floatDiffInMonths($expired))
clear
use\040App\134Contracts\134Server\134Service
Service::STATUS_ONLINE
use\040App\134Contracts\134Server\134Service
app(Service::class)
use\040App\134Server;
$server\040=\040Server::first()
use\040phpseclib\134Net\134SSH2;
$ssh\040=\040new\040SSH2($server->ip)
$rsa\040=\040new\040RSA()
use\040phpseclib\134Crypt\134RSA
$rsa\040=\040new\040RSA()
$rsa->loadKey($server->private_key)
$ssh->login('root',\040$rsa)
use\040phpseclib3\134Crypt\134Common\134PrivateKey;
$rsa\040instanceof\040PrivateKey
app(PrivateKey::class)
$rsa2\040=\040new\040RSA
$rsa2->setPublicKeyFormat(RSA::PUBLIC_FORMAT_OPENSSH);
$rsa2->createKey(2048)
$key\040=\040$rsa2->createKey(2048)
$server->update(['public_key'\040=>\040$key['publickey'],\040'private_key'\040=>\040$key['privatekey']])
$server->update(['public_key'\040=>\040$key['publickey'],\040'private_key'\040=>\040$key['privatekey']])
$server->public_key
$server->private_key
$server->private_key
$server\040=\040$server->fresh()
$server->update(['public_key'\040=>\040$key['publickey'],\040'private_key'\040=>\040$key['privatekey']])
User::first()
encrypt(20)
use\040Carbon\134Carbon;
Carbon::today()->format('d\040F\040Y')
$script\040=\040['aaa',\040'aaaaaa']
$addScript\040=\040['bbb',\040'bbbbbbb']
$script
$addScript
array_merge($script,\040$addScript)
$addd\040=\040['ccc',\040'ccccccc']
array_merge($script,\040$addScript)
array_merge($script,\040$addScript,\040$addd)
use\040Carbon\134Carbon;
Carbon::createFromDate('2020',\040'12',\040'31')
sprintf("%s,\040%s",\040$date\040=\040Carbon::now();\040$date->format('F'),\040$date->format('Y'))
sprintf("%s,\040%s",\040$date\040=\040Carbon::now()->format('F'),\040$date->format('Y'))
sprintf("%s,\040%s",\040$date\040=\040Carbon::now()->copy()->format('F'),\040$date->format('Y'))
use\040phpseclib\134Crypt\134RSA
$rsa\040=\040new\040RSA()
encrypt('Nf7rcR1dQB')
encrypt('k59Enc1mLr')
encrypt('F64Tcyh7')
factory(\134App\134User::class)->create()
factory(\134App\134User::class,\0405)->create()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
$user\040=\040User::first()
use\040App\134Notifications\134TestNotification;
$user->notify(new\040TestNotification($user))
use\040App\134Notifications\134TestNotification;
$user\040=\040User::first()
$user->notify(new\040TestNotification($user))
use\040App\134Notifications\134TestNotification;
$user\040=\040User::first()
use\040App\134Notifications\134TestNotification;
$user->notify(new\040TestNotification($user))
use\040App\134Notifications\134TestNotification;
$user->notify(new\040TestNotification($user))
use\040App\134Notifications\134TestNotification;
$user->notify(new\040TestNotification($user))
$user\040=\040User::first()
$user->notify(new\040TestNotification($user))
use\040App\134Models\134ApprovalRequest
use\040App\134Models\134ClaimRequest
$claim\040=\040ClaimRequest::find('45fb5ad3-6f32-4d72-b811-4d7cefd01f9f')
$approval\040=\040ApprovalRequest::find('1db278a0-c096-4787-b141-c706fe6c0977')
use\040App\134Notifications\134Approval\134MonthlyClaimApprovalRequest;
use\040App\134Models\134User
$user\040=\040User::find('d89049a5-aa28-4d55-90bf-0ab31d3c9858')
$user->notify(new\040MonthlyClaimApprovalRequest($claim,\040$approval))
use\040App\134Notifications\134Approval\134MonthlyClaimRequestApproval;
$user->notify(new\040MonthlyClaimRequestApproval($claim,\040$approval))
use\040App\134Notifications\134Approval\134MonthlyClaimRequestApproval;
$user\040=\040User::find('d89049a5-aa28-4d55-90bf-0ab31d3c9858')
use\040App\134Models\134ClaimRequest
use\040App\134Models\134ApprovalRequest
$approval\040=\040ApprovalRequest::find('1db278a0-c096-4787-b141-c706fe6c0977')
$claim\040=\040ClaimRequest::find('45fb5ad3-6f32-4d72-b811-4d7cefd01f9f')
$user->notify(new\040MonthlyClaimRequestApproval($claim,\040$approval))
app('mail.manager')
config('mail.driver')
app('mail')
config('ig('mail')
config('mail')
config('mail')
$user\040=\040User::inRandomOrder()->first()
use\040App\134Models\134User;
$user\040=\040User::inRandomOrder()->first()
use\040App\134Notifications\134TestNotification
$user->notify(new\040TestNotification($user))
now()->format('Y/m/d\040h:i:s')
optional($adddd)
$adddd\040??\040''
optional(throw\040new\040\134Exception)
$r\040=\040new\040\134Exception;
optional($r)
function\040r()\040{\012throw\040new\040\134Exception;\012}
optional(r())
ServerUtils::getHookAction('register_server_software')
ServerUtils::getHookAction('register_server_software')
ServerUtils::getHookAction('register_server_software')
ServerUtils::getHookAction('softether_register_server_certificate')
encrypt('RPJslCg1')
encrypt('OavcxEaql5')
decrypt('eyJpdiI6IkJ3U25ZVklucWM4dmwwU0hVL3BNSmc9PSIsInZhbHVlIjoibWZNbjh4LzlBUHc5djFNTjIxa0dHS0RLbUIySUVxVkZzQ25ReU9EVmVzUT0iLCJtYWMiOiIwOTczNWVjNTVhYWNkNDFlODZiNDgyNmEzY2JlMTRkMTVmZjZkZjBlZGY5MDJlY2UwNDQ4OTRiMjUxZWRkNjg2In0=')
decrypt('eyJpdiI6IlZHNVNuMDQzbEcxZktOTFRlb1pBVHc9PSIsInZhbHVlIjoiOG51WlRBV0laejJ0VEpTMktsYzQyV29VWThqNGhvc2pTWEJJbzdHSHF4TT0iLCJtYWMiOiJmZjNjMTc0Yjg2ODM2NGM2NTdiOGU1NWZlZTc4M2QwZDU4YjBhMTZlYzhkMGM1Y2FkN2I2MTU4ZjRlZDdiOTdlIn0=')
decrypt('eyJpdiI6IkZ2YzhNTkNlLzcveGgwTTVNelg2akE9PSIsInZhbHVlIjoiS3NBTnhZamNCSlJ2V1NzMWIzOFV5QT09IiwibWFjIjoiMDQwZTkyYThhMDdkM2FiMWM2YzdiODIyZTI5NmI0Y2I2YWNiZjY3NDUwOWJjYTVmMTUxYWZmNjViMmRjNWY0NCJ9')
decrypt('eyJpdiI6IlZHNVNuMDQzbEcxZktOTFRlb1pBVHc9PSIsInZhbHVlIjoiOG51WlRBV0laejJ0VEpTMktsYzQyV29VWThqNGhvc2pTWEJJbzdHSHF4TT0iLCJtYWMiOiJmZjNjMTc0Yjg2ODM2NGM2NTdiOGU1NWZlZTc4M2QwZDU4YjBhMTZlYzhkMGM1Y2FkN2I2MTU4ZjRlZDdiOTdlIn0=')
encrypt(111)
Shorter::hello()
Shorter::create('https://google.com')
Shorter::create('https://google.com')
Shorter::create('https://google.com')
Shorter::create('https://google.com')
Shorter::create('https://google.com')
use\040App\134Contracts\134Server\134ServerTab\040as\040T;
app(T::class)
BillingService::user('debit\040note')
BillingService::use('debit\040note')
(-1)\040*\040200
clea
UserPermission::hello()
User::first()
User::first()->getRoles()
User::class
User::class
User::first()->getRoles()
UserPermission::getAllPermissions()
User::find(5)
User::find(5)->getAbilities()
User::find(5)
User::find(5)->getAbilities()
User::find(5)->getPermissions()
User::find(5)->getRoles()
Userinfo
Userinfo::class
Userinfo::first()
Userinfo::getTable()
Userinfo::query()->getTable()
app(Userinfo::class)->getTable()
clear
round(1.0\040/\04024,\0401)
round(1.0\040/\04024.0,\0401)
round(1.0\040*\04024\040/\04024.0,\0401)
round(2.0\040*\04024\040/\04024.0,\0401)
round(2.5\040*\04024\040/\04024.0,\0401)
use\040Carbon\134Carbon;
$startDate\040=\040Carbon::parse('02-06-2020')
$endDate\040=\040Carbon::parse('02-06-2020')->endOfDay()
$startDate->floatDiffInDays($endDate)
$startDate->floatDiffInDays($endDate)\040*\04024\040/\04024
round($startDate->floatDiffInDays($endDate))
round($startDate->floatDiffInDays($endDate))
round($startDate->floatDiffInDays($endDate))
bcrypt(111111)
bcrypt(111111)
User::find('2d2b5954-f075-4dff-9270-c19d151ec549')
User::find('2d2b5954-f075-4dff-9270-c19d151ec549')->defaultIdentity
bcrypt(111111)
Money::amount(1000)->lowestDenominator()
$houses\040=\040DB::table('houses')->limit(100)
$houses\040=\040DB::table('houses')->limit(100)->get()
$houses\040=\040DB::table('houses')->limit(100)
serialize($houses)
$houses\040=\040DB::table('houses')->limit(100)
$houses\040=\040DB::table('houses')->limit(100)->get()
serialize($houses)
use\040App\134House;
House::first()
House::where('country_id',\0401)
$q\040=\040House::where('country_id',\0401)
serialize($q)
class\040R\040{\012public\040function\040house()\040{\012return\040House::all();\012}\012}
$r\040=\040new\040R
$r->house()
serialize($r)
$t\040=\040serialize($r)
unserialize($t)->house()
class\040P\040{\012public\040function\040setQuery($query)\012$this->query\040=\040$query;
class\040P\040{\012public\040function\040setQuery($query)\040{\012$this->query\040=\040$query;\012}\012public\040function\040getQuery()\040{\012return\040$this->query;\012}\012}
$query\040=\040House::where('country_id',\0401)
$m\040=\040new\040P()
$m->setQuery($query)
$m
$m->getQuery()->all()
$m->getQuery()->first()
serialize($m)
DB::getPDO()
DB::getPDO()
PDF::aa()
PDF::loadFile('https://github.com')
PDF::loadFile('https://github.com')->inline('github.pdf')
PDF::loadFile('https://github.com')->inline('github.pdf')
PDF::loadFile('https://github.com')->inline('github.pdf')
PDF::loadFile('https://github.com')->inline('github.pdf')
PDF::loadFile('https://github.com')->inline('github.pdf')
PDF::loadView()
PDF::loadView()
PDF::loadView('test')->stream()
use\040App\134Contracts\134HRMSImport\040as\040H
app(H::class)
bcrypt(111111)
sizeof([1,2,3])
clear
bcrypt('password')
:q
use\040Carbon\134CarbonPeriod
CarbonPeriod::createFromArray()
use\040Carbon\134Carbon;
$start\040=\040Carbon::parse('30-07-2020')
$end\040=\040Carbon::parse('03-08-2020')
$dateRange\040=\040CarbonPeriod::create($start,\040$end)
$dateRange\040=\040CarbonPeriod::create($start,\040$end)->filter()
$dateRange\040=\040CarbonPeriod::create($start,\040$end)->filter(function($date)\040{\040dd($date);\040})
$dateRange
$dateRange\040=\040collect(CarbonPeriod::create($start,\040$end))
$dateRange\040=\040collect(CarbonPeriod::create($start,\040$end))->filter(function($date)\040{\040return\040$date->isWeekday();\040});
use\040App\134Models\134User;
$user\040=\040User::inRandomOrder()->first()
$workingDays\040=\040collect(json_decode($user->working_days))
$workingDays\040=\040collect(json_decode($user->working_days))->toArray()
collect(json_decode('sdasdasdasd'))
now()->format('d')
now()->format('D')
now()->format('F')
now()->format('l')
$workingDays
use\040Carbon\134Carbon;
use\040Carbon\134CarbonPeriod
$start\040=\040Carbon::parse('30-07-2020')
$end\040=\040Carbon::parse('03-08-2020')
$dateRange\040=\040collect(CarbonPeriod::create($start,\040$end))->filter(function($date)\040{\040return\040$date->isWeekday();\040});
$dateRange->values()
$dateRange->count()
Event::class
use\040App\134Models\134Event;
Event::create(['event_type_id'\040=>\0401,\040'name'\040=>\040'Haji',\040'is_full_day'\040=>\040true,\040'start_date'\040=>\040\134Carbon\134Carbon::parse('2020-07-31'),\040'end_date'\040=>\040\134Carbon\134Carbon::parse('2020-07-31')])
use\040Carbon\134Carbon
$startDate\040=\040Carbon::parse('2020-07-28')
$endDate\040=\040Carbon::parse('2020-08-03')
app(Event::class)->where('start_date',\040'>=',\040$startDate)->where('end_date',\040'<=',\040$endDate)->get()
$events->firsts()
$events->first()
app(Event::class)->where('start_date',\040'>=',\040$startDate)->where('end_date',\040'<=',\040$endDate)->first()
app(Event::class)->where('start_date',\040'>=',\040$startDate)->where('end_date',\040'<=',\040$endDate)->start_date
app(Event::class)->where('start_date',\040'>=',\040$startDate)->where('end_date',\040'<=',\040$endDate)->first()->start_date
bcrypt(111111)
bcrypt(111111)
use\040Mattiasgeniar\134Percentage\134Percentage;
Percentage(6,\0402450)
Percentage::of(6,\0402450)
use\040App\134Models\134ClientRole
ClientRole::all()
ClientRole::awhere('oauth_client_id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->count()
ClientRole::where('oauth_client_id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->count()
ClientRole::where('oauth_client_id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->get()
$roles\040=\040ClientRole::where('oauth_client_id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->get()
$roles\040=\040ClientRole::where('oauth_client_id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->get()
UserRole::whereIn('client_role_id',\040$roles->pluck('id')->toArray())->get()
UserRole::whereIn('client_role_id',\040$roles->pluck('id')->toArray())->join('users',\040'users.id',\040'users_roles.user_id')->get()
UserRole::whereIn('client_role_id',\040$roles->pluck('id')->toArray())->join('users',\040'users.id',\040'=',\040'users_roles.user_id')->get()
UserRole::whereIn('client_role_id',\040$roles->pluck('id')->toArray())->join('users',\040'users.id',\040'=',\040'user_roles.user_id')->get()
Customer::find(64)
Customers::find(64)
Customers::find(64)->projects
Customers::find(64)->projects
interface\040a\040{}
interface\040b{}
abstract\040class\040c\040implements\040a,\040b\040{}
class\040d\040extends\040c{}
$d\040=\040new\040d()
D\040instanceof\040a
$d\040instanceof\040a
$d\040instanceof\040b
$d\040instanceof\040c
$d\040instanceof\040d
$d\040instanceof\040e
use\040App\134Contracts\134Reporting\134HasLists;
use\040App\134Contracts\134Reporting\134HasLists;
use\040App\134Contracts\134Reporting\134HasLists;
class\040R\040implements\040HasLists\040{}
route('filter_pipeline.lists',\040['ssfrwefkj4jf'])
app(App\134Registries\134FilterPipelineSectionRegistry::class)
app(App\134Registries\134FilterPipelineSectionRegistry::class)->all()
app(App\134Registries\134FilterPipelineRegistry::class)
app(App\134Registries\134FilterPipelineRegistry::class)->all()
app(FilterPipelineRegistry::class)
app(FilterPipelineRegistry::class)->all()
app(FilterPipeRegistry::class)->all()
app(FilterPipeRegistry::class)->all()
app(FilterPipeRegistry::class)->all()
app(FilterPipeRegistry::class)->all()
app(App\134Registries\134FilterPipelineSectionRegistry::class)->all()
app(FilterPipeRegistry::class)->all()
use\040App\134Registries\134FilterPiperRegistry
app(FilterPipeRegistry::class)->all()
app(FilterPipeRegistry::class)->get('rsp')
app(FilterPipeRegistry::class)->get('rsp')
app(FilterPipeRegistry::class)->get('rsp')
app(FilterPipeRegistry::class)->get('rsp')
app(App\134Registries\134FilterPipelineSectionRegistry::class)->all()
bcrypt(111111)
app(DealerAndAgentRevenueBreakdownList::class)
use\040App\134Services\134FilterPipeline\134SectionList\134DealerAndAgentRevenueBreakdownList;
app(DealerAndAgentRevenueBreakdownList::class)
use\040App\134Services\134FilterPipeline\134SectionList\134DealerAndAgentRevenueBreakdownList;
app(DealerAndAgentRevenueBreakdownList::class)
use\040App\134Services\134FilterPipeline\134SectionList\134DealerAndAgentRevenueBreakdownList;
use\040App\134Services\134FilterPipeline\134SectionList\134DealerAndAgentRevenueBreakdownList;
app(DealerAndAgentRevenueBreakdownList::class)
use\040App\134Services\134StorageProxy;
use\040App\134Services\134StorageProxy;
$proxy\040=\040StorageProxy::make('SOFTETHER-PANEL.zip',\040'confidential')
$proxy\040=\040app(StorageProxy::class)->make('SOFTETHER-PANEL.zip',\040'confidential')
$proxy->generateUrl()
use\040App\134Services\134StorageProxy;
$proxy\040=\040app(StorageProxy::class)->make('SOFTETHER-PANEL.zip',\040'confidential')
$proxy->generateUrl()
env('AWS_KEY')
use\040App\134Services\134StorageProxy;
$proxy\040=\040app(StorageProxy::class)->make('SOFTETHER-PANEL.zip',\040'confidential')
$proxy->generateUrl()
use\040App\134Services\134StorageProxy;
$proxy\040=\040app(StorageProxy::class)->make('SOFTETHER-PANEL.zip',\040'confidential')
$proxy->generateUrl()
Port::find(35)
Port::find(35)->companies
FilterPipelineSummary::create([])
FilterPipelineSummary::create([])
['danger',\040'warning',\040'primary'][0]
PDF::loadView()
use\040App\134Registries\134RevisionParserRegistry\040as\040R
app(R::class)
config('filter-pipeline-view')
app(FilterPipelineViewRegistry::class)
app(FilterPipelineViewRegistry::class)->all()
app(FilterPipelineViewRegistry::class)->get('fault_view
app(FilterPipelineViewRegistry::class)->get('fault_view')
$r\040=\040collect()
$r->append('a')
$r->prepend('a')
$r->appends('a')
config('mail-addresses')
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
app()->environment()
use\040App\134Services\134MailAddresses
app()->environment()
new\040MailAddresses('CORE_NETWORK')
app()->environment()
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses
new\040MailAddresses('SALES')
new\040MailAddresses('sales')
use\040App\134Services\134MailAddresses
new\040MailAddresses('sales')
new\040MailAddresses('sales')->getGroupEmailAddresses()
$mail\040=\040new\040MailAddresses('sales')
$mail->getGroupEmailAddresses()
$mail\040=\040new\040MailAddresses('core_network')
$mail->getGroupEmailAddresses()
$order\040=\040Order::find(81)
$order->details
$order->details->technical_contact
$order->details['technical_contact']
$order\040=\040Order::find(81)
use\040App\134Mail\134SGPurchase;
new\040SGPurchase($order)
$order\040=\040Order::find(81)
use\040App\134Mail\134SGPurchase;
new\040SGPurchase($order)
$order\040=\040Order::find(81)
use\040App\134Mail\134SGPurchase;
new\040SGPurchase($order)
now()
now()->format('d\040m,\040Y\040H:i:s')
now()->format('d\040F,\040Y\040H:i:s')
optional(null)['aaa']
Money::lowestDenominator(1050)
Money::lowestDenominator(1050)->withCurrency('MYR')
use\040Money
Money::lowestDenominator(1050)->withCurrency('MYR')
Money::lowestDenominator(105090)->withCurrency('MYR')
get_class(Money::class)
get_class(new\040Money)
Money::amount(9050)
Money::amount(9050)->lowestDenominator()
Money::amount(9050.4)->lowestDenominator()
Money::amount(900.30)->lowestDenominator()
Money::amount(900.30)->lowestDenominator()
Money::amount(900.30)->withCurrency('MYR')
Money::amount(900.30)->withCurrency('MYR')->format()
Money::amount(900.30)->withCurrency('MYR')->format()
Money::amount(203.50)->withCurrency('MYR')->format()
Money::amount(203.5888)->withCurrency('MYR')->format()
Money::amount(203.58)->withCurrency('MYR')->format()
Money::amount(203.584)->withCurrency('MYR')->format()
Storage::get('work_order_forms/MAXISPT000008_WO.pdf')
Comp
Company::find(12)
Company::find(12)->agents()->where('is_admin',\040true)
Company::find(12)->users
Company::find(4)->users
Company::find(4)->users()->whereHasRoles('RSP')
Company::find(4)->users()->whereHasRoles('RSP')->get()
in_array('MALE',\040['BOTH',\040'MALE
in_array('MALE',\040['BOTH',\040'MALE')
in_array('MALE',\040['BOTH',\040'MALE'])
use\040App\134Registries\134FilterPipelineTimelineRegistry\040as\040P
app(P::class)
app(P::class)->all()
use\040App\134Services\134MailAddresses;
new\040MailAddresses('CORE_NETWORK')
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
config(mail-addresses.prod.CORE_NETWORK\012)
config('mail-addresses.prod.CORE_NETWORK')
config('mail-addresses.prod.CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmails()
$r->getGroupEmailAddresses()
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
$r\040=\040new\040MailAddresses('CORE_NETWORK')
use\040App\134Services\134MailAddresses;
$r->getGroupEmailAddresses()
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getGroupEmailAddresses()
use\040App\134Services\134MailAddresses;
$r\040=\040new\040MailAddresses('CORE_NETWORK')
$r->getMemberEmailAddresses()
bcrypt(111111)
ListRenderer::all()
ListRenderer::all()
ListRenderer::all()
use\040App\134Registries\134ListRendererRegistry\040as\040R
app(R::class)
app(R::class)->all()
ListRenderer::all()
ListRenderer::has('port-breakdown-list')
ListRenderer::get('port-breakdown-list')
ListRenderer::get('port-breakdown-list')
ListRenderer::all()
ListRenderer::get('port-breakdown-list')
ListRenderer::get('port-breakdown-list')
ListRenderer::get('port-breakdown-list')->render()
ListRenderer::get('port-breakdown-list')->render()
ListRenderer::get('port-breakdown-list')->render()
array_combine([A,1])
array_combine(['A',1])
Order::first()
Order::first()->update(['status'\040=>\040'approved'])
Order::first()->update(['booking_id'\040=>\040'approved'])
$order\040=\040Order::first()
$order->status\040=\040'approved'
$order->save()
$order\040=\040Order::first()
$order->status\040=\040'approved'
$order\040=\040Order::first()
$order->status\040=\040'approved'
$order->save()
use\040App\134Registries\134InboxHandlerRegistry\040as\040R
app(R::class)
app(R::class)->all()
use\040App\134Registries\134InboxHandlerRegistry\040as\040R
app(R::class)->all()
Inbox::first()
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess()->toSql()
Inbox::first()->inboxAccess
Inbox::first()->inboxAccess()->whereIn('role_id',\040[1])
Inbox::first()->inboxAccess()->whereIn('role_id',\040[1])->get()
Inbox::first()->inboxAccess()->whereIn('inbox_role_access.role_id',\040[1])->get()
Inbox::first()->inboxAccess()->whereIn('inbox_role_accesses.role_id',\040[1])->get()
Inbox::whereHas->whereIn('inbox_role_accesses.role_id',\040[1])->get()
Inbox::whereHas('role_access')
Inbox::whereHas('inboxAccess')
Inbox::whereHas('inboxAccess')->get()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses',\040[1]);)->get()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses',\040[1]);\040})->get()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses',\040[1]);\040})->toSql()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses.id',\040[1]);\040})->get()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses.id',\040[1]);\040})->toSql()
Inbox::whereHas('inboxAccess',\040function($query)\040{\040$query->whereIn('inbox_role_accesses',\040[1]);\040})->toSql()
Inbox::whereHas('inboxAccess')->get()
Inbox::whereHas('inboxAccess')->get()
Inbox::whereHas('inboxAccess')->get()
Inbox::whereHas('inboxAccess')->get()
bcrypt(111111)
Order::latest()->first()
Order::latest()->first()->update()
Order::latest()->first()->update()
Order::latest()->first()->update(['status'\040=>\040'pending'])
$order\040=\040Order::latest()->first()
$order->save()
Order::latest()->first()->touch()
$order\040=\0400;
$range\040=\040range((1,5)
$range\040=\040range(1,5)
foreach($range\040as\040$k\040=>\040$v)\040{\012$order++;\012echo\040$order\040.\040PHP_EOL;\012|
}
foreach($range\040as\040$k\040=>\040$v)\040{\012$order++;\012echo\040$order\040.\040PHP_EOL;\012}
foreach($range\040as\040$k\040=>\040$v)\040{\012++$order;\012echo\040$order\040.\040PHP_EOL;\012}
$order\040=\0400
foreach($range\040as\040$k\040=>\040$v)\040{\012++$order;\012echo\040$order\040.\040PHP_EOL;\012}
$user\040=\040User::inRandomOrder()->first()
$user\040=\040User::inRandomOrder()->first()
$user\040=\040User::inRandomOrder()->first()
$user\040=\040User::inRandomOrder()->first()
$user\040=\040User::inRandomOrder()->first()
$user\040=\040User::inRandomOrder()->first()->approvals()
$user\040=\040User::inRandomOrder()->first()
$user->approvals(()->where('approval_type_id',\0402)->get()
$user->approvals()->where('approval_type_id',\0402)->get()
$user->approvals()->where('approval_type_id',\0401)->get()
$user->approvals()->where('approval_type_id',\0403)->get()
$user->approvals()->get()
$user\040=\040User::inRandomOrder()->first()
$user->approvals()->where('approval_type_id',\0403)->get()
$user->approvals()->where('approval_type_id',\0402)->get()
$user->approvals()->where('approval_type_id',\0401)->get()
$user->approvals()->where('approval_type_id',\0402)->get()
$user->approvals()->where('approval_type_id',\0402)->get()
$user->approvals()->where('approval_type_id',\0403)->get()
$user->approvals()->where('approval_type_id',\0403)->orderby('level')->get()
$user->approvals()->where('approval_type_id',\0403)->orderby('level')->get()
$user->approvals()->where('approval_type_id',\0403)->orderby('level')->get()
use\040Database\134Seeders\134StateSeeder\040as\040S
use\040Database\134Seeders\134StateSeeder\040as\040S
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
clear
use\040Database\134Seeders\134StateSeeder\040as\040S
clear
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134StateSeeder\040as\040S
app(S::class)->run()
use\040Database\134Seeders\134PodsSeeder\040as\040S
app(S::class)->run()
Pod::first()
Pod::first()->country
Pod::first()->country
Credit::hello()
use\040App\134Registries\134CreditGeneratorRegistry\040as\040R;
app(R::class)
app(R::class)->all()
Credit::hello()
Credit::hello()
Credit::make('invoice')
Credit::make('invoice')->hello()
Credit::make('invoice')->hello()
Credit::make('invoice')->hello()
Credit::make('invoice')->hello()
Credit::make('invoice')->setTransaction()
$amount\040=\0401
is_numeric($amount)
$amount\0409.4
$amount\040=\0409.4
is_numeric($amount)
$amount\040=\0409.4.4
$amount\040=\0409,5
$amount\040=\040"4.5"
is_numeric($amount)
$amount\040=\040"4.dswed5"
is_numeric($amount)
Debit::hello()
Debit::hello()
Debit::usingGenerator('invoice')
Debit::usingGenerator('invoice')->generate()
use\040App\134Services\134MailAddresses\040as\040M
User::whereHasRole('Service\040Delivery')
User::whereHasRole('Service\040Delivery')->get()
User::role('Service\040Delivery')->get()
use\040App\134Services\134MailAddresses\040as\040M
new\040M('SERVICE_DELIVERY')
new\040M('SERVICE_DELIVERY')
use\040App\134Services\134MailAddresses\040as\040M
new\040M('SERVICE_DELIVERY')
new\040M('SERVICE_DELIVERY')->getGroupAddresses()
new\040M('SERVICE_DELIVERY')->getGroupAddresses()
new\040M('SERVICE_DELIVERY')->getGroupAddresses()
use\040App\134Services\134MailAddresses\040as\040M
new\040(M('SERVICE_DELIVERY'))->getGroupAddresses()
$r\040=\040new\040(M('SERVICE_DELIVERY'))->getGroupAddresses()
use\040App\134Services\134MailAddresses\040as\040M
$mail\040=\040new\040M('service_delivery')
use\040App\134Services\134MailAddresses\040as\040M
$mail\040=\040new\040M('service_delivery')
$mail->getGroupEmailAddresses()
$mail->getMemberEmailAddresses()
$mail\040=\040new\040M('core\040network')
$mail->getMemberEmailAddresses()
$mail->getGroupEmailAddresses()
bcrypt(1234)
Dealer::create([])
Route::getRoutes()
Route::getRoutes()->all()
collect(Route::getRoutes())
config()
config('module')
config('api')
module_path('Api')
module_path('Api/ddd')
Storage::get('docs')
Storage::files('docs')
7000\040/\04070
70\040/\04070000
DB::getSchemaBuilder()
DB::getSchemaBuilder()->getColumnListing('credit_note_details')
DB::getSchemaBuilder()->getColumnListing('customer__details')
DB::getSchemaBuilder()->getColumnListing('customer_details')
CreditNoteDetails::find(8)
CreditNote::find(43)
CreditNotse::find(43)
CreditNotes::find(43)
CreditNotes::find(43)->customer
CreditNotes::find(43)->details
CreditNotes::find(43)->CreditNoteCustomers
CreditNotes::find(43)->CreditNoteCustomers->all()
CreditNotes::find(43)->CreditNoteCustomers->first()
CreditNotes::find(43)->CreditNoteCustomers->first()->Customer
CreditNotes::find(43)->CreditNoteCustomers->first()->Customer->CustomerDetails
DB::getSchemaBuilder()->getColumnListing('credit_note_details')
str_camel('a_a')
app()->version()
\134Str::camel('a_a')
\134Str::cuddly('a_a')
\134Str::cudly('a_a')
\134Str::studly('a_a')
\134Str::studly('billing_address1')
$addressProxy\040=\040[\012\040\040\040\040\040\040\040\040'billing_address1',\012\040\040\040\040\040\040\040\040'billing_address2',\012\040\040\040\040\040\040\040\040'billing_address3',\012\040\040\040\040\040\040\040\040'billing_city',\012\040\040\040\040\040\040\040\040'billing_country',\012\040\040\040\040\040\040\040\040'billing_email',\012\040\040\040\040\040\040\040\040'billing_postcode',\012\040\040\040\040\040\040\040\040'billing_state',\012\040\040\040\040\040\040\040\040'shipping_address1',\012\040\040\040\040\040\040\040\040'shipping_address2',\012\040\040\040\040\040\040\040\040'shipping_address3',\012\040\040\040\040\040\040\040\040'shipping_city',\012\040\040\040\040\040\040\040\040'shipping_country',\012\040\040\040\040\040\040\040\040'shipping_postcode',\012\040\040\040\040\040\040\040\040'shipping_state',\012\040\040\040\040];
clear
$addressProxy
collect($addressProxy)
collect($addressProxy)->map(function($method)\040{\040return\040'get'.\134Str::studly($method).'Attribute()';\040});
collect($addressProxy)->map(function($method)\040{\040return\040'public\040function\040get'.\134Str::studly($method).'Attribute()\040{}';\040});
use\040App\134Contracts\134Operator\134ChangePasswordPipeline\040as\040P
app(P::class)
bcrypt('DG4ptZX^efQSct7')
app()->version()
\134Str::singular('apple')
\134Str::singular('user')
\134Str::plural('user')
\134Str::plural('apple')
\134Str::plural('history')
User::first()
User::first()->passwordHistories
use\040App\134Contracts\134User\134ChangePasswordPipeline\040as\040P
app(P::class)
bcrypt('Kontol123##')
bcrypt('q2MF2ZMD$%MDvdP')
bcrypt(1234)
(bool)\040null
PasswordHistory::create(['user_id'\040=>\0401,\040'password'\040=>\040bcrypt(1234),\040'changed_at
PasswordHistory::create(['user_id'\040=>\0401,\040'password'\040=>\040bcrypt(1234),\040'changed_at'\040=>\040now()])
PasswordHistory::create(['user_id'\040=>\0401,\040'password'\040=>\040bcrypt(1234),\040'changed_at'\040=>\040now()])
PasswordHistory::create(['user_id'\040=>\0401,\040'password'\040=>\040bcrypt(1234),\040'changed_at'\040=>\040now()])
$order\040=\040app(Order::class)->find(132)
$company\040=\040$order->company
$users\040=\040$company->users
$users\040=\040$company->users
$users\040=\040$company->users()->latest()->get()
$users\040=\040$company->users()->latest()->first()
numtowords(198234234)
numtowords(1982342e34)
numtowords(198234243209898239048234)
numtowords(1982342432098982390484)
numtowords(19823424320989823904)
numtowords(198234243209898239)
numtowords(1982342432098982394)
numtowords(198234243209898239)
BillingService::use('invoice')
BillingService::use('debit_note')
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->get()
BillingService::use('debit_note')->list()
app([BoneyBone/BillingService/Contracts/RequestClient::class)
app(BoneyBone/BillingService/Contracts/RequestClient::class)
app(BoneyBone\134BillingService\134Contracts\134RequestClient::class)
app(BoneyBone\134BillingService\134Contracts\134RequestClient::class)
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
bcrypt(111111)
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
BillingService::authenticateSDK()
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list()
BillingService::authenticateSDK()
BillingService::use('debit_note')->list()
BillingService::use('debit_note')->list(['per_page'\040=>\04010])
BillingService::use('debit_note')->list(['args'\040=>\040['per_page'\040=>\04010]])
BillingService::use('debit_note')->list(['args'\040=>\040['per_page'\040=>\04010,\040'skip'\040=>\0400]])
BillingService::use('debit_note')->lis(['args'\040=>\040['per_page'\040=>\04010,\040'skip'\040=>\0400]])
BillingService::use('debit_note')->lis(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
BillingService::use('debit_note')->list(['per_page'\040=>\04010,\040'skip'\040=>\0400])
use\040App\134Contracts\134DashboardExportPipeline\040as\040P
app(P::class)
factory(\134App\134User::class)->make()
factory(App\134User::class)->make()
factory(App\134Models\134User::class)->make()
factory(App\134Models\134User::class)->make()
factory(App\134Models\134Users::class)->make()
use\040App\134Contracts\134Payment\040as\040P
app(P::class)
bcrypt(111111)
bcrypt(111111)
Auth::guard('clients')
Auth::guard('clients')->attempt(['client_id'\040=>\0403,\040'password'\040=>\040111111])
config('data-migration.ix_billing_staging_client_secret')
config('data-migration.ix_billing_staging_client_id')
env('ix_billing_staging_client_secret')
env('IX_BILLING_STAGING_CLIENT_SEECRET')
BillingService::authenticateSDK()
Document::latest()->first()
use\040App\134Document;
Document::latest()->first()
Document::latest()->first()->duplicate()
Document::latest()->first()->copy()
Document::latest()->first()->replicate()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
Document::latest()->first()->replicate()->save()
for($i\040=0;\040$i\040<=\040200;\040$i++)\040{\040Document::latest()->first()->replicate()->save();\040}
decrypt('eyJpdiI6IjVUMkdQcnk4ZkU1b2M5Y1kzSnJwdFE9PSIsInZhbHVlIjoiYjlCRFJaQTZXN09IUWR0KzFWSDlBZzVLR1QxYW1NV3dhYVFqa2wzRzMzSnBsWjVidE5yd2RjWVdKUUNcL2FEcWVOUUQzM1BiYWFCNWRUdGZ4QU1jWTVBUmtLOHhDTGMycmpWY0dTNUx5MTZPeDFZRGZJRE9lY3U4SmVzc3FFOWJ0IiwibWFjIjoiMDRlYzgyNTU2ZWM5MDhjYzkyMDhkMDhlNDQ2ZWVlNGZhOTA3NWFjYmM5NDQ1NzhhZmI4Y2MzNTA2NzE5NDQwZSJ9')
base64_decode('eyJpdiI6IjVUMkdQcnk4ZkU1b2M5Y1kzSnJwdFE9PSIsInZhbHVlIjoiYjlCRFJaQTZXN09IUWR0KzFWSDlBZzVLR1QxYW1NV3dhYVFqa2wzRzMzSnBsWjVidE5yd2RjWVdKUUNcL2FEcWVOUUQzM1BiYWFCNWRUdGZ4QU1jWTVBUmtLOHhDTGMycmpWY0dTNUx5MTZPeDFZRGZJRE9lY3U4SmVzc3FFOWJ0IiwibWFjIjoiMDRlYzgyNTU2ZWM5MDhjYzkyMDhkMDhlNDQ2ZWVlNGZhOTA3NWFjYmM5NDQ1NzhhZmI4Y2MzNTA2NzE5NDQwZSJ9')
base64_decode('eyJpdiI6IjVUMkdQcnk4ZkU1b2M5Y1kzSnJwdFE9PSIsInZhbHVlIjoiYjlCRFJaQTZXN09IUWR0KzFWSDlBZzVLR1QxYW1NV3dhYVFqa2wzRzMzSnBsWjVidE5yd2RjWVdKUUNcL2FEcWVOUUQzM1BiYWFCNWRUdGZ4QU1jWTVBUmtLOHhDTGMycmpWY0dTNUx5MTZPeDFZRGZJRE9lY3U4SmVzc3FFOWJ0IiwibWFjIjoiMDRlYzgyNTU2ZWM5MDhjYzkyMDhkMDhlNDQ2ZWVlNGZhOTA3NWFjYmM5NDQ1NzhhZmI4Y2MzNTA2NzE5NDQwZSJ9',\040true)
decrypt('eyJpdiI6IjVUMkdQcnk4ZkU1b2M5Y1kzSnJwdFE9PSIsInZhbHVlIjoiYjlCRFJaQTZXN09IUWR0KzFWSDlBZzVLR1QxYW1NV3dhYVFqa2wzRzMzSnBsWjVidE5yd2RjWVdKUUNcL2FEcWVOUUQzM1BiYWFCNWRUdGZ4QU1jWTVBUmtLOHhDTGMycmpWY0dTNUx5MTZPeDFZRGZJRE9lY3U4SmVzc3FFOWJ0IiwibWFjIjoiMDRlYzgyNTU2ZWM5MDhjYzkyMDhkMDhlNDQ2ZWVlNGZhOTA3NWFjYmM5NDQ1NzhhZmI4Y2MzNTA2NzE5NDQwZSJ9',\040true)
decrypt('eyJpdiI6IjVUMkdQcnk4ZkU1b2M5Y1kzSnJwdFE9PSIsInZhbHVlIjoiYjlCRFJaQTZXN09IUWR0KzFWSDlBZzVLR1QxYW1NV3dhYVFqa2wzRzMzSnBsWjVidE5yd2RjWVdKUUNcL2FEcWVOUUQzM1BiYWFCNWRUdGZ4QU1jWTVBUmtLOHhDTGMycmpWY0dTNUx5MTZPeDFZRGZJRE9lY3U4SmVzc3FFOWJ0IiwibWFjIjoiMDRlYzgyNTU2ZWM5MDhjYzkyMDhkMDhlNDQ2ZWVlNGZhOTA3NWFjYmM5NDQ1NzhhZmI4Y2MzNTA2NzE5NDQwZSJ9',\040false)
session('3p7mOxI9pjFpGI3udg4sC307YAbsYIy8uipWCZZ8')
session()
session()->read()
use\040Illuminate\134Session\134FileSessionHandler
app(FileSessionHandler::class)
session()->getDefaultDriver()
session()->driver()
session()->driver()->read()
session()->getDrivers()
session()->createFileDriver()
session()->createDriver(session()->getDefaultDriver())
session()
session()->createDriver(session()->getDefaultDriver())
session()->createDriver()
use\040Illuminate\134Session\134SessionManager\040as\040M
app(M::class)
app(M::class)->createDriver()
session()->read()
session()->readFromHandler()
session()->getHandler()
session()->getHandler()->read('3p7mOxI9pjFpGI3udg4sC307YAbsYIy8uipWCZZ8')
BillingService::getAccessToken()
$r\040=\040['a'\040=>\0401,\040'b'\040=>\0402]
$t\040=\040$r
$t
$t['t']\040=\0405
$r
$t
array_diff($r,\040$t)
array_diff($t,\040$r)
use\040App\134Registries\134RenderableTemplateRegistry\040as\040r
app(r::class)
Template::has('registratrarar')
Template::using('registration')
Template::using('registration')
Template::using('registration')
Template::using('registration')
Template::using('registration')
Template::using('registration')
Template::using('registration')
Template::using('registration')->render()
config('view.path')
Template::using('registration')->render()
Template::using('registration')->render()
Template::using('registration')->render()
Template::using('registration')->render()
Template::using('registration')->render()
Template::using('registration')->render()
gettype('aaaa')
use\040App\134Registries\134NotificationChannelRegistry\040as\040R;
app(R::class)
use\040App\134Registries\134SenderResolverRegistry\040as\040R;
app(R::class)
use\040App\134Registries\134SenderResolverRegistry\040as\040R;
app(R::class)
app(R::class)->all()
use\040App\134Registries\134SenderResolverRegistry\040as\040R;
use\040App\134Registries\134NotificationChannelRegistry\040as\040R;
app(R::class)->all()
Template::all()
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
app(P::class)
use\040App\134Models\134Userinfo
$user\040=\040Userinfo::find(6748)
Userinfo
Userinfo::class
User::class
User::find(1)
AuthUsers::first()
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
event(new\040P(AuthUsers::first(),\040'P000000005'))
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
use\040App\134Events\134Payment\134PaymentSuccessful\040as\040P
event(new\040P(AuthUsers::first(),\040'P000000005'))
NotificationChannel::usingChannel('email')
NotificationChannel::usingChannel('email')->send()
NotificationChannel::usingChannel('email')->withSubject('Halo\040anjing')->send()
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Anjingngngngngnng'])->withSubject('Halo\040anjing')
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Anjingngngngngnng'])->withSubject('Halo\040anjing')->send()
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Anjingngngngngnng'])->withSubject('Halo\040anjing')->send()
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Anjingngngngngnng'])->withSubject('Halo\040anjing')->withSenderConfig('no-reply@allo.my')
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Anjingngngngngnng'])->withSubject('Halo\040anjing')->withSenderConfig('no-reply@allo.my')
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'AnjiTest\040Dynamic\040Value'withSubject('Halo\040anjing')->withSenderConfig('no-reply@allo.my')->sendTo('rizalfakhri12@gmail.com')
NotificationChannel::usingChannel('email')->withTemplate('Halo\040{{name}}',\040['nama'\040=>\040'Test\040Dynamic\040Value'])->withSubject('Halo\040anjing')->withSenderConfig('no-reply@allo.my')->sendTo('rizalfakhri12@gmail.com')
BillingService::authenticateSDK()
$data\040=\040'{"bandwith_name":"100\040MBPS\040Download,\040100\040MBPS\040Upload","bandwith_for":"User","bandwith_type":"Committed","implementation_on":"Individual","priority":"0","upload_bandwith":"105","download_bandwith":"105","bandwith_usage":"Individual","bandwith_description":"100\040MPBS\040Download,\040Upload"}'
json_decode($data)
$data\040=\040json_decode($data,\040true)
collect($data)->map(function($key,\040$value)\040{\040return\040[$key\040=\040$value];\040});
collect($data)->map(function($key,\040$value)\040{\040return\040[$key\040=>\040$value];\040});
collect($data)->flatMap(function($key,\040$value)\040{\040return\040[$key\040=>\040$value];\040});
collect($data)->flatMap(function($value,\040$key)\040{\040return\040[$key\040=>\040$value];\040});
collect($data)->flatMap(function($value,\040$key)\040{\040$key\040=\040\040str_replace("bandwith",\040"bandwidth",\040$key);\040return\040[$key\040=>\040$value];\040});
collect($data)->flatMap(function($value,\040$key)\040{\040$key\040=\040\040str_replace("bandwith",\040"bandwidth",\040$key);\040if($key\040==\040"bandwidth_name")\040{\040$key\040=\040"name";\040}\040return\040[$key\040=>\040$value];\040});
use\040App\134Eloquent\134Invoices;
$unpaid_invoices\040=\040Invoices::where('account_code_no',$this->account_no)->where(function($query){\012\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040$query->where('status','Unpaid')->orWhere('status','Overdue');\012\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040})->get(['id','invoice_no','paid_amount','grand_total','status']);
$unpaid\040=\040Invoices::where('account_code_no',\040'A000000003')->where(function($query)\040{\012$query->where('status',\040'Unpaid')->orWhere('status',\040'Overdue');\012})->get(['id',\040'invoice_no',\040'paid_amount',\040'grand_total',\040'status']);
$overdue\040=\040$unpaid->where('status',\040'Overdue')
$unpaid
$unpaid->whereNotIn('id',\040$overdue->pluck('id'))
$unpaid->whereNotIn('id',\040$overdue->pluck('id'))->values()
$unpaid
$unpaid\040=\040$unpaid->whereNotIn('id',\040$overdue->pluck('id'))->values()
$unpaid
$unpaid->prepend($overdue)
$unpaid
$unpaid->flatten()
$unpaid->flatten()
$unpaid->flatten()
$unpaid->flatten()
$unpaid
$unpaid
$unpaid->prepend($overdue)->flatten()
$unpaid
$unpaid\040=\040Invoices::where('account_code_no',\040'A000000003')->where(function($query)\040{\012$query->where('status',\040'Unpaid')->orWhere('status',\040'Overdue');\012})->get(['id',\040'invoice_no',\040'paid_amount',\040'grand_total',\040'status']);
$overdue\040=\040$unpaid->where('status',\040'Overdue')
$unpaid
$overude
$overdue
$unpaid\040=\040$unpaid->whereNotIn('id',\040$overdue->pluck('id'))->values()
$unpaid
$overude
$overdue
$unpaid\040=\040$unpaid->prepend($overdue)->flatten()
$unpaid
$overdue
number_format(3.4,\0402,'.','')
Cache::store('redis-package')
Cache::store('redis-package')->put('aa',\040'bb')
Cache::store('redis-package')->get('aa')
Cache::store('redis-package')->put('aa',\040'bb')
Cache::store('redis-package')->get('aa')
use\040App\134Models\134Userinfo
Userinfo::first()
use\040App\134Events\134Users\134UserAdded\040as\040A
event(new\040A($user))
event(new\040A(Userinfo::first()))
$user\040=\040Userinfo::first()
use\040App\134Events\134User\134UserAdded\040as\040A
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
$user\040=\040Userinfo::first()
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
$user\040=\040Userinfo::first()
use\040App\134Events\134User\134UserAdded\040as\040A
$user\040=\040Userinfo::first()
event(new\040A($user))
app()->bind('a',\040function()\040{\040return\040'b';\040});
app('a')
app()->get('a')
use\040App\134Registries\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)
use\040App\134Registries\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)
use\040App\134Registrie\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator\134StubGenerator;
StubGenerator::hi()
StubGenerator::hi()
use\040ArrayID\134StubGenerator\134StubGenerator;
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator;
StubGenerator::hi()
use\040ArrayID\134StubGenerator;
new\040StubGenerator()
use\040ArrayID\134StubGenerator;
new\040StubGenerator()
use\040ArrayID\134StubGenerator;
new\040StubGenerator()
use\040App\134Registries\134AvatarDriverRegistry;
$registry\040=\040app(AvatarDriverRegistry::class)
$registry->all()
class\040A\040{}
new\040A
app(A::class)
class\040B\040{\012public\040function\040__construct($name)\040{\012}\012}
new\040B
new\040B('rojaki')
app(B::class)
use\040App\134Services\134AvatarDriver\134TwitterDriver\040
class\040C\040{\012public\040function\040__construct(TwitterDriver\040$driver}
class\040C\040{\012public\040function\040__construct(TwitterDriver\040$driver)\040{\012}\012}
new\040C()
new\040C(new\040TwitterDriver)
app(C::class)
$registry\040=\040app(AvatarDriverRegistry::class)
$registry->all()
use\040App\134Registries\134AvatarDriverRegistry;
$registry\040=\040app(AvatarDriverRegistry::class)
$registry->all()
$registry\040=\040app(AvatarDriverRegistry::class)
use\040App\134Registries\134AvatarDriverRegistry;
$registry\040=\040app(AvatarDriverRegistry::class)
$registry->all()
use\040App\134Contracts\134AvatarDriver
new\040AvatarDriver
use\040App\134Services\134AvatarDriver\134TwitterDriver
$twitter\040=\040new\040TwitterDriver
$twitter\040instanceof\040AvatarDriver
use\040App\134Contracts\134AvatarDriver
new\040AvatarDriver
app(AvatarDriver::class)
use\040App\134Contracts\134AvatarDriver
new\040AvatarDriver
app(AvatarDriver::class)
use\040App\134Contracts\134AvatarDriver
app(AvatarDriver::class)
DB::connection()->getPDO()
DB::connection()->getPDO()
Userinfo::first()
Userinfo::whereDoesntExists()
Userinfo::class
$user\040=\040Userinfo::first()
get_class($user)
$user\040=\040Userinfo::first()
$user->balance()->toSql()
$user->balance()->toSql()
$user\040=\040Userinfo::first()
$user->balance()->toSql()
$user->balance
Userinfo::whereDoesntHave('balance')->count()
Userinfo::whereDoesntHave('balance')->get()->pluck('username')
Userinfo::whereDoesntHave('balance')->get()->pluck('username')
$users\040=\040[\012\040\040\040\040\040\040\040"mbuCYauL",\012\040\040\040\040\040\040\040"agFooYC",\012\040\040\040\040\040\040\040"agKhaiZ",\012\040\040\040\040\040\040\040"agEeQiu",\012\040\040\040\040\040\040\040"agMSyAz",\012\040\040\040\040\040\040\040"mjTYouC",\012\040\040\040\040\040\040\040"mjWTMin",\012\040\040\040\040\040\040\040"mjSimLC",\012\040\040\040\040\040\040\040"mjYoWoC",\012\040\040\040\040\040\040\040"mjTKWong",\012\040\040\040\040\040\040\040"mjYoJiR",\012\040\040\040\040\040\040\040"mjSimon",\012\040\040\040\040\040\040\040"mjMuSyu",\012\040\040\040\040\040\040\040"astSESU",\012\040\040\040\040\040\040\040"astMAVE",\012\040\040\040\040\040\040\040"astHNCN",\012\040\040\040\040\040\040\040"astRMAM",\012\040\040\040\040\040\040\040"astSUSA",\012\040\040\040\040\040\040\040"astHAKA",\012\040\040\040\040\040\040\040"astDORA",\012\040\040\040\040\040\040\040"astMABO",\012\040\040\040\040\040\040\040"astMDNR",\012\040\040\040\040\040\040\040"astNONE",\012\040\040\040\040\040\040\040"astKHBI",\012\040\040\040\040\040\040\040"astSURO",\012\040\040\040\040\040\040\040"astSTIA",\012\040\040\040\040\040\040\040"mjYHLee",\012\040\040\040\040\040\040\040"mjNadzR",\012\040\040\040\040\040\040\040"mjNMeiK",\012\040\040\040\040\040\040\040"mjHughL",\012\040\040\040\040\040\040\040"mjTPohL",\012\040\040\040\040\040\040\040"mbuMuOt",\012\040\040\040\040\040\040\040"mbuSaJa",\012\040\040\040\040\040\040\040"mbuKuPu",\012\040\040\040\040\040]
$users
clear
$users\040=\040Userinfo::whereIn('username',\040$users)->get()
$users->pluck('activation_date')
$users->pluck('package_id')
use\040App\134Registries\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)->all()
[$url,\040$provider]\040=\040['http://',\040'twitter']
$url
$provider
Avatar::getAvatarUrl('itskodinger')
\134Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
[$url,\040$providerReference,\040$provider]\040=\040Avatar::getAvatar()
[$url,\040$providerReference,\040$provider]\040=\040Avatar::getAvatar('itskodinger')
$url
$providerReference
$providfer
$provider
use\040App\134Contracts\134AvatarRequest;
app()->bind(AvatarRequest::class,\040function()\040{\040return\040'bind~!
app()->bind(AvatarRequest::class,\040function()\040{\040return\040'bind';\040});
Avatar::class
AvatarRequest::class
app(Avatar::class)
app(AvatarRequest::class)
use\040App\134Contracts\134AvatarRequest;
app(AvatarRequest::class)
use\040App\134Registries\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)
use\040App\134Registries\134AvatarDriverRegistry
$registry\040=\040app(AvatarDriverRegistry::class)
$registry->all()
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::getAvatarUrl('itskodinger')
Avatar::provider('twitter')->getAvatarUrl('itskodinger')
Avatar::provider('twitter')->getAvatarUrl('itskodinger')
Avatar::provider('twitter')->getAvatarUrl('itskodinger')
Avatar::provider('twitter')->getAvatarUrl('itskodinger')
use\040App\134Contracts\134AvatarRequest;
app(AvatarRequest::class)
use\040App\134Contracts\134AvatarRequest;
app(AvatarRequest::class)
use\040App\134Contracts\134AvatarRequest;
app(AvatarRequest::class)
$words\040=\040['petir',\040'ptr',\040'kilat',\040'klt']
Str::contains('hujan\040lebar\040dengan\040petir',\040$words)
$words\040=\040['petir',\040'ptr',\040'kilat',\040'klt',\040'lebat']
$words\040=\040['renyai',\040'hjn',\040'hujan']
DB::connection()->getPDO()
DB::connection()->getPDO()
DB::connection()->getPDO()
DB::connection()->getPDO()
bcrypt(111111)
App::make('twitter')
App:bind('twitter',\040function\040()\040{\040return\040'twitter\040instance';\040})
App::bind('twitter',\040function()\040{\040return\040'twitter\040instance';\040});
App::make('twitter')
app('twitter')
app()['twitter']
Userinfo::where('username',\040'ixtelecom')->first()
Userinfo::where('username',\040'ixtelecom10')->first()
bcrypt(111111)
bcrypt(11111111)
range(0,\0404)
SplittableDocumentSummary::find(6)
SplittableDocumentSummary::find(6)->splittableDocuments
SplittableDocument::find(123)
SplittableDocument::find(123)->documentSummary
SplittableDocument::find(123)->documentSummary()
SplittableDocument::find(123)->documentSummary
SplittableDocument::find(123)->documentSummary
SplittableDocument::find(123)->documentSummary()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary()->toSql()
SplittableDocument::find(123)->documentSummary
SplittableDocument::find(123)->documentSummary
SplittableDocumentSummary::find(6)->document
ceil(36,7)
ceil(36.7)
floor(36.7)
strpos('afghanistan',\040'afghanistan.json')
strpos('sdfljsldfj',\040'afghanistan.json')
strpos('afghanistan.json',\040'afghanistan')
strpos('afghanistan.json',\040'afghanistan')
use\040App\134Support\134Address;
$address\040=\040new\040Address;
use\040App\134Support\134Address;
$address\040=\040new\040Address;
$address->generateRandomAddress()
$address->generateRandomAddress()
$address->generateRandomAddress()
$address->generateRandomAddress()
use\040App\134Support\134Address;
$address->generateRandomAddress()
use\040App\134Support\134Address;
$address\040=\040new\040Address;
$address->generateRandomAddress()
use\040App\134Support\134Address;
$address\040=\040new\040Address;
$address->generateRandomAddress()
use\040App\134Callback;
$callback\040=\040new\040Callback()
$callback->getAddress()
use\040App\134Callback;
$callback\040=\040new\040Callback()
app()->call([$callback,\040'getAddress])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
app()->call([$callback,\040'getAddress'])
clear
use\040App\134Callback;
$callback\040=\040new\040Callback()
app(Callback::class)->getAddress()
use\040App\134Support\134Address;
$address\040=\040new\040Address;
$address->generateRandomAddress()
$address->generateRandomAddress()
$address->generateRandomAddress()
$address->generateRandomAddress()
use\040App\134HouseAddress
$houseAddress\040=\040new\040HouseAddress
$houseAddress->getAddress()
$address\040=\040new\040App\134Support\134Address;
$houseAddress->getAddress($address)
use\040App\134HouseAddress
app()->call([HouseAddress::class,\040'getAddress'])
use\040App\134HouseAddress
$houseAddress\040=\040new\040HouseAddress
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
use\040App\134HouseAddress
$houseAddress\040=\040new\040HouseAddress
$houseAddress->getAddress()
use\040App\134Support\134Address
use\040App\134HouseAddress
$address\040=\040new\040Address
$houseAddress\040=\040new\040HouseAddress
$houseAdress->getAddress($address)
$houseAddress->getAddress($address)
$houseAddress->getAddress($address)
$houseAddress->getAddress($address)
$houseAddress->getAddress($address)
$houseAddress->getAddress($address)
use\040App\134HouseAddress
$houseAddress\040=\040new\040HouseAddress
$houseAddress->getAddress()
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
use\040App\134HouseAddress
$houseAddress\040=\040new\040HouseAddress
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
app()->call([$houseAddress,\040'getAddress'])
clear
App::call([$houseAddress,\040'getAddress'])
Operator::where('username',\040'ixtelecom')->first()
use\040App\134Models\134Operator
Operator::where('username',\040'ixtelecom')->first()
Operators::where('username',\040'ixtelecom')->first()
Operators::where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(11111111)])
app()->bind('twitter',\040function()\040{\040return\040'ini\040adalah\040instance\040dari\040TwitterDriver::clsdd';\040});
https://www.facebook.com/AOT.LeviAckermann/posts/2888541251421337?__cft__[0]=AZVfNM-A40TVdRoy7vYP8r65PEfBw3Fgnn_xqvDAo_NCEjAC2xSH6GrxuedlwGdmo_w_HdFS36180tKLJYu9MIOL0um64H2npCC036PRRcctBpYmsYaQvPhu_3lTrvbnZtHRd3W7_1YRmjQiGJ6H9suZJ4c0v7bQRIt4qRuFe2ZfJqq_J0SkbUPRRJ-4P1K_ztAHlOVg4sw2liNb85u4i4JB&__tn__=%2CO%2CP-y-R
app()->bind('twitter',\040function()\040{\040return\040'ini\040adalah\040instance\040dari\040TwitterDriver::clsdd';\040});
Cache::store('redis')->put('email',\040'hi@array.id')
use\040App\134Registries\134AvatarDriverRegistry
app(AvatarDriverRegistry::class)
App::make(AvatarDriverRegistry::class)
app()[AvatarDriverRegistry::class]
DB::table('receipts')->first()
DB::table('receips')->first()
DB::table('receipt')->first()
DB::table('receipt')->distinct('payment_method')->get()
DB::table('receipt')->distinct('payment_method')->count()
DB::table('receipt')->groupBy('payment_method')->count()
DB::table('receipt')->groupBy('payment_method')->get()->pluck('payment_method')
DB::table('receipt')->groupBy('payment_method')->distinct()
DB::table('receipt')->groupBy('payment_method')->distinct()->count()
DB::table('receipt')->groupBy('payment_method')->distinct()->get()
DB::table('receipt')->groupBy('payment_method')->distinct()->get()->pluck('payment_method')
DB::table('receipt')->groupBy('payment_method')->distinct('payment_method')
DB::table('receipt')->groupBy('payment_method')->distinct('payment_method')->count()
DB::table('receipt')->select('payment_method')->distinct()->count()
DB::table('receipt')->distinct()->select('payment_method')->count()
DB::table('receipt')->distinct()->get(['payment_method'])
DB::table('receipt')->distinct()->get(['payment_method'])->toSql()
DB::table('receipt')->distinct()->select(['payment_method'])->toSql()
DB::table('receipt')->distinct()->select(['payment_method'])->get()
DB::table('receipt')->distinct()->select(['payment_method'])->get()->pluck('payment_method')
DB::table('receipt')->distinct()->select(['payment_method'])->get()->pluck('payment_method')
bcrypt(111111)
3463\040/\04017
bcrypt(111111_
bcrypt(111111)
BillingService::authenticateSDK()
BillingService::authenticateSDK()
sum(1,2)
User::where('email',\040'rizalfakhri12@gmail.com
User::where('email',\040'rizalfakhri12@gmail.com')->first()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles->first()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles->first()->permissions
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles->first()->permissions->count()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles->first()->permissions->unique('name')->count()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->roles->first()->permissions->unique('name')->where('name',\040'view-users')->first()
User::where('id',\040'21aa93cf-df39-4e5b-bb0c-0e6538e5e97e')->first()->roles->first()->permissions->unique('name')->where('name',\040'view-users')->first()
use\040App\134Models\134Userinfo
clear
$max
$userinfo
$max
h\040\040\040\040\040\040\040\040\040\040\040\040$max\040=\040Userinfo::where('account_no','like','%A%')->orderby('id','desc')->first(['account_no']);
$max
$max\040=\040preg_replace('/[^0-9]/',\040'',$max->account_no)
$max
$no\040=\040str_pad(++$max,\0409,\040"0",\040STR_PAD_LEFT)
++$max
$max
++$max
h\040\040\040\040\040\040\040\040\040\040\040\040$max\040=\040Userinfo::where('account_no','like','%A%')->orderby('id','desc')->first(['account_no']);
$max\040=\040Userinfo::where('account_no','like','%A%')->orderby('id','desc')->first(['account_no']);
$max\040=\040preg_replace('/[^0-9]/',\040'',$max->account_no)
$max
$max\040>\0408510
$max\040<\0408510
config('running_number.override')
config('running_number.override')
config('running_number.userinfo')
config('running_number.userinfo')
config('running-number.userinfo')
$id\040=\040'CR000398'
preg_replace('/[^0-9]/',\040$id)
preg_replace('/[^0-9]/',\040'',\040$id)
$r\040=\040preg_replace('/[^0-9]/',\040'',\040$id)
intval($r)
Schema::hasColumn('userinfo',\040'username')
Schema::getColumns('userinfo')
clear
$string\040=\040"12345"
is_int($string)
$string\040=\040'12345'
is_int($string)
is_int((int)\040$string)
$string\040=\040"BCDE"
is_int((int)\040$string)
$string\040=\040"BCDE1"
is_numeric($string)
$string\040=\040"111"
is_numeric($string)
clear
$tnb\040=\040"TNB"
$cc\040\040=\040"CC"
$melawati\040=\040"MELAWATI"
$invoice\040=\040"I100002"
$amount\040=\040"80.00"
is_numerice($tnb)
is_numeric($tnb)
$tnb\040=\040"TNB"
$cc\040\040=\040"CC"
$melawati\040=\040"MELAWATI"
$invoice\040=\040"I100002"
$amount\040=\040"80.00"
is_numeric($tnb)
is_numeric($cc)
is_numeric($melawati)
is_numeric($invoice)
is_numeric($amount)
bcrypt(11111111)
Users::first()
Users::first()
Users::first()->commision_date
$user\040=\040Users::first()
$user->activation_date
$user->commision_date
$user->commission_date
$user\040=\040Users::first()
$user->commission_date
$user\040=\040Users::first()
$user->commission_date
$user\040=\040Users::latest()->first()
$user->commission_date
app(Illuminate\134Redis\134Connections\134Connection::class)
app(Illuminate\134Redis\134Connections\134PredisConnection::class)
app(Illuminate\134Cache\134CacheManager)
app(Illuminate\134Cache\134CacheManager::\040lass)
app(Illuminate\134Cache\134CacheManager::class)
app(Illuminate\134Cache\134CacheManager::class)->driver()
app(Illuminate\134Cache\134CacheManager::class)->getDefaultDriver()
app(Illuminate\134Cache\134CacheManager::class)->createRedisDriver()
app(Illuminate\134Cache\134CacheManager::class)->driver()->createRedisDriver()
app(Illuminate\134Cache\134CacheManager::class)->createRedisDriver()
app(Illuminate\134Cache\134CacheManager::class)->driver('redis')
app(Illuminate\134Cache\134CacheManager::class)->driver('redis')->get('user')
$driver\040=\040app(Illuminate\134Cache\134CacheManager::class)->driver('redis')
gettype($driver)
$driver->getClient()
$driver->connection(\012)
$driver->connection()->getClient()
$driver->connection()->client()
dd($driver->connection()->client())
Userinfo::where('account_no','like','%A%')->orderby('id','desc')->first(['account_no'])
config('running-number.override')
config('running-number.userinfo')
$max\040=\040Userinfo::where('account_no','like','%A%')->orderby('id','desc')->first(['account_no'])
clear
$max\040=\040preg_replace('/[^0-9]/',\040'',$max->account_no);
$max
DB::connection()
DB::connection()->getPDO()
DB::table('discounts')->getColumns()
DB::table('discounts')->schema()->getColumns()
DB::table('discounts')->scheme()
DB::table('discounts')->schema()
DB::table('discounts')->getColumnListing()
DB::table('discounts')->getColumnListings()
Schema::getColumnListings()
Schema::getColumnListing()
Schema::getColumnListing('discounts')
$userDiscount\040=\040UserDiscount::first()
use\040App\134UserDiscount
$userDiscount\040=\040UserDiscount::first()
$userDiscount->discount
use\040App\134UserDiscount
$userDiscount\040=\040UserDiscount::first()
$userDiscount->discount
use\040App\134UserDiscount
$userDiscount\040=\040UserDiscount::first()
$userDiscount->discount
use\040App\134UserDiscount
$userDiscount\040=\040UserDiscount::first()
$userDiscount->user
use\040App\134UserDiscountHistory
$history\040=\040UserDiscountHistory::first()
$history->userDiscount
$history->userDiscount->discount
use\040App\134UserDiscountHistory
$history\040=\040UserDiscountHistory::first()
$history->user
use\040App\134UserDiscountHistory
$history\040=\040UserDiscountHistory::first()
$history->invoice
use\040App\134UserDiscountHistory
$history\040=\040UserDiscountHistory::first()
$history->invoice
$data\040=\040['nama',\040'email']
[$nama,\040$email]\040=\040$data
$nama
$email
!\040false
10565/1000
ceil(10565/1000)
ceil(10444/1000)
range(0,\040ceil(10444/1000))
range(1,\040ceil(10444/1000))
bcrypt(123456789)
use\040Carbon\134Carbon
Carbon::parse(null)
User::where('emaill',\040'rizalfakhri12@gmail.com')->first()
User::where('email',\040'rizalfakhri12@gmail.com')->first()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->designation
User::where('email',\040'rizalfakhri12@gmail.com')->first()->department
User::where('email',\040'rizalfakhri12@gmail.com')->first()->company
User::where('email',\040'rizalfakhri12@gmail.com')->first()->company->designation
User::where('email',\040'rizalfakhri12@gmail.com')->first()->company->designation
User::where('email',\040'rizalfakhri12@gmail.com')->first()->designation
User::where('email',\040'rizalfakhri12@gmail.com')->first()->designation()
User::where('email',\040'rizalfakhri12@gmail.com')->first()->designation
User::where('email',\040'rizalfakhri12@gmail.com')->first()->designation->department
LeaveSetting::where('total_days',\040'<',\0400)->count()
strtotime('1\040february\0402021')
$s1\040=\040strtotime('1\040february\0402021')
$s2\040=\040strtotime('25\040february\0402021')
$s2\040-\040$s1
abs(floor(2073600\040/\04086400))
date('F\040Y',\040$s1\040-\04086400*30\040)
200\040/\04028\040*\04024
200\040-\040171.4
Carbon::today()
use\040Carbon\134Carbon;
Carbon::today()
Carbon::today()->dayInMonth()
Carbon::today()->daysInMonth()
Carbon::today()->dayOfMonth()
Carbon::today()->daysOfMonth()
Carbon::today()->daysInMonth
Carbon::setTestNow('01-02-2021')
Carbon::today()->daysInMonth
15\040/\04030
15\040/\04030\040*\0405
$a\040=\04090
$a\040-\04090
$a
SplittableDocumentSummary::find(116)
SplittableDocumentSummary::find(116)->documents
SplittableDocumentSummary::find(116)->splittableDocuments
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040$document->path;\040})
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040$document->filename;\040})->groupBy(function($path)\040{\040return\040\040explode($path,\040'/')[0]\040});
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040$document->filename;\040})->groupBy(function($path)\040{\040return\040\040explode($path,\040'/')[0];\040});
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040$document->file_name;\040})->groupBy(function($path)\040{\040return\040\040explode($path,\040'/')[0];\040});
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040$document->file_name;\040})->groupBy(function($path)\040{\040return\040\040explode('/',\040$path)[0];\040});
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040['path'\040=>\040$document->path,\040'name'\040=>\040$document->file_name];\040})->groupBy(function($path)\040{\040return\040\040explode('/',\040$path['path'])[0];\040});
SplittableDocumentSummary::find(116)->splittableDocuments->map(function($document)\040{\040return\040['path'\040=>\040$document->path,\040'name'\040=>\040$document->file_name];\040})->groupBy(function($path)\040{\040return\040\040explode('/',\040$path['name'])[0];\040});
use\040App\134Traits\134Adjustments
round(73.13/1)\040*\0401
round(73.13/0.05)\040*\0400.05
use\040App\134Tr
use\040App\134Traits\134Adjustments
$recalculatedAmount\040=\04073.13
(new\040class\040{\040use\040Adjustments;\040})->roundOffCents($recalculatedAmount,\0400.05)
[$namespace,\040$identifier]\040=\040explode('::',\040'ARN:USER::398488798')
hash('sha256',\040'USER_PACKAGE_TEMPLATE')
hash('sha256',\040'user_level_discount_template')
hash('sha256',\040'USER_PACKAGE_TEMPLATE')
hash('sha256',\040'user_package_template')
hash('sha256',\040'user_level_discount_template')
hash('sha256',\040'USER_LEVEL_DISCOUNT_TEMPLATE')
use\040App\134Registries\134BulkUpdaterRegistry\040as\040R
app(R::class)
app(R::class)->all()
is_nullish(null,\040null,\040null,\040null)
is_nullish(null,\040null,\040null,\0401)
collect(null)
use\040App\134Jobs
use\040App\134Jobs\134ProcessBulkUpdaterResultFile\040as\040P
use\040App\134Models\134BulkUpdater
$b\040=\040BulkUpdater::find('3267221c-830d-11eb-b27f-87af8f3e617b')
P::dispatch($b)
P::dispatch($b)
use\040App\134Jobs\134ProcessBulkUpdaterResultFile\040as\040P
use\040App\134Models\134BulkUpdater
$b\040=\040BulkUpdater::find('3267221c-830d-11eb-b27f-87af8f3e617b')
P::dispatch($b)
new\040P($b)
use\040App\134Jobs\134ProcessBulkUpdaterResultFile\040as\040P
use\040App\134Models\134BulkUpdater
$b\040=\040BulkUpdater::find('3267221c-830d-11eb-b27f-87af8f3e617b')
new\040P($b)
P::dispatch($b)
use\040App\134Jobs\134ProcessBulkUpdaterResultFile\040as\040P
use\040App\134Models\134BulkUpdater
$b\040=\040BulkUpdater::find('3267221c-830d-11eb-b27f-87af8f3e617b')
new\040P($b)
P::dispatch($b)
Storage::path('dslsldkfjlskdfjslkdfj.xlsx')
319/59
319/17
319/18
$dailycharges\040=\040319/30
$dailycharges\040=\040319/31
$prorate\040=\040$dailycharges*18
$discountCharges\040=\04015/100
$discountDailyDeduction\040=\04015/100*$dailycharges
$deductionAmount\040=\040$discountDailyDeduction*18
$packageTax\040=\0406/100*$prorate
$discountTax\040=\0406/100*$deductionAmount
$packagePrice\040=\040$prorate\040+\040$packageTax
$discountTotal\040=\040$deductionAmount\040+\040$discountTax
$finalCharges\040=\040$packagePrice\040-\040$discountTotal
67.06/19
$dailyDeduction\040=\04067.06/19
$dailyDeduction\040*\04031
$u\040=\040287
$v\040=\040300
$new\040=\040314
$new\040-\040$v
UserEquipment::first()
UserEquipment::first()->Onu
filter_var('a@gmail.com',\040FILTER_VALIDATE_EMAIL')
filter_var('a@gmail.com',\040FILTER_VALIDATE_EMAIL)
filter_var('a@gmail.com',\040FILTER_VALIDATE_EMAIL)
!\040filter_var('a@gmail.com',\040FILTER_VALIDATE_EMAIL)
$p\040=\040['storage.php',\040null]
[$path,\040$index]\040=\040$p
NotificationChannel::has('email')
NotificationChannel::usingChannel('email')
$path\040=\040'/Users/rizalfakhri/bb/billing-backup/storage/app/suspension-report-17-03-2021.xlsx'
pathinfo($path,\040PATHINFO_BASENAME)
pathinfo(null,\040PATHINFO_BASENAME)
trigger_error("fff")
trigger_error("fff",\040E_USER_ERROR)
use\040App\134Console\134Commands\134generatInvoice
generateInvoice::triggerError('aaa')
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
trigger_invoice_error("blaa")
DB::table('orders')->where('orderable_type',\040'App\134Port')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->first()->inRandomOrder()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->inRandomOrder()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->inRandomOrder()->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where("orders.details->>details->>details->>schedule->>date",\040"LIKE",\040"2021-03-10%")->toSql()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where("orders.details->>details->>details->>schedule->>date",\040"LIKE",\040"2021-03-10%")->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->where("orders.details->>details->>details->>schedule->>date",\040"LIKE",\040"2021-03-10%")->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->where("orders.details->>details->>details->>schedule->>date",\040"LIKE",\040"2021-03-10%")->toSql()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->where('is_bundle',\040true')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->where('is_bundle',\040true)->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('status',\040'activated')->where('is_bundle',\040true)->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->>details->>details->>schedule->>date",\040'LIKE',\040'2021-03-10%')->toSql()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->>details->>details->>schedule->>date",\040'LIKE',\040'2021-03-10%')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040'LIKE',\040['2021-03-10',\040'2021-03-31])->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040['2021-03-10',\040'2021-03-31])->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040['2021-03-10',\040'2021-03-31'])->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040['2021-03-10',\040'2021-03-31'])->toSql()
use\040Carbon\134Carbon
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040[Carbon::parse('2021-03-10')->startOfDay(),\040Carbon::parse('2021-03-31')->endOfDay()])->toSql()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040[Carbon::parse('2021-03-10')->startOfDay(),\040Carbon::parse('2021-03-31')->endOfDay()])
$order->toSql()
$order->getBindings()
$order->get()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>schedule->>date",\040\040[Carbon::parse('2021-03-10')->startOfDay(),\040Carbon::parse('2021-03-31')->endOfDay()])
$order->get()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->>details->>details->>schedule->>date",\040\040[Carbon::parse('2021-03-10')->startOfDay(),\040Carbon::parse('2021-03-31')->endOfDay()])
$order->get()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->>details->>details->>bundle->>id",\040\040'16')
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->>details->>details->>bundle->>id",\040\040'16')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->>details->>bundle->>id",\040\040'16')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->details->bundle->>id",\040\040'16')->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->details->bundle->>id",\040\04016)->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->details->bundle->id",\040\04016)->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->whereBetween("orders.details->details->schedule->date",\040\040['2021-03-10',\040'2021-03-31'])->first()
$order\040=\040DB::table('orders')->where('orderable_type',\040'App\134Port')->where('is_bundle',\040true)->where("orders.details->details->schedule->date",\040'LIKE',\040'2021-03-10%')->first()
User::where('email',\040'rizalfakhri.12@gmail.com')->first()
bcrypt(11111111)
SplittableDocumentSummary::inRandomOrder()->first()
SplittableDocumentSummary::inRandomOrder()->first()->splittableDocuments
SplittableDocumentSummary::find('157')
SplittableDocumentSummary::find(157)
use\040Carbon\134Carbon
Carbon::parse('0000-00-00\04000:00:00')
Carbon::parse('0000-00-00\04000:00:00')->format('d-m-Y')
ClaimRequest::find('6c2c9f13-2933-45a2-b280-6bc217e39178')
ClaimRequest::find('6c2c9f13-2933-45a2-b280-6bc217e39178')->advanceRequest
ClaimRequest::find('6c2c9f13-2933-45a2-b280-6bc217e39178')->advanceRequest->advanceable
use\040Carbon\134Carbon
Carbon::parse(null)
Carbon::parse(NULL)
Carbon::parse(NULL)->format('d-m-Y')
Carbon::parse('17-12-2020')->format('d-m-Y')
Carbon::parse('2021-02-27')->format('d-m-Y')
Carbon::parse('30-11-0001')
Carbon::parse('30-11-0001')->format('d-m-Y')
Carbon::parse('30-11--0001')->format('d-m-Y')
ClaimRequest::inRandomOrder()->first()
ClaimRequest::inRandomOrder()->first()->expenses->first()
ClaimRequest::inRandomOrder()->first()->expenses->first()->getFirstMediaUrl()
encrypt(['claim_request_id'\040=>\040'37d27704-46cf-4b22-b6f7-342b8c2fc37d'])
encrypt(['claim_request_id'\040=>\040'b323c7c4-8e4b-46ac-9c76-4dec9d564c92'])
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040App\134Utilities\134HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
substr('-(-1966,\040-0,\0402)
substr('-(-1966,\0400,\0402)
substr('-1966',\0400,\0402)
substr('-1966',\040-0,\0402)
substr('-1966',\040-2)
substr('-1966',\0403)
substr('-1966',\0400,\0403)
number_format('-1966',\0402,\040'.')
number_format('-1966',\0402,\040'.',\040'')
-8860*0.002
use\040App\134Models\134ProjectKickOffDocument\040as\040PKD
PKD::find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation')->find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation.opportunity')->find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation.opportunity.lead')->find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation.opportunity.lead.assigned')->find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation.opportunity.lead.assigned\040as\040assigned')->find('92deca33-8f82-4e50-b7d0-25434b325304')
PKD::with('quotation.opportunity.lead.assigned')->find('92deca33-8f82-4e50-b7d0-25434b325304')
$pkd\040=\040PKD::with('quotation.opportunity.lead.assigned')->find('92deca33-8f82-4e50-b7d0-25434b325304')
$pkd->assigned
array_get('quotation.opportunity.lead.assigned',\040$pkd)
Arr::get('quotation.opportunity.lead.assigned',\040$pkd)
Arr::get($pkd,\040'quotation.opportunity.lead.assigned')
Arr::get(null,\040'quotation.opportunity.lead.assigned')
$p\040=\040"<soapenv:Envelope\040xmlns:soapenv=\134"http://schemas.xmlsoap.org/soap/envelope/\134"\040xmlns:tmf=\134"tmf854.v1\134"\040xmlns:sdc=\134"sdcNbi\134">\134n\040\040\040<soapenv:Header>\134n\040\040\040\040\040\040<tmf:header\040extVersion=\134"?\134"\040extAuthor=\134"?\134"\040tmf854Version=\134"?\134">\134n\040\040\040\040\040\040\040\040\040<!--You\040may\040enter\040the\040following\04025\040items\040in\040any\040order-->\134n\040\040\040\040\040\040\040\040\040<tmf:msgName>GetPerformanceMonitoringDataRequest</tmf:msgName>\134n\040\040\040\040\040\040\040\040\040<tmf:msgType>REQUEST</tmf:msgType>\134n\040\040\040\040\040\040\040\040\040<tmf:communicationPattern>SimpleResponse</tmf:communicationPattern>\134n\040\040\040\040\040\040\040\040\040<tmf:communicationStyle>RCP</tmf:communicationStyle>\134n\040\040\040\040\040\040</tmf:header>\134n\040\040\040</soapenv:Header>\134n\040\040\040<soapenv:Body>\134n\040\040\040\040\040\040<sdc:GetPerformanceMonitoringDataRequest>\134n\040\040\040\040\040\040\040\040\040<sdc:pmObjectSelect\040extVersion=\134"?\134"\040extAuthor=\134"?\134"\040tmf854Version=\134"?\134">\040\040\040\040\040\040\040\040\040\040\040\040\134n\040\040\040\040\040\040\040\040\040\040\040\040<tmf:mdNm>AMS</tmf:mdNm>\134n\040\040\040\040\040\040\040\040\040\040\040\040<tmf:meNm>OLT-MJYAM-001</tmf:meNm>\134n\040\040\040\040\040\040\040\040\040\040\040\040<tmf:propNm>/Type=ONT/R{$rack_no}.S{$subrack_no}.LT{$lt_no}.PON{$pon_no}.ONT{$ont_id}</tmf:propNm>\134n\040\040\040\040\040\040\040\040\040</sdc:pmObjectSelect>\134n\040\040\040\040\040\040\040\040\040<sdc:pmParameterList>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntSerialNumber</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\134t\134t\134t<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>ifAdminStatus</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>gponOntOltsideOpInfoRxOpticalSignalLevel</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\134t\134t\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntSwActiveVersion</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\134t\134t\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntOpInfoDistanceEnh</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\134t\134t\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>ifLastChange</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>ifOperStatus</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntSubscriberLocId</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntVendorId</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponPonStatsBerDownstream</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponPonStatsBerUpstream</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParameterName>bponOntOpInfoPloamCurrStatus</sdc:pmParameterName>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>\134n\040\040\040\040\040\040\040\040\040\040\040\040</sdc:pmParameter>\134n\040\040\040\040\040\040\040\040\040</sdc:pmParameterList>\134n\040\040\040\040\040\040</sdc:GetPerformanceMonitoringDataRequest>\134n\040\040\040</soapenv:Body>\134n</soapenv:Envelope>"
str_replace("\134n",\040"",\040$p)
str_replace(["\134n",\040"\134t"],\040"",\040$p)
$string\040=\040<<<\040<soapenv:Envelope
xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
xmlns:tmf="tmf854.v1"
xmlns:sdc="sdcNbi">
<soapenv:Header>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>gponOntOltsideOpInfoRxOpticalSignalLevel</sdc:pmParameterName>
<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>bponOntSwActiveVersion</sdc:pmParameterName>
<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>bponOntOpInfoDistanceEnh</sdc:pmParameterName>
<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>ifLastChange</sdc:pmParameterName>
<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>ifOperStatus</sdc:pmParameterName>
<sdc:pmParemeterMaxIntervals>1</sdc:pmParemeterMaxIntervals>
</sdc:pmParameter>
<sdc:pmParameter>
<sdc:pmParameterName>bponOntSubscriberLocId</sdc:pmParameterName>
error_epmerepmerepmererepmerMaerareerepmerbperepmerteerpmes>error_epmer>berepmererermPe>
view('test-r')
view('test-r')->render()
urlencode(view('test-r')->render())
addslashes(view('test-r')->render())
DB::connection('auth_boneybone')
DB::connection('auth_boneybone')->table('users')->first()
User::first()->roles()
User::first()->roles()->toSql()
use\040App\134Models\134ProjectKickOffDocument\040as\040PKD
$pkd\040=\040PKD::with('quotation.opportunity.lead.assigned',\040)->find('92deca33-8f82-4e50-b7d0-25434b325304')
$pkd\040=\040PKD::with('quotation.opportunity.lead.assigned','quotation.purchaseOrders'\040)->find('92deca33-8f82-4e50-b7d0-25434b325304')
addslashes('<soapenv:Envelope\040xmlns:soapenv=\134"http://schemas.xmlsoap.org/soap/envelope/\134"\040xmlns:ns=\134"uri://alcatel.com/apc/9.7\134">\134n\040\040\040<soapenv:Header/>\134n\040\040\040<soapenv:Body>\134n\040\040\040\040\040\040<ns:resume>\134n\040\040\040\040\040\040\040\040\040<objectName>OLT-MJYAM-001:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134n\040\040\040\040\040\040\040\040\040<templateName>GQ_MAXIS_P01_800M</templateName>\134n\040\040\040\040\040\040\040\040\040<templateVersion>1</templateVersion>\134n\040\040\040\040\040\040\040\040\040<serviceComponents>\134n\040\040\040\040\040\040\040\040\040\040\040\040<serviceComponent>\134n\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040<name>MAXIS_Ether1_800M-T20</name>\134n\040\040\040\040\040\040\040\040\040\040\040\040</serviceComponent>\134n\040\040\040\040\040\040\040\040\040</serviceComponents>\134n\040\040\040\040\040\040\040\040\040<operationInitiator>Simon</operationInitiator>\134n\134t\134t\040<!--Optional\040to\040put\040names\040of\040operation\040initiator-->\134n\040\040\040\040\040\040</ns:{$status}>\134n\040\040\040</soapenv:Body>\134n</soapenv:Envelope>')
addslashes('<soapenv:Envelope\040xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\134n\040\040\040\040<soapenv:Header/>\134n\040\040\040\040<soapenv:Body>\134n\040\040\040\040\040\040\040<ns:auditPort>\134n\040\040\040\040\040\040\040\040\040\040<objectName>ALLO_G001_FX:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134n\040\040\040\040\040\040\040</ns:auditPort>\134n\040\040\040\040</soapenv:Body>\134n</soapenv:Envelope>\134n')
$payload\040=\040<<<EOT\012<soapenv:Envelope\040xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\134n\040\040\040n<soapenv:Header/>\134n\040\040\040n<soapenv:Body>\134n\040\040\040\040\040\040n<ns:auditPort>\134n\040\040\040\040\040\040\040\040\040n<objectName>ALLO_G001_FX:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134n\040\040\040\040\040\040n</ns:auditPort>\134n\040\040\040n</soapenv:Body>\134n</soapenv:Envelope>\134n\012EOT;
$rack_no\040=\040'$rack_no'
$subrack_no\040=\040'$subrack_no'
$lt_no\040=\040'$lt_no'
$pon_no\040=\040'$pon_no'
$ont_id\040='$ont_id'
$payload\040=\040<<<EOT\012<soapenv:Envelope\040xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\134n\040\040\040n<soapenv:Header/>\134n\040\040\040n<soapenv:Body>\134n\040\040\040\040\040\040n<ns:auditPort>\134n\040\040\040\040\040\040\040\040\040n<objectName>ALLO_G001_FX:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134n\040\040\040\040\040\040n</ns:auditPort>\134n\040\040\040n</soapenv:Body>\134n</soapenv:Envelope>\134n\012EOT;
$rack_no\040=\040'{$rack_no}'
$subrack_no\040=\040'{$subrack_no}'
$lt_no\040=\040'$lt_no'
$lt_no\040=\040'{$lt_no}'
$pon_no\040=\040'{$pon_no}'
$ont_id\040='{$ont_id}'
$payload\040=\040<<<EOT\012<soapenv:Envelope\040xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\134n\040\040\040n<soapenv:Header/>\134n\040\040\040n<soapenv:Body>\134n\040\040\040\040\040\040n<ns:auditPort>\134n\040\040\040\040\040\040\040\040\040n<objectName>ALLO_G001_FX:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134n\040\040\040\040\040\040n</ns:auditPort>\134n\040\040\040n</soapenv:Body>\134n</soapenv:Envelope>\134n\012EOT;
addslashes($payload)
range(1,\040108)
count(range(1,\040108))
$totalDocument\040=\040108390\040/\0401000
count(range(1,\040108.39)\012)
round(range(1,\040108.39)\012)
is_float(108)
is_float(108.39)
$totalDocument\040=\040108390\040/\0401000
ceil($totalDocument)
ceil(108.1)
for($i\040=\0401;$i\040<=\040110;\040$i++)\040{\040echo\040$i;}
for($i\040=\0400;$i\040<=\040110;\040$i++)\040{\040echo\040$i;}
AuthServer::getAuthServerEndpoint(\012)
AuthServer::class
AuthServer::getClientAccessToken()
$response
$response->json()
$response\040=\040Http::withHeaders([\040'Authorization'\040=>\040sprintf("Bearer\040%s",\040\134AuthServer::getClientAccessToken())\040])\040->get(\040sprintf("%s/api/users",\040\134AuthServer::getAuthServerEndpoint())\040);
$response\040=\040Http::withHeaders([\040'Authorization'\040=>\040sprintf("Bearer\040%s",\040\134AuthServer::getClientAccessToken())\040])\040->get(\040sprintf("%s/api/users",\040\134AuthServer::getAuthServerEndpoint())\040)->json()
$response\040=\040Http::withHeaders([\040'Authorization'\040=>\040sprintf("Bearer\040%s",\040\134AuthServer::getAccessToken())\040])\040->get(\040sprintf("%s/api/users",\040\134AuthServer::getAuthServerEndpoint())\040)->json()
AuthServer::getAccessToken()
DB::table('userinfo')->seleect('area')->distinct()->get()
DB::table('userinfo')->select('area')->distinct()->get()
DB::table('userinfo')->select('area')->distinct()->get()->pluck('area')
DB::table('userinfo')->select('area')->whereNotNull('area')->distinct()->get()->pluck('area')
str_contains('aa',\040'nnnnn')
str_contains('aa',\040'nnnnnaa')
str_contains('nnnnnnnaaa',\040'aaa')
DB::table('users')->whereNotNull('termination_date')->get()
DB::table('userinfo')->whereNotNull('termination_date')->get()
use\040App\134Utilities\134NokiaAPI;
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040\012'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api->testApi(1,1,3,1,1,\040'active')
$api->testApi(1,1,3,1,1,\040\012'active')
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
addslashes("<soapenv:Envelopexmlns:soapenv=\134"http://schemas.xmlsoap.org/soap/envelope/\134"\040xmlns:ns=\134"uri://alcatel.com/apc/9.7\134">\134node_modules\040<soapenv:Header/>\134node_modules\040<soapenv:Body>\134node_modules\040<ns:auditPort>\134node_modules\040<objectName>ALLO_G001_FX:{$rack_no}-{$subrack_no}-{$lt_no}-{$pon_no}-{$ont_id}</objectName>\134node_modules\040</ns:auditPort>\134node_modules\040</soapenv:Body>\134n\040\040\040</soapenv:Envelope>\134n"\012)
addslashes("<soapenv:Envelopexmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\040<soapenv:Header/>\040<soapenv:Body>\040<ns:auditPort>\040<objectName>ALLO_G001_FX:1-1-4-2-4</objectName>\040</ns:auditPort>\040</soapenv:Body></soapenv:Envelope>")
addslashes('<soapenv:Envelopexmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\040xmlns:ns="uri://alcatel.com/apc/9.7">\040<soapenv:Header/>\040<soapenv:Body>\040<ns:auditPort>\040<objectName>ALLO_G001_FX:1-1-4-2-4</objectName>\040</ns:auditPort>\040</soapenv:Body></soapenv:Envelope>')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
addslashes('<soapenv:Envelopexmlns:soapenv=\134"http://schemas.xmlsoap.org/soap/envelope/\134"\040xmlns:ns=\134"uri://alcatel.com/apc/9.7\134">\134node_modules\040<soapenv:Header/>\134node_modules\040<soapenv:Body>\134node_modules\040<ns:auditPort>\134node_modules\040<objectName>ALLO_G001_FX:1-1-4-2-4</objectName>\134node_modules\040</ns:auditPort>\134node_modules\040</soapenv:Body>\134n</soapenv:Envelope>')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
base64_encode(sprintf("%s:%s",\040"ixtelecom",\040"#Ixtelecom2021"))
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
DB::connection('ixg')->getConnection()
DB::connection('ixg')->schema()
DB::connection('ixg')
DB::connection('ixg')->table('ixg_users')
DB::connection('ixg')->table('ixg_users')->count()
use\040Facades\134App\134Services\134Fetcher\134UserFetcher;
UserFetcher::getSourceConnection()
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,\040'active')
$api->testApi(1,1,8,2,1\040'active')
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
bcrypt(123456789)
AuthServer::getClientAccessToken()
AuthServer::getClientAccessToken()
AuthServer::getClientAccessToken()
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
bcrypt(111111)
DB::connection('logger')->table('logs')->count()
DB::connection('logger')->table('logs')->count()
DB::connection('logger')->table('logs')->count()
DB::connection('logger')->table('logs')->count()
DB::connection('logger')->table('userinfo')->count()
request()
request()->validated()
request()->validate()
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
config('mail')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,8,2,1,\040'active')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1)
$api->checkPortstatus(1,1,3,1,1,1,\0401)
$api\040=\040new\040N
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,1,\0401)
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->checkPortstatus(1,1,3,1,1,\040'resume')
$api->checkPortstatus(1,1,3,1,2,\040'resume')
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'resume')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,2,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->testApi(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
use\040App\134Utilities\134NokiaAPI\040as\040N;
$api\040=\040new\040N
$api->updatePortStatus(1,1,3,1,1,\040'suspend')
urldecode("POST&https%3A%2F%2Fapi.twitter.com%2F1.1%2Fstatuses%2Fupdate.json&include_entities%3Dtrue%26oauth_consumer_key%3Dxvz1evFS4wEEPTGEFPHBog%26oauth_nonce%3DkYjzVBB8Y0ZFabxSWbWovY3uYSQ2pTgmZeNu2VS4cg%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1318622958%26oauth_token%3D370773112-GmHxMAgYyLbNEtIKZeRNFsMKPR9EyMZeS9weJAEb%26oauth_version%3D1.0%26status%3DHello%2520Ladies%2520%252B%2520Gentlemen%252C%2520a%2520signed%2520OAuth%2520request%2521")
DB::table('opportunities')->select('estimation')
DB::table('opportunities')->select('estimation')->count()
DB::table('opportunities')->select('estimation')->get()
DB::table('opportunities')->select('estimation')->get()->sum('estimation')
bcrypt(111)
bcrypt(123)
range(1,1)
range(1,12)
AuthServer::getClientAccessToken()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
U::getAllRemoteUsers()
use\040App\134Repositories\134UserRepository\040as\040U
collect(U::getRemoteUser())
collect(U::getAllRemoteUsers())
collect(U::getAllRemoteUsers())->where('email',\040'rizalfakhri12@gmail.com')
use\040App\134Repositories\134UserRepository\040as\040U
collect(U::getAllRemoteUsers())
collect(U::getAllRemoteUsers())->where('email',\040'rizalfakhri12@gmail.com')
bcrypt('Ixtelecom2020@')
99\040/\04030
3.3\040*\04011
99\040/\04031
97.83\040/\04011
8.89\040*\04030
use\040Carbon\134CarbonPeriod\040as\040C
$c\040=\040C::create('2021-01-01',\040'2022-01-01')
$c->monthsUntil()
83.032258064516\040+\04013.2
99\040/31\040*\04026
use\040App\134Registries\134NoticationChannelRegistry\040as\040R
$channel\040=\040app(R::class)->get('email')
use\040App\134Registries\134NotificationChannelRegistry\040as\040R
$channel\040=\040app(R::class)->get('email')
use\040use\040App\134Facades\134NotificationChannel;
use\040App\134Facades\134NotificationChannel;
NotificationChannel::usingChannel($channel)->addRecipients(['rizalfakhri12@gmail.com'])->withTemplate('invoice_miscalculation')->send()
NotificationChannel::usingChannel('email')->addRecipients(['rizalfakhri12@gmail.com'])->withTemplate('invoice_miscalculation')->send()
NotificationChannel::usingChannel('email')->setRecipient('rizalfakhri12@gmail.com')->withTemplate('invoice_miscalculation')->send()
use\040App\134Facades\134NotificationChannel;
NotificationChannel::usingChannel('email')->setRecipient('rizalfakhri12@gmail.com')->withTemplate('invoice_miscalculation')->send()
DB::getPDO()
DB::getPDO()->getConnection()
DB::table('userinfo')->count()
config('database')
DB::table('userinfo')->first()
DB::table('userinfo')->count()
DB::connection('mysql')->getPDO()
99\040/\04030
99\040/\04030\040*\0406
19.8\040/\040100\040*\0406
6/100*19.8
1.188+19.8
99\040-\04020.98
99\040/\04031
6/100*99
99+5.94
99/31
99-19.8
99/31*24
99/30(24
99/30*24
76.64+19.8
99-19.8
96.44+5.94
104.94-102.48
6/100*96.44
96.44\040+\04019.8
99/30
99/31
99/30*6
99/31*24
76.64*19.8
76.64*19.8
76.64+19.8
ConfigLoader::loadConfig()
bcrypt(111111)
use\040App\134Utilities\134NokiaAPI;
$api\040=\040new\040NokieAPI;
$api\040=\040new\040NokiaAPI;
$api->getOnt(1,1,3,1,1\012)
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->getMacDetail())
$api->getMacDetail()
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryMacDetail()
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryOntOpticalDetail()
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryOntOpticalDetail()
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
use\040App\134Utilities\134HuaweiAPI
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
config('huawei')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryMacDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryMacDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntOpticalDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntOSDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$api\040=\040new\040HuaweiAPI
$api->queryOntDetail('OLT-MLBUA-001',\040'NOC_Monitoring')
$receipts\040=\040DB::table('receipts')->take(3)
$receipts\040=\040DB::table('receipts')->take(3)->get()
$receipts\040=\040DB::table('receipt')->take(3)->get()
$selected\040=\040$receipts->first()
$receipts->whereNotIn('id',\040[$selected->id])->get()
$receipts->whereNotIn('id',\040[$selected->id])
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
D::dispatch($receipt)
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
D::dispatch($receipt)
dispatch(new\040D($receipt))
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
dispatch(new\040D($receipt))
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
D::dispatch($receipt)
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
D::dispatch($receipt)
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
D::dispatch($receipt)
D::dispatch($receipt)
D::dispatch($receipt)
D::dispatch($receipt)
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
D::dispatch($receipt)
dispatch(new\040D($receipt))
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
D::dispatch($receipt)
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
D::dispatch($receipt)
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
dispatch(new\040D($receipt))
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
dispatch(new\040D($receipt))
use\040App\134Jobs\134MonitorDuplicateReceipts\040as\040D;
$receipt\040=\040DB::table('receipt')->where('receipt_no',\040'R100000002')->first()
dispatch(new\040D($receipt))
D::dispatch($receipt)
now()
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
use\040App\134Utilities\134NokiaAPI\040as\040N
$api\040=\040new\040N
$api->getOnt(1,1,3,1,1)
app()->bound('cache')
use\040App\134Registries\134RadiusAttributeHandlerRegistry\040as\040R
app(R::\012class)
app(R::class)->all()
use\040App\134Registries\134RadiusAttributeHandlerRegistry\040as\040R
app(R::class)->all()
Package::first()
Package::first()->radgroupreply
Package::first()->radgroupreply()->toSql()
use\040App\134Registries\134RadiusAttributeHandlerRegistry\040as\040R
app(R::class)->all()
use\040App\134Registries\134RadiusAttributeHandlerRegistry\040as\040R
app(R::class)->all()
use\040App\134Registries\134RadiusAttributeHandlerRegistry\040as\040R
app(R::class)->all()
\134Carbon\134Carbon::parse('May\04025,\0402021')
null\040?:\040[]
'ddff'\040?:\040[]
use\040App\134Registries\134PostImporterRegistry\040as\040T
app(T::clas)
use\040App\134Registries\134PostImporterRegistry\040as\040Th
app(Th::clas)
use\040App\134Registries\134PostImporterRegistry\040as\040Th
app(Th::clas)
app(Th::class)
app(Th::class)->all()
PurchaseOrder::last()
PurchaseOrder::latest()->first()
PmoPurchaseOrder::latest()->first()
PmoPurchaseOrder::latest()->first()->IxCompany
PurchaseRequest::whereHas('ixCompany')->get()
PurchaseRequest::whereHas('ixCompany')->first()
bcrypt(111111)
Costline::whereHas('purchaseRequest')->count()
Costline::whereHas('purchaseRequest')->count()
Costline::whereHas('purchaseRequest')->first()
Costing::find('93b884b9-a4bb-4ec9-86dd-f0a455a2a7dd')
Costing::find('93b884b9-a4bb-4ec9-86dd-f0a455a2a7dd')->costline
bcrypt(111111)
ItemsSubmitted
new\040ItemsSubmitted
new\040ItemsSubmitted(ProjectKickOfDocument::whereHas('quotation.businessCase')->first(),\040true)
new\040ItemsSubmitted(\134App\134Models\134ProjectKickOfDocument::whereHas('quotation.businessCase')->first(),\040true)
new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->first(),\040true)
new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->first(),\040true)
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first(),\040true))
event(new\040ItemsSubmitted(\134App\134Models\134ProjectKickOffDocument::whereHas('quotation.businessCase')->inRandomOrder()->first()))
bcrypt(111111)
null\040??\040\012'a'
null\040??\040'dd'
'dd'\040??\040'dddd'
User::find('9d25fbd4-5e8c-4d13-b2b6-3ea63a233492')
array_flip(PurchaseRequestSetting::first()->toArray())
User::find('9d25fbd4-5e8c-4d13-b2b6-3ea63a233492')
Arr::only([],\040['a',\040'b'])
PurchaseRequest::inRandomOrder()->first()->clientAccount
PurchaseRequest::inRandomOrder()->first()->clientAccount
PurchaseRequest::inRandomOrder()->first()->clientAccount
PurchaseRequest::inRandomOrder()->first()->clientAccount()->toSql()
PurchaseRequest::inRandomOrder()->first()->clientAccount()->toSql()
PurchaseRequest::inRandomOrder()->first()->clientAccount
PurchaseRequest::inRandomOrder()->first()->client_contact_person
$withRelations
$pr\040=\040PurchaseRequest::inRandomOrder()->with($withRelations)->first()
$pr\040=\040PurchaseRequest::inRandomOrder()->with($withRelations)->first()
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase')
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings')
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings')->filter(function($costing)\040{\040return\040$costing->is_direct_cost;\040})
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings')->filter(function($costing)\040{\040return\040$costing->is_direct_cost;\040})->values()
Arr::get($pr,\040'vendor_name')
Arr::get($pr,\040'vendor_contact_person')
collect(Arr::get($pr,\040'vendor_contact_person'))
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040Arr::only($contactPerson,\040['first_name',\040'last_name']);\040})
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040Arr::only($contactPerson,\040['first_name',\040'last_name']);\040})->implode(',\040')
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040Arr::only($contactPerson,\040['first_name',\040'last_name']));\040})->[D
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040Arr::only($contactPerson,\040['first_name',\040'last_name']));\040})
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040Arr::only($contactPerson,\040['first_name',\040'last_name']);\040})
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040implode('\040',\040Arr::only($contactPerson,\040['first_name',\040'last_name']));\040})
collect(Arr::get($pr,\040'vendor_contact_person'))->map(function($contactPerson)\040{\040return\040implode('\040',\040Arr::only($contactPerson,\040['first_name',\040'last_name']));\040})->implode(',\040')
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings')->filter(function($costing)\040{\040return\040$costing->is_direct_cost;\040})->values()
Arr::get($purchaseRequest,\040'projectKickOffDocument.quotation.businessCase.costings',\040collect())
Arr::get($purchaseRequest,\040'projectKickOffDocument.quotation.businessCase.costings',\040collect())
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings',\040collect())
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings',\040collect())->sum('total_in_myr')
Arr::get($pr,\040'projectKickOffDocument.quotation.businessCase.costings',\040collect())->filter(function($costing)\040{\040return\040$costing->is_direct_cost;\040})->sum('total_in_myr')
BusinessCase::find('93c18c24-c24b-4529-9d00-84ee916eced1')
BusinessCase::find('93c18c24-c24b-4529-9d00-84ee916eced1')->setAsFullyApproved()
q
BusinessCase::find('93c18c24-c24b-4529-9d00-84ee916eced1')->setAsFullyApproved()
\134Carbon\134Carbon::parse(now())
DB::getPdo()
DB::schema()
DB::table('vendor')
DB::table('vendor')->get()
DB::table('vendors')->get()
DB::table('vendors')->get()
bcrypt(123)
bcrypt(1234)
bcrypt(123)
NewPurchaseRequest::find('93c9f764-3409-48fd-8f97-d3507a1f5cdc')
NewPurchaseRequest::find('93c9f764-3409-48fd-8f97-d3507a1f5cdc')->vendor_items
NewPurchaseRequest::find('932693a7-dc24-45e3-8e05-96abd13a5196')->vendor_items
trim('""[{\134"qty\134":\134"1\134",\134"unit_price\134":\134"1\134",\134"total_price\134":1,\134"category\134":\134"Category\0401\134",\134"description\134":\134"fgdfgdfgdfgdfgdfg\134"},{\134"qty\134":\134"60\134",\134"unit_price\134":\134"300\134",\134"total_price\134":18000,\134"category\134":\134"Category\0404\134",\134"description\134":\134"sdfdfg\134"},{\134"qty\134":\134"9000\134",\134"unit_price\134":\134"9000\134",\134"total_price\134":81000000,\134"category\134":null,\134"description\134":\134"sdfsfd\134"},{\134"qty\134":\134"30\134",\134"unit_price\134":\134"90000\134",\134"total_price\134":2700000,\134"category\134":null,\134"description\134":\134"sdfsdf\134"}]"')
NewPurchaseRequest::find('93c9f764-3409-48fd-8f97-d3507a1f5cdc')->vendor_items
$r\040=\040'"dfd"'
rtrim($r)
trim($r)
stripslashes($r)
trim($r,\040'")
trim($r,\040'"')
trim('""[{\134"qty\134":\134"1\134",\134"unit_price\134":\134"1\134",\134"total_price\134":1,\134"category\134":\134"Category\0401\134",\134"description\134":\134"fgdfgdfgdfgdfgdfg\134"},{\134"qty\134":\134"60\134",\134"unit_price\134":\134"300\134",\134"total_price\134":18000,\134"category\134":\134"Category\0404\134",\134"description\134":\134"sdfdfg\134"},{\134"qty\134":\134"9000\134",\134"unit_price\134":\134"9000\134",\134"total_price\134":81000000,\134"category\134":null,\134"description\134":\134"sdfsfd\134"},{\134"qty\134":\134"30\134",\134"unit_price\134":\134"90000\134",\134"total_price\134":2700000,\134"category\134":null,\134"description\134":\134"sdfsdf\134"}]"',\040'"')
stripslashes('[{\134"qty\134":\134"1\134",\134"unit_price\134":\134"1\134",\134"total_price\134":1,\134"category\134":\134"Category\0401\134",\134"description\134":\134"fgdfgdfgdfgdfgdfg\134"},{\134"qty\134":\134"60\134",\134"unit_price\134":\134"300\134",\134"total_price\134":18000,\134"category\134":\134"Category\0404\134",\134"description\134":\134"sdfdfg\134"},{\134"qty\134":\134"9000\134",\134"unit_price\134":\134"9000\134",\134"total_price\134":81000000,\134"category\134":null,\134"description\134":\134"sdfsfd\134"},{\134"qty\134":\134"30\134",\134"unit_price\134":\134"90000\134",\134"total_price\134":2700000,\134"category\134":null,\134"description\134":\134"sdfsdf\134"}]')
Quotation::where('conversion',\040'>',\0402000)->count()
Quotation::where('conversion',\040'>',\0402000)->get()
$quotations\040=\040Quotation::where('conversion',\040'>',\0402000)->get()\040
$quotations->each(function($quote)\040{\040$quote->update(['conversion'\040=>\040(1/$quote->conversion)]);\040})
$quotations\040=\040Quotation::where('conversion',\040'>',\0402000)->get()
use\040Carbon\134Carbon;
now()->daysUntil(now()->addWeek())
now()->daysUntil(now()->addWeek())->toArray()
now()->daysUntil(now())->toArray()
now()->quarterssUntil(now())->toArray()[D\012]
now()->quarterssUntil(now())->toArray()
now()->quarterssUntil(now()->addWeeks(3))->toArray()
now()->quarterssUntil(now()->addYears(3))->toArray()
Carbon::mixins(new\040class\040{\040public\040function\040biAnnuallyUntil(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040})\040})
Carbon::mixins(new\040class\040{\040public\040function\040biAnnuallyUntil(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040})\040}
Carbon::mixins(new\040class\040{\040public\040function\040biAnnuallyUntil(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040})
Carbon::mixins(new\040class\040{\040public\040function\040biAnnuallyUntil(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040}})
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040}})
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil()\040{\040return\040function(\134Carbon\134Carbon\040$date)\040{\040$date->toDateString();\040}}})
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil()\040{\040return\040function(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040}}})
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil()\040{\040return\040function(\134Carbon\134Carbon\040$date)\040{\040return\040$date->toDateString();\040};\040}})
now()->biAnnuallyUntil(now()->endOfYear())
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil()\040{\040return\040function($date)\040{\040return\040$date->toDateString();\040};\040}})
Carbon::mixin(new\040class\040{\040public\040function\040biAnnuallyUntil()\040{\040return\040function($date)\040{\040return\040$date->toDateString();\040};\040}})
now()->biAnnuallyUntil(now()->endOfYear())
now()->addMonths(6)
now()->addMonths(6,5)
now()->addMonths(6.5)
now()->addMonths(6.5)
now()->addMonths(6.5)
now()->biAnnuallyUntil(now()->endOfYear())
now()->biAnnuallyUntil(now()->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
now()->biAnnuallyUntil(now()->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->endOfYear())
now()->startOfYear()->biAnnuallyUntil(now()->addYears(5)->endOfYear())
Carbon::parse('03-05-2021')->biAnnuallyUntil(Carbon::parse('03-05-2025'))
use\040Carbon\134Carbon
Carbon::parse('03-05-2021')->biAnnuallyUntil(Carbon::parse('03-05-2025'))
BusinessCaseCosting::select('currency',\040'conversion')->distinct('currency')->get()
use\040App\012
use\040App\134Models\134BusinessCaseCosting
BusinessCaseCosting::select('currency',\040'conversion')->distinct('currency')->get()
use\040App\134BusinessCaseCosting
BusinessCaseCosting::select('currency',\040'conversion')->distinct('currency')->get()
use\040App\134Models\134BusinessCaseCosting
BusinessCaseCosting::select('currency',\040'conversion')->distinct('currency')->get()
BusinessCaseCosting::select('currency',\040'conversion')->distinct('currency')->get()
BusinessCaseCosting::select('currency',\040'conversion')->groupBy('currency')->get()
BusinessCaseCosting::select('currency',\040'conversion')->distinct()->get()
BusinessCaseCosting::select('currency',\040'conversion')->latest()->get()
BusinessCaseCosting::select('currency',\040'conversion')->latest()->distinct('currency'->get()\012BusinessCaseCosting::select('currency',\040'conversion')->latest()->get()
BusinessCaseCosting::select('currency',\040'conversion')->latest()->distinct('currency')->get()
BusinessCaseCosting::select('currency',\040'conversion',\040'created_at')->latest()->distinct('currency')->get()
use\040App\134Models\134BusinessCaseCosting\040as\040B
B::select('currency')->get()
B::select('currency')->distinct()
B::select('currency')->distinct()->get()
B::select('currency',\040'conversion')->distinct()->get()
B::select('currency',\040'conversion')->distinct('currency')->get()
B::select('currency',\040'conversion')->groupBy('currency')->get()
B::select('currency',\040'conversion')->groupBy('conversion')->get()
B::select('currency,\040conversion')->groupBy('currency')->get()
B::selectRaw('currency,\040conversion')->groupBy('currency')->get()
B::latest()
B::latest()->select('currency')
B::latest()->select('currency',\040'conversion')->\012get()
B::latest()->select('currency',\040'conversion')->distinct()
B::latest()->select('currency',\040'conversion')->distinct()->get()
B::latest()->select('currency',\040'conversion',\040'created_at')->distinct()->get()
B::latest()->select('currency',\040'conversion',\040'created_at')->distinct()->count()
B::latest()->select('currency',\040'conversion',\040'created_at')->groupBy('currency')
B::latest()->select('currency',\040'conversion',\040'created_at')->groupBy('currency')->get()
B::latest()->select('currency',\040'conversion',\040'created_at')->groupBy('conversion')->get()
B::latest()->select('currency',\040'conversion',\040'created_at')->groupBy('created_at')->get()
B::latest()->groupBy('currency')->get()
B::latest()->select('currency')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency)',\040'any_value(conversion)',\040'created_at')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency),\040any_value(conversion),\040created_at')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency),\040any_value(conversion),\040any_value(created_at)')->groupBy('currency')->get()
use\040App\134Models\134BusinessCaseCosting\040as\040B
B::latest()->selectRaw('any_value(currency),\040any_value(conversion),\040any_value(created_at)')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency)\040as\040currency,\040any_value(conversion)\040as\040conversion,\040any_value(created_at)\040as\040created_at')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency)\040as\040currency,\040any_value(conversion)\040as\040conversion,\040created_at')->groupBy('currency')->get()
B::latest()->selectRaw('any_value(currency)\040as\040currency,\040any_value(conversion)\040as\040conversion,\040created_at')->groupBy('currency')->orderBy('created_at')->get()
B::latest()->take(4)
B::latest()->take(4)->select('currency',\040'conversion')
B::latest()->take(4)->select('currency',\040'conversion')->get()
B::latest()->take(4)->select('currency',\040'conversion',\040'created_at')->get()
B::latest()->selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->orderBy('created_at')->get()
B::latest()->selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->orderBy('created_at',\040'desc')->get()
B::latest()->selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->orderBy('created_at',\040'asc')->get()
B::latest()->selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->get()
B::selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->get()
B::selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->whereNotNull('created_at')->get()
B::selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->whereNotNull('created_at')->orderBy('created_at')->get()
B::selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->whereNotNull('created_at')->orderBy('created_at',\040'asc')->get()
B::selectRaw('currency,\040conversion,\040created_at')->groupBy('currency')->whereNotNull('created_at')->orderBy('created_at',\040'desc')->get()
use\040App\134Contracts\134QuotationsReportCacheSummary;
app(QuotationsReportCacheSummary::class)
Auth::user()
Auth::user()->source
try\040{\040Auth::user()->source;\040}\040catch(\134Exceeption\040$e)\040{}
(\040$user\040=\040Auth::user()\040)\040?\040$user->source\040:\040env('API_URL')
user_source()
ApprovalRequest::first()
ApprovalRequest::count()
ApprovalRequest::distinct('approvable_id')->count()
ApprovalRequest::distinct('approvable_id')->get()
ApprovalRequest::with('approvable')->first()
ApprovalRequest::with('approvable')->first()->approvable
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()->approvable
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()->approvable
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()->requester
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->latest()->first()
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()->requester
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->first()->approvable
ApprovalRequest::with('approvable')->where('approvable_type',\040'LEAVE_REQUEST')->latest()->first()->approvable
strtotime(1622476800)
\134Carbon\134Carbon::createFromTimestamp(strtotime(1622476800))
\134Carbon\134Carbon::createFromTimestamp(strtotime(152437882967))
\134Carbon\134Carbon::createFromTimestamp(strtotime(1614268800))
Quotation::where('currency',\040'USD')->count()
Quotation::where('currency',\040'USD')->get()->pluck('conversion'(\012)\012;
Quotation::where('currency',\040'USD')->get()->pluck('conversion')
Quotation::where('currency',\040'USD')->update(['conversion'\040=>\0404])
0\040??\0401
0\040?:\0401
3498324\040?:\0405
DB::table('jobs')->delete()
DB::table('jobs')->delete()
DB::table('jobs')->delete()
DB::getPDO()
DB::getPDO()
DB::getPDO()
DB::getPDO()
DB::getPDO()
Role::first()
Role::hasRole('asads')
Role::hasRoles('asads')
Role::all()->pluck('name')
ChangeRequest::first()
use\040App\134ChangeRequest
use\040App\134ChangeRequest
ChangeRequest::first()
ChangeRequest::first()->created_at
Carbon\134Carbon::now()
Carbon\134Carbon::now()
Carbon\134Carbon::now()
User::first()
User::get()->pluck('email')
User::where('email',\040'astrorsp@gmail.com')->first()
User::where('email',\040'like',\040'%astro%')->first()
User::where('email',\040'like',\040'%maxis%')->first()
User::where('email',\040'like',\040'%maxis%')->get()
User::where('email',\040'like',\040'%maxis%')->count()
User::where('email',\040'like',\040'%maxis%')->first()
User::where('email',\040'like',\040'maxis%')->first()
Order::find(27496)
Order::find(27496)->details
null\040?:\040[]
fgetcsv(fopen('id.csv'))
fgetcsv(fopen('id.csv'),\040',')
fgetcsv(fopen('id.csv',\040'f'))
fgetcsv(fopen('id.csv',\040'r'))
function\040csv_to_array($filename='',\040$delimiter=',')\012{\012\040\040\040\040if(!file_exists($filename)\040||\040!is_readable($filename))\012\040\040\040\040\040\040\040\040return\040FALSE;\012\040\040\040\040$header\040=\040NULL;\012\040\040\040\040$data\040=\040array();\012\040\040\040\040if\040(($handle\040=\040fopen($filename,\040'r'))\040!==\040FALSE)\012\040\040\040\040{\012\040\040\040\040\040\040\040\040while\040(($row\040=\040fgetcsv($handle,\0401000,\040$delimiter))\040!==\040FALSE)\012\040\040\040\040\040\040\040\040{\012\040\040\040\040\040\040\040\040\040\040\040\040if(!$header)\012\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040$header\040=\040$row;\012\040\040\040\040\040\040\040\040\040\040\040\040else\012\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040$data[]\040=\040array_combine($header,\040$row);\012\040\040\040\040\040\040\040\040}\012\040\040\040\040\040\040\040\040fclose($handle);\012\040\040\040\040}\012\040\040\040\040return\040$data;\012}
csv_to_Array('id.csv')
csv_to_Array('id.csv')[0]
$ids\040=\040array_values(csv_to_Array('id.csv'))
$csv
$ids[0]
Userinfo::first()000
Userinfo::first()
Userinfo::whereIn('account_no',\040collect($ids)->values())
Userinfo::whereNotIn('account_no',\040collect($ids)->values())->get()
Userinfo::count()
Userinfo::whereIn('account_no',\040collect($ids)->values())->count()
User::first()
User::first()->update(['password'\040=>\040bcrypt('Wt64wN@6xq6KXnxVK9R9^fx')])
str_rand(12)
str_random(12)
Str::random(12)
SplittableDocumentSummary::find(197)
$doc\040=\040SplittableDocumentSummary::find(197)
$callback\040=\040unserialize($doc->callback)
callback()
$callback()
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback($doc)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback($doc)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(75)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(76)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(76)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(76)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(76)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(199)
$doc\040=\040SplittableDocumentSummary::find(76)
$doc\040=\040SplittableDocumentSummary::find(199)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
$doc\040=\040SplittableDocumentSummary::find(199)
$callback\040=\040unserialize($doc->callback)
$callback($doc)
$callback($doc)
Port::first()
Port::first()->orders
Port::first()->orders
Company::Fi::first()
Company::first()
Company::first()->ports
Company::first()->ports->first()
Company::with('ports.orders')->first()->ports->first()
Company::with('ports.orders')->first()->ports->map(function($d)\040{\040return\040\134Arr::get($d,\040'orders');\040})
Company::with('ports.orders')->first()->ports->map(function($d)\040{\040return\040\134Arr::get($d,\040'orders',\040collect())->map(function($order)\040{\040return\040$order->status;\040});\040})
Company::with('ports.orders')->first()->ports->map(function($d)\040{\040return\040\134Arr::get($d,\040'orders',\040collect())->map(function($order)\040{\040return\040$order->status;\040});\040})->first()
Company::with('ports.orders')->first()->ports->map(function($d)\040{\040return\040\134Arr::get($d,\040'orders',\040collect())->first()->status;\040})
bcrypt(111111)
$booking\040=\040Booking::find(3761)
$form\040\040=\040$booking->form
event(new\040\134App\134Events\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
event(new\040\134App\134Events\134Installation\134InstallationCompleted($booking,\040$booking->form))
Arr::geT()
bcrypt(111111)
bcrypt(111111)
User::find(120)
User::find(1)
User::all()
User::find(120)
Vendor::firsT()
Vendor::firsT()->vendorAdmins
Vendor::firsT()->vendorAdmins
House::first()->orde
House::first()->order
House::first()->order
House::first()->order
House::find(249068)
House::find(249068)->order
House::find(249068)->order()->toSql()
Order::first()
Order::first()->hoses
Order::first()->houses
Order::first()->houses
Order::first()->houses()->toSql()
Order::first()->houses()->toSql()
House::find(249068)->order()->toSql()
House::find(249068)->orders()->toSql()
House::find(249068)->orders
House::find(249068)->orders
House::find(249068)->orders
House::find(249068)->orders
House::find(249068)->order
House::find(249068)->order
House::find(249068)->order()->toSql()
House::find(249068)->order()->toSql()
House::find(249068)->order()->toSql()
CompanyPort::first()
use\040App
use\040App\134CompanyPort
CompanyPort::first()
HouseOrderPortMap::First()
HouseOrderPortMap::First()->companyPort
HouseOrderPortMap::First()->order
HouseOrderPortMap::First()->house
SlotAvailability::first()
SlotAvailability::first()->state
SlotAvailability::first()->slot
SlotAvailability::first()->slot
SlotAvailability::first()->slot
base_path('csv')
fscan()
scandir(base_path('csv'))
Operator::where('usrname',\040'ixtelecom')->first()
DB::table('operators')->first()
DB::table('operators')->where('username',\040'ixtelecom')->first()
DB::table('operators')->where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(111111)])
DB::table('operators')->where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(11111111)])
Order::find(289576)
Order::find(29539)
Order::find(29539)->companyPort
Order::find(29539)->companyPort()->toSql()
Order::find(29539)->companyPort()->toSql()
Order::find(29539)->companyPort
Booking::where('orderID',\040'DGPT0000000438')->count()
Port::first()
Port::first()->countCompanyPort
Port::first()->countCompanyPort->pivot
Port::first()->countCompanyPort->first()->pivot
Port::first()->companyPort
Port::first()->companyPort()->toSql()
Port::first()->companyPort()->toSql()
Port::first()->companyPort()->toSql()
Port::first()->companyPort
HouseExportable::all()
HouseExportable::all()
HouseExportable::all()->toArray()
Booking::first()
Booking::latest()->first()
Order::latest()->first()
Order::latest()->first()->booking_id
Order::latest()->first()->booking
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
$order\040=\040Order::latest()->first()
$booking\040=\040$order->booking
$booking\040=\040$order->booking
$formpath\040=\040'---'
event(new\040\134App\134Events\134Schedules\134PortInstallationCompleted($order,\040$booking,\040$formpath))
Partner::First()
Partner::First()->vouchers
Partner::first()->vouchers()->create(['code'\040=>\040'34234'])
Partner::first()->vouchers()->create(['code'\040=>\040'34234'])
Partner::first()->vouchers()->create(['code'\040=>\040'34234'])
Partner::first()->vouchers
Partner::first()->vouchers->first()
Partner::first()->vouchers->first()->claimer
Partner::first()->vouchers->first()->claimer
hash('sha256',\040'd')
hash('sha256',\040'voucher_importer_template')
$r\040=\040[['a@gmail.com',\040'rrr'],\040['r@gmail.com
$r\040=\040[['a@gmail.com',\040'rrr'],\040['r@gmail.com',\040'aa']]
$t\040=\040[['t@gmail.com',\040'ff']]
array_merge($r,\040$t)
collect(array_merge($r,\040$t))
$s\040=\040[['t@gmail.com',\040'ff']]
collect(array_merge($r,\040$t,\040$s))
collect(array_merge($r,\040$t))
collect(array_merge($r,\040$t,\040$s))
collect(array_merge($r,\040$t,\040$s))->unique(function($em)\040{\040return\040$em[0];\040})
MailAddresses::__construct(\012)
use\040App\134Services\134MailAddresses\040as\040M
new\040M('inside_sales')
new\040M('inside_sales')
new\040M('inside_sales')
use\040App\134Services\134MailAddresses\040as\040M
new\040M('inside_sales')
app()->version
app()->version()
use\040App\134Services\134MailAddresses\040as\040M
new\040M('inside_sales')
use\040App\134Services\134MailAddresses\040as\040M
$m\040=\040new\040M('inside_sales')
$m->getMemberEmailAddresses()
use\040App\134Services\134MailAddresses\040as\040M
$m\040=\040new\040M('inside_sales')
$m->getMemberEmailAddresses()
use\040App\134Services\134EmailAddresses\040as\040M
new\040M(['t@gmail.com',\040'ff'])
use\040App\134Services\134EmailAddress\040as\040M
new\040M(['t@gmail.com',\040'ff'])
$r\040=\040[3,4,5,6,7,8]
$t\040=\040[3,4,6,7,8]
array_diff($r,\040$t)
use\040App\134Jobs\134GenerateMissingUserExportables\040as\040U
U::dispatch([9898])
U::dispatch([9898])
U::dispatch([9898])
use\040App\134Jobs\134GenerateMissingUserExportables\040as\040U
U::dispatch([9898])
U::dispatch([9898])
use\040App\134Jobs\134GenerateMissingUserExportables\040as\040U
U::dispatch([9898])
U::dispatch([9898])
Users::first()
Users::first()->save()
Users::first()->save()
Users::inRandomOrde()->first()
Users::inRandomOrde()->latest()->first()
Users::latest()->first()
Users::latest()->first()->delete()
UserExportables::get()
UserExportables::get()
UserExportable::get()
UserExportable::get()->except('id')->first()
DB::table('user_exportables')
DB::table('user_exportables')->getSchema()
Schema::getColumnListing('user_exportables')
app()->version()
collect(Schema::getColumnListing('user_exportables'))
collect(Schema::getColumnListing('user_exportables'))->except('id')
collect(Schema::getColumnListing('user_exportables'))->except('user_id')
User::latest()->first()
User::latest()->first()->update(['ix_company_id'\040=>\040null])
test_email_template('rizalfakhri12@gmail.com',\040'blaaa',\040'dsjksdf')
test_email_template('rizalfakhri12@gmail.com',\040'blaaa',\040'dsjksdf')
test_email_template('rizalfakhri12@gmail.com',\040'blaaa',\040'dsjksdf')
test_email_template('rizalfakhri12@gmail.com',\040'Testing\040testing,\040houston.',\040'<h1>TEST\040TEMPLATE</h1>')
MilestoneConfirmation::first()
MilestoneConfirmation::first()
MilestoneConfirmation::first()
Milestone::has('confirmation')->First()
Milestone::whereHas('confirmation')->First()
use\040App\134Models\134Milestone
Milestone::whereHas('confirmation')->First()
use\040App\134Models\134Milestone
Milestone::whereHas('confirmation')->First()
use\040App\134Models\134Milestone
Milestone::whereHas('confirmation')->First()
Milestone::with('confirmation')->whereHas('confirmation')->First()
Milestone::with('confirmation')->whereHas('confirmation')->First()
use\040App\134Models\134Milestone
Milestone::with('confirmation')->whereHas('confirmation')->First()
Milestone::with('confirmations')->whereHas('confirmation')->First()
Milestone::with('confirmations')->whereHas('confirmations')->First()
Milestone::with('confirmations')->whereHas('confirmations')->where('milestone_type',\040'Recurring')->First()
now()->month
$r\040=\040collect(3,\0404)
$r\040=\040collect([3,\0404]))
$r\040=\040collect([3,\0404])
$t\040=\040collect([1,2])
$r->prepend($t)
$t->merge($r)
$t\040=\040collect([1,2])
$r\040=\040collect([3,\0404])
$t\040=\040collect([1,2])
$t->merge($r)
null\040??\040'a'
bcrypt(111111)
Project::first()
ProjectDocument::First()
ProjectDocument::First()
ProjectDocument::First()
PD::hello()
ProjectDocument::inRandomORdeR()->first()
$r\040=\040ProjectDocument::inRandomORdeR()->first()
PD::ForProject($r)
PD::forProject($r)
PD::forProject($r)->getFormattedMilestones()
PD::forProject($r)->getFormattedMilestones()
$r\040=\040ProjectDocument::inRandomORdeR()->first()
PD::forProject($r)->getFormattedMilestones()
PD::forProject($r)->getFormattedMilestones()
$r\040=\040ProjectDocument::inRandomORdeR()->first()
PD::forProject($r)->getFormattedMilestones()
use\040Carbon\134Carbon;
Carbon::parse('24th\040August\0402018')
Carbon::parse('24th\040August\0402021')
Carbon::parse('24th\040August\0402021')->toDateString()
Receipt::get()->pluck('payment_method')->unique()
User::where('email',\040'rizalfakhi.12@gmail.com')->count()
User::where('email',\040'suliawnis@ixteleocm.net')->count()
User::where('email',\040'suliawanis@ixteleocm.net')->count()
User::where('email',\040'ri.zalfakhri1@gmail.com')->count()
User::where('email',\040'like',\040'%fakhri1@gmail.com%')->count()
User::where('email',\040'like',\040'%fakhri12@gmail.com%')->count()
User::where('email',\040'like',\040'%fakhri12@gmail.com%')->get()->pluck('email')
User::where('email',\040'rizal.fakhri12@gmail.com')->count()
User::where('email',\040'rizal.fakhri12@gmail.com')->updatE(['password'\040=>\040bcrypt(111111)]\012)
User::wherE('email',\040'r.izalfakhri12@gmail.com')->first()
User::wherE('email',\040'r.izalfakhri12@gmail.com')->first()->update(['password'\040=>\040bcrypt(111111)]_
User::wherE('email',\040'r.izalfakhri12@gmail.com')->first()->update(['password'\040=>\040bcrypt(111111)])
Receipt::count()
now()
now()->format('m')
MilestoneConfirmation::groupBy('milestone_id')->get()
MilestoneConfirmation::select('milestone_id,\040project_document_id')->groupBy('milestone_id')->get()
MilestoneConfirmation::select('milestone_id',\040'project_document_id')->groupBy('milestone_id')->get()
Data::take(30)->first()
Data::take(30)->count()
Data::take(30)->get()->count()
Data::take(30)->get()->pluck('id')
rand(6,\04048)
Data::take(30)->get()->pluck('id')
Data::take(30)->get()->pluck('id')
Data::inRandomOrder()->take(30)->get()->pluck('id')
$id\040=\040Data::inRandomOrder()->take(30)->get()->pluck('id')
Data::whereIn('id',\040$id)->update(['used'\040=>\040false])
Data::Select()->update(['used'\040=>\040true])
Data::Select()->update(['used'\040=>\040true])
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
rand(01,\04031)
bcrypt(111111)
app('pd')
ProjectKickOffDocument::inRandomOrder()->first()
ProjectKickOffDocument::inRandomOrder()->first()->projectDocument()
ProjectKickOffDocument::inRandomOrder()->first()->projectDocument
ProjectDocument::firsT()
ProjectDocument::first()
use\040App\134Models\134ProjectDocument
ProjectDocument::first()
ProjectDocument::first()->projectKickOffDocument
ProjectDocument::first()->projectKickOffDocument()
use\040App\134Models\134ProjectDocument
ProjectDocument::first()->projectKickOffDocument()
ProjectDocument::first()->projectKickOffDocument
range(0,\0407)
range(0,\0407)
range(0,\0407)
use\040App\134Registries\134ExtendedPromoRulesRegistry\040as\040R
app(R::class)
app(R::class)->all()
use\040App\134Registries\134ExtendedPromoRulesRegistry\040as\040R
app(R::class)->all()
ExtendedPromo::first()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()
ExtendedPromo::first()->states
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromoEligibleState::first()
ExtendedPromoEligibleState::first()->extendedPromo
ExtendedPromoEligibleState::first()->extendedPromo()->toSql()
ExtendedPromoEligibleState::first()->extendedPromo
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()
ExtendedPromo::first()->states()
ExtendedPromo::first()->states
ExtendedPromo::first()->states
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states()->toSql()
ExtendedPromo::first()->states
ExtendedPromo::first()->states()->getBindings()
ExtendedPromo::first()->states
ExtendedPromo::find('fdc00cfc-c063-47c6-be46-c207b122db6d')->states
ExtendedPromo::first()->states
ExtendedPromo::find('fdc00cfc-c063-47c6-be46-c207b122db6d')->eligibleHouses
ExtendedPromo::find('fdc00cfc-c063-47c6-be46-c207b122db6d')->eligibleHouses()->toSql()
ExtendedPromo::first()->eligibleHouses
ExtendedPromo::find('2822df43-4756-4316-bca5-f79665556a51')->eligibleHouses
ExtendedPromo::find('2822df43-4756-4316-bca5-f79665556a51')->eligibleHouses
ExtendedPromo::first()->eligibleHouses
BulkOrder::latest()->first()->promo()->toSql()
BulkOrder::latest()->first()->promo()->toSql()
BulkOrder::latest()->first()->promo
BulkOrder::latest()->first()->promo
ExtendedPromo::firsT()
ExtendedPromo::firsT()->eligibleHouses
BulkOrder::latest()->first()->houses
Port::inRandomOrdeR()->first()
Port::inRandomOrdeR()->first()->orders
Port::inRandomOrdeR()->first()->orders
Port::inRandomOrdeR()->first()->orders
Port::inRandomOrdeR()->first()->orders
Port::whereHas('orders')->first()
Port::whereHas('orders')->first()->orders
User::where('company_id',\040'20')->count()
User::where('company_id',\040'20')->hasRole('RSP')
User::where('company_id',\040'20')->whereHasRole('RSP')
User::where('company_id',\040'20')->whereHasRole('RSP')->first()
User::hasRole('rsp')
User::first()
User::first()->hasRole('rsp')
HouseExportable::inRandomOrder()->first()
HouseExportable::inRandomOrder()->first()->extendedPromoAddress
HouseExportable::inRandomOrder()->first()->extendedPromoAddress()->toSql()
HouseExportable::inRandomOrder()->first()->extendedPromoAddress()->toSql()
HouseExportable::inRandomOrder()->first()->extendedPromoAddress
HouseExportable::inRandomOrder()->first()->extendedPromoAddress
HouseExportable::inRandomOrder()->first()->extendedPromoAddress
HouseExportable::inRandomOrder()->first()->extendedPromoAddress
HouseExportable::inRandomOrder()->first()->extendedPromoAddress()->toSql()
null\040?:\040[]
array_diff([1,2,3],\040[1,2,3])
array_diff([1,2,3],\040[1,2,3,\0404])
array_diff([1,2,3],\040[1,2,3,4,\040444])
array_diff([1,2,3,\0404444],\040[1,2,3,4])
array_diff([1,2,7,6,3],\040[1,2,3,6])
array_intersect([1,2,3],\040[1,2,3])
array_intersect([1,2,3],\040[1,2,3])
array_intersect([1,2,3],\040[1,2,3,\0404])
array_intersect([1,2,3,\0404],\040[1,2,3,\0404])
array_intersect([1,2,3,\0404],\040[1,2,3])
$fromRequest\040=\040[1,2,3]
$fromDb\040=\040[1,2,3,4]
array_diff($fromRequest,\040$fromDb)
array_diff($fromDb,\040$fromRequest)
$fromRequest\040=\040[1,2,3,4,5,6,7,87]
array_diff($fromDb,\040$fromRequest)
array_diff($fromRequest,\040$fromDb)
array_diff($fromRequest,\040$fromDb)
array_diff($fromRequest,\040$fromDb)
$fromDb\040=\040$fromRequest
$fromDb[555]
$fromDb[]\040=\0405555
$fromDB
$fromDb
array_diff($fromRequest,\040$fromDb)
$fromRequest\040===\040$fromDb
$fromDb\040=\040$fromRequest
$fromRequest\040===\040$fromDb
$fromRequest[]\040=\04011
$fromRequest\040===\040$fromDb
ExtendedPromo::first()
ExtendedPromo::first()->eligibleRsps
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps
ExtendedPromo::count()
ExtendedPromoEligibleRsp::count()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps()->getBindings()
ExtendedPromo::first()->eligibleRsps()->getBindings()
ExtendedPromo::first()->eligibleRsps()->toSql()
ExtendedPromo::first()->eligibleRsps
HouseExportable::select()->update(['eligible_promotions'\040=>\040null])
HouseExportable::select()->update(['eligible_promotions'\040=>\040null])
HouseExportable::select()->update(['eligible_promotions'\040=>\040null])
DocumentExport::first()->user
DocumentExport::first()->user->hasRole('Admin')
$bulkOrderToDelete\040=\040BulkOrder::whereIn('id',\040BulkOrderPromotion::select('bulk_order_id')->whereNotIn('extended_promo',\040ExtendedPromo::select('id')))->count()
$bulkOrderToDelete\040=\040BulkOrder::whereIn('id',\040BulkOrderPromo::select('bulk_order_id')->whereNotIn('extended_promo',\040ExtendedPromo::select('id')))->count()
$bulkOrderToDelete\040=\040BulkOrder::whereIn('id',\040BulkOrderPromo::select('bulk_order_id')->whereNotIn('In('extren,\040ExtendedPromo::select('id')))->count()
$bulkOrderToDelete\040=\040BulkOrder::whereIn('id',\040BulkOrderPromo::select('bulk_order_id')->whereNotIn('extended_promo_id',\040ExtendedPromo::select('id')))->count()
$bulkOrderToDelete\040=\040BulkOrder::whereIn('id',\040BulkOrderPromo::select('bulk_order_id')->whereNotIn('extended_promo_id',\040ExtendedPromo::select('id')))->delete()
BulkOrder::coun()
BulkOrder::count()
BulkPortOrderReservedAddress::first()
BulkPortOrderReservedAddress::whereNotIn('bulk_order_id',\040BulkOrder::select('id'))->count()
BulkPortOrderReservedAddress::whereNotIn('bulk_order_id',\040BulkOrder::select('id'))->delete()
$string\040-\040'1,2,3,4,5,6,7'
$string\040=\040'1,2,3,4,5,6,7'
$string
collect(explode($string,\040','))->sum()
collect(explode($string,\040','))
collect(explode(',',\040$string))->sum()
$p\040=\040explode(',',\040$string)
array_reduce($p,\040function($a,\040$b)\040{\040return\040$a\040+\040$b;\040})
User::first()
User::first()
User::where('last_name',\040'fakhri')->first()
User::where('last_name',\040'maha\040putra')->first()
User::where('last_name',\040'maha\040putra')->where('shift_type_id',\0401)->first()
User::where('last_name',\040'putra')->orWhere('first_name',\040'like',\040'%rizal%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'putra')->orWhere('first_name',\040'like',\040'%rizal%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%putra%')->orWhere('first_name',\040'like',\040'%ffff%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%putrdddda%')->orWhere('first_name',\040'like',\040'%ffff%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%putrdddda%')->orWhere('first_name',\040'like',\040'%riz%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%putrdddda%')->orWhere('first_name',\040'like',\040'%riz%')->where('shift_type_id',\0401)->toSql()
User::where('shift_type_id',\0401)->orWhere('last_name',\040'like',\040'%putrdddda%')->orWhere('first_name',\040'like',\040'%riz%')->toSql()
User::orWhere('last_name',\040'like',\040'%maha\040putra%')->orWhere('first_name',\040'like',\040'%rizal\040fakhri\040%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%syed%')->orWhere('first_name',\040'like',\040'%a%')->where('shift_type_id',\0401)->first()
User::orWhere('last_name',\040'like',\040'%syed%')->orWhere('first_name',\040'like',\040'%syed%')->where('shift_type_id',\0401)->first()
bcrypt(111111)
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(\134App\134House::find(210735)))
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izal.com',\040'password'\040=>\040bcrypt(111111)])
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izaffl.com',\040'password'\040=>\040bcrypt(111111)])
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izaffl.com',\040'password'\040=>\040bcrypt(111111),\040'username'\040=>\040'1929239393'])
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izaffl.com',\040'password'\040=>\040bcrypt(111111),\040'username'\040=>\040'1929239393'])
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izaffl.com',\040'password'\040=>\040bcrypt(111111),\040'username'\040=>\040'1929239393',\040'main_balance'\040=>\0400])
User::create(['name'\040=>\040'Rizal',\040'email'\040=>\040'r@izaffl.com',\040'password'\040=>\040bcrypt(111111),\040'username'\040=>\040'1929239393',\040'main_balance'\040=>\0400])
DB::Table('jobs')->count()
DB::Table('jobs')->count()
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(House::find(210735)))
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(House::find(210735)))
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(House::find(210735)))
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(House::find(210735)))
use\040App\134Events\134BulkOrder\134ReservedAddressUtilized\040as\040A
event(new\040A(House::find(210735)))
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch([])
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch([])
J::dispatch([])
$houses\040=\040HouseExportable::take(1000)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
$houses\040=\040HouseExportable::take(1000)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
$houses\040=\040HouseExportable::take(1000)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
$houses\040=\040HouseExportable::take(1000)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
J::dispatch($houses)
J::dispatch($houses)
HouseExportable::select()->count()
HouseExportable::select()->update(['eligible_promotions'\040=>\040[]])
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
null\040?:\040[]
null\040??\040[]
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
null\040??\040[]
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
HouseExportable::select()->update(['eligible_promotions'\040=>\040[]])
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
HouseExportable::select()->update(['eligible_promotions'\040=>\040[]])
use\040App\134Jobs\134GenerateEligiblePromotionsForHouseExportable\040as\040J
$houses\040=\040HouseExportable::take(10)->get()->pluck('house_id')->toArray()
J::dispatch($houses)k
J::dispatch($houses)k
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
J::dispatch($houses)
[{}]\040??\040[]
[[1\040=>\0402]]\040??\040[]
[[1\040=>\0402]]\040?:\040[]
[[1\040=>\0402]]\040?:\040[]
TransactionRectifier::test()
Bandwidth::all()
$bandwidths\040=\040Bandwidth::all()
$companies\040=\040Company::all()
$formatted\040=\040$bandwidths->map(function($bandwidth)\040use($companies)\040{\040return\040$companies->map(function($company)\040use($bandwidth)\040{\040return\040['company_id'\040=>\040$company->id,\040'bandwidth_id'\040=>\040$bandwidth->id];\040});\040})
$formatted\040=\040$bandwidths->map(function($bandwidth)\040use($companies)\040{\040return\040$companies->map(function($company)\040use($bandwidth)\040{\040return\040['company_id'\040=>\040$company->id,\040'bandwidth_id'\040=>\040$bandwidth->id];\040});\040})->collapse()
$formatted\040=\040$bandwidths->map(function($bandwidth)\040use($companies)\040{\040return\040$companies->map(function($company)\040use($bandwidth)\040{\040return\040['company_id'\040=>\040$company->id,\040'bandwidth_id'\040=>\040$bandwidth->id];\040});\040})->collapse()->count()
$formatted\040=\040$bandwidths->map(function($bandwidth)\040use($companies)\040{\040return\040$companies->map(function($company)\040use($bandwidth)\040{\040return\040['company_id'\040=>\040$company->id,\040'bandwidth_id'\040=>\040$bandwidth->id];\040});\040})->collapse()
BandwidthAccess::first()
DB::table('bandwidth_access')->insert($formatted->toArray())
Order::where('details->form->onu_model',\040'like',\040'%nokia%')->first()
Order::where('details->form->onu_model',\040'like',\040'%nokia%')->count()
Order::where('details->form->onu_model',\040'like',\040'%NOKIA%')->count()
Order::whereRaw('LOWER(details->$.form.onu_model)\040like\040?',\040'%nokia%')->count()
Order::whereRaw('LOWER(details->$.form->onu_model)\040like\040?',\040'%nokia%')->count()
Order::whereRaw('LOWER(details->$.form->onu_model)\040like\040?',\040['%nokia%'])->count()
Order::whereRaw('LOWER(details->"$.form.onu_model")\040like\040?',\040['%nokia%'])->count()
User::first()
User::first()->tole
User::first()->role
User::first()->role()
User::first()->getRoles()
User::first()->getRoleNames()
User::role('Provisioning')->count()
User::role('Provisioning',\040'Allo\040OM/F')->count()
User::role('Provisioning')->count()
User::role(['Provisioning',\040'Allo\040OM/F'])->count()
Bandwidth::\012first()
Bandwidth::allows()
ChangeRequest::where('serial',\040'DGPT0000000475')->exists()
Storage::download('DGSG0000000004_SG_SIGNED_FORM_uNOurxwhi5.pdf')
null\040??\040'-'
(int)\0408,456.45
$r\040=\040NumberFormatter::create(1476.50)
$r\040=\040NumberFormatter::create(1476.50,\040NumberFormatter::TYPE_DEFAULT)
$r::SPELLOUT
NumberFormatter::SPELLOUT
$r\040=\040NumberFormatter::create(1476.50,\040NumberFormatter::SPELLOUT)
$r->getTextAttribute()
$r
$t\040=\040new\040NumberFormatter('en',\040NumberFormatter::SPELLOUT)
$t->format(1476.50)
$t->format(50)
$t->format(05)
$t->format('12,389.90)
$t->format('12,389.90')
User::where('email',\040'digirsp@gmail.com')->first()
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('u@5UFtOdaY5P7&FoX8MP*6BbfD')])
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('u@5UFtOdaY5P7&FoX8MP*6BbfD')])
User::first()
User::where('email',\040'vendor2@gmail.com')->first()
User::where('email',\040'vendor2@gmail.com')->update(['password
User::where('email',\040'vendor2@gmail.com')->update(['password'\040=>\040bcrypt(111111)])
Order::where('serial',\040'DGSG0000000004')->first()
Order::where('serial',\040'DGSG0000000004')->first()->changeRequests
$c\040=\040ChangeRequest::find(62)
Arr::get($c,\040'details.reason')
use\040NumberToWords\134NumberToWords\040as\040N
$n\040=\040new\040N
$c\040=\040$n->getCurrencyTransformer('ms')
$c->toWords(50)
$c->toWords(50,\040'MYR')
$c->toWords(1105,\040'MYR')
$c->toWords(1105.5,\040'MYR')
$c->toWords(11.50,\040'MYR')
$c->toWords(11.50\040*\0401000,\040'MYR')
$c->toWords(11.50\040*\040100,\040'MYR')
$c->toWords(11.05\040*\040100,\040'MYR')
$c->toWords(202283.07\040*\040100,\040'MYR')
$c\040=\040$n->getCurrencyTransformer('en')
$c->toWords(202283.07\040*\040100,\040'MYR')
$c->toWords(202283.07\040*\040100,\040'')
$c->toWords(202283.07\040*\040100,\040'USD')
$c\040=\040$n->getNumberyTransformer('en')
$c\040=\040$n->getNumberTransformer('en')
$c->toWords(202283.07\040*\040100,\040'USD')
$c->toWords(202283.07)
$c\040=\040$n->getCurrencyTransformer('en')
$c->toWords(202283.07\040*\040100,\040'USD')
$c->toWords(202283.07\040*\040100,\040'')
$c->toWords(202283.07\040*\040100,\040'MYR')
$c->toWords(202283.07\040*\040100,\040'USD')
$c\040=\040$n->getNumberTransformer('en')
$c->toWords(20228)
$c->toWords(2)
$c->toWords(02)
$c->toWords(20)
use\040NumberToWords\134NumberToWords\040as\040N
$n\040=\040new\040N
$c\040=\040$n->getNumberTransformer('en')
$c->toWords(07000)
$c->toWords(substr(07000,\0400,\0402))
substr(07000,\0400,\0402)
substr((int)07000,\0400,\0402)
substr((int)07000,\0400,\0402,\0401)
substr((int)07000,\0400,\0402)
substr((int)07000,\0400,\040-2)
$c->toWords(07000/100)
trim(09)
ltrim(09)
ltrim(09,\040'0')
ltrim('09',\040'0')
ltrim(0700,\040'0')
ltrim(0700,\040'0')
ltrim('0700',\040'0')
$t\040=\04007000
$t\040+=\0400
$t
$t\040=\040'07000'
$t\040+=\0400
preg_replace('/^0+/',\040'',\04007000)
preg_replace('/^0+/',\040'',\040(str)07000)
preg_replace('/^0+/',\040'',\040'07000')
DB::getConnection()
DB::connection()->getPDO()
$enc\040=\040encrypt('test');
decrypt('eyJpdiI6Im5lTjRya2JodHFDV1hxbXVzVHVLZmc9PSIsInZhbHVlIjoiUXVGczRiQnc5aVFubTVZXC9adFhEYmc9PSIsIm1hYyI6ImRhNzk5ZmRkMjU1Yjk5MGVkZWZlYTU4OGFmOTJhNmJlZTViYWRkZGM0MjhmMWRjMTY3NzIyNmRkNDUwZWI5ZGYifQ==')
decrypt('eyJpdiI6Im5lTjRya2JodHFDV1hxbXVzVHVLZmc9PSIsInZhbHVlIjoiUXVGczRiQnc5aVFubTVZXC9adFhEYmc9PSIsIm1hYyI6ImRhNzk5ZmRkMjU1Yjk5MGVkZWZlYTU4OGFmOTJhNmJlZTViYWRkZGM0MjhmMWRjMTY3NzIyNmRkNDUwZWI5ZGYifQ==')
User::where('email',\040'user@boneybone.com')
User::where('email',\040'user@boneybone.com')->first()
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('password')])
User::where('email',\040'allo@gmail.com')->first()
User::where('email',\040'allo@gmail.com')->update(['password'\040=>\040bcrypt('password')])
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('password2')])
route('admin.genbookingpdf')(\012)
route('admin.genbookingpdf')
route('admin.genbookingpdf',\0401)
route('admin.genbookingpdf',\0401,\0402)
route('admin.genbookingpdf',\040[1,2])
User::where('email',\040'user@boneybone.com')->update(['password
User::where('email',\040'user@boneybone.com')->update(['password
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('password')])
throw\040new\040\134Exception
Order::first()
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt(111111)])
route('products.index')
route('products.onu.import.index')
route('rsp.billing.index')
route('rsp.billings.index')
app()
app()->singleton()
Operator::first()
DB::table('operators')->first()
DB::table('operators')->where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(111111)])
DB::table('operators')->where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(11111111)])
Receipt::first()
Receipt::find(16183)
Receipt::find(16183)->replicate()
Receipt::find(16183)->replicate()->save()
Receipt::find(16183)->replicate()->save()
Receipt::find(16183)->replicate()->save()
Receipt::find(16183)->replicate()
$r\040=\040Receipt::find(16183)->replicate()
$r->total_amount\040=\04050
$r
$r->save()
Receipt::find(16183)->replicate()->save()
Receipt::find(16183)->replicate()->save()
ActivityLog::first()
DB::table('activity_log')->get()
DB::table('activity_log')->take(10)->get()
Hash::make(11111111)
Hash::check('11111111',\040'$2y$10$65ftbWMSog4ZEmCH0tquSOD38eAKsVULTs44pZNbP3zXoD4dnLtS.')
DB::where('username',\040$request->input('user_id'))->get(['id','username','password','status'])
DB::where('username',\040$request->input('firizni'))->get(['id','username','password','status'])
DB::where('username',\040'friziani')->get(['id','username','password','status'])
DB::table('operators')->where('username',\040'friziani')->get(['id','username','password','status'])
-72
#r\040=\040-72
$r\040=\040-72
$r\040+\04020
$r\040-\0403
DB::table('transaction')->where('account_id',\040'A000014249')->count()
DB::table('transaction')->where('account_id',\040'A000014249')->where('creditAmount',\040'>',\0400)->count()
$cr\040=\040-0.1
$cr\040<\0400
$cr\040>\0400
$cr\040==\0400
$cr
$cr\040*\0401
$cr\040*\040-1
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt(111111)])
bcrypt(111)
bcrypt(111111)
User::where('email',\040'user@boneybone.com')->update(['password
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt(111111)])
ChangeRequest::latest()->first()
ChangeRequest::oldest()->first()
explode('-',\040'aaaa')
explode('-',\040'aaaa-fff')
explode('-',\040'aaaa')[0]
$house\040=\040House::find(125643)
$house->onu->ports
$house
Arr::get($house,\040'onu.ports')
Arr::get($house,\040'onu.ports')->where('status',\040null)
Arr::get($house,\040'onu.ports')->where('status',\040'!=',\040null)
$house\040=\040House::find(125637)
$port\040=\040Arr::get($house,\040'onu.ports')->where('status',\040null)
DB::table('company_port')->where('porT_id',\040'86243')->first()
DB::table('company_port')->where('port_id',\040'86243')->first()
$house\040=\040House::find(125638)
$port\040=\040Arr::get($house,\040'onu.ports')
$port\040=\040Arr::get($house,\040'onu.ports')->first()
DB::table('company_port')->where('port_id',\040'97349')->first()
File::download('/forms/sg-sat-form.pdf')
ChangeRequesst::findd(121)
$c\040=\040ChangeRequesst::findd(121)
$c\040=\040ChangeRequest::findd(121)
$c\040=\040ChangeRequest::find(121)
$c\040=\040ChangeRequest::find(121)->update(['detaills->aa'\012\040=>\040'bb'])
$c\040=\040ChangeRequest::find(121)->update(['details->aa'\012\040=>\040'bb'])
Account::first()
Company::first()
Company::first()->eligibleHouses
Company::first()->eligibleHouses
Company::first()->eligibleHouses
Company::first()->eligibleHouses()->toSql()
Company::first()->eligibleHouses()->toSql()
Company::first()->eligibleHouses()->toSql()
Company::first()->eligibleHouses()->toSql()
Company::first()->eligibleHouses()->toSql()
Company::first()->eligibleHouses
Company::first()->eligibleHouses()->take(4)
Company::first()->eligibleHouses()->take(4)->get()
House::first()
House::first()->eligibleCompanies
House::with('onu.ports')->first()
HouseExportable::first()
HouseExportable::first()->eligibleCompanies
HouseExportable::first()->eligibleCompanies
HouseExportable::first()->eligibleCompanies
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::inRandomOrder()->first(()
HouseExportable::inRandomOrder()->first((\012HouseExportable::inRandomOrder()->first()\012)\012)
HouseExportable::inRandomOrder()->first()
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::inRandomOrder()->first()->eligibleCompanies
HouseExportable::where('house_id',\040'136788')->first()
HouseExportable::where('house_id',\040'136788')->first()->eligibleCompanies
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->toSql()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::first()->eligibleCompanies()->getBindings()
HouseExportable::where('house_id',\040'136788')->first()->eligibleCompanies
State::whereName('kuala\040lumpur')->first()
config('override.override_to_astro')
DB::table('jobs')->count()
DB::table('jobs')->get()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
House::latest()->first()
CompanyHouse::latest()->first()
House::latest()->first()
House::find(325109)
use\040phpseclib3\134Crypt\134RSA;
$private\040=\040RSA::createKey();
$public\040=\040$private->getPublicKey();
$private\040=\040RSA::createKey(1024);
$public\040=\040$private->getPublicKey();
$rsa\040=\040new\040RSA
$public\040=\040$private->getPublicKey()->toString();
$public\040=\040$private->getPublicKey()->toString('OpenSSH');
base64_decode('AAAAB3NzaC1yc2EAAAADAQABAAAAgQDJtrLRqAxs5Kviphh5M6ZXOdotwkO2F0D6Mz6oP5jjBC72efVvjE1OlXd4SRL0TqWgLelBy6VKK86sI3jI1IOznH0GMehnkRShBI70H2hrNBWaSTMBsEeMFSdmJUP3B9jKO8fJRl1JPceKxLnMOWIaf7vMo/LBH/5FC8E7eLVVsQ==')
$private\040=\040RSA::createKey();
$private->getPublicKey()
$private->getPublicKey()->toString('PSS')
$private->getPublicKey()->toString('openssh')
$private->getPublicKey()->toString('MSBLOB')
$private\040=\040RSA::createKey(1024);
$private->getPrivateKey()
$private
$private->toString('MSBLOB')
$private->getPublicKey()->toString('MSBLOB')
RSA::loadPrivateKey('BwIAAACkAABSU0EyAAQAAAEAAQDjkFcS54vkQZCdjHQXk75vXurq/IVnYzjRdYINCuw7ajGAIk/18afmEgqe+nxMZ0FNLgQQvHFHuV7K/xIebd1yDYNeV9nItokzDMYz+nKRQwq58yo3p1aTo1DiobIU9oVD5IM8qfApgjZz30WkjGYRmyr6wqsaeFG/CsSok7ZeraMZyt3gJS13RRi8aNjwiAPG9Lg5dLEDHhnEDkgGzeAiZ1S0a/shMeeqYMnbas8788FQwGxzaH/Chax4mi3FfdTBn5oZ+ZQLh+QuRx7lwFp7naVN2eX+me8I0IqwZzxjGgvMjzmGFJ7apdl7sT4oHWsTaLrfjhVxxV/mzKKsTt7QL/WWl22WQgDf+t7lrfuByjBRdTsafYap0Isxvk0Tz2BWmMe3OJ/vMRtvjBlo84TRzB0Um4ICplJFBH1AUNorPoGupqFDp2MQnwVK2X90w6b5XxDeb8Eewh+Y2RXGRpCOqsms2c7frfH6frX1LGTrefKwD7DepNTiE/4i+Xfbp2h0BTC05w2CVKlYdewFYyKdNCl0lLgq7DEbaTsd/wzM/FSXW+jjYXmaEZ2SsdpYtKaIQ+4BgXb4mVKZLLqYomGEASGFm7ZNrLv6xJ/7XYT51K60RaI51GxQ6Uqglx05FfV9kN5KeIPdkneQOihYrdULcMFOmPtf7gGqPtDIKB/7jhF/IhcBURA9dLJEzhh2LDauaitXIhweNR49NlXwktD89Ofr8yUuvH6iwFCQdwdDL4jmULy9PLxh4fPdLQoWsRw=')
$key\040=\040RSA::loadPrivateKey('BwIAAACkAABSU0EyAAQAAAEAAQDjkFcS54vkQZCdjHQXk75vXurq/IVnYzjRdYINCuw7ajGAIk/18afmEgqe+nxMZ0FNLgQQvHFHuV7K/xIebd1yDYNeV9nItokzDMYz+nKRQwq58yo3p1aTo1DiobIU9oVD5IM8qfApgjZz30WkjGYRmyr6wqsaeFG/CsSok7ZeraMZyt3gJS13RRi8aNjwiAPG9Lg5dLEDHhnEDkgGzeAiZ1S0a/shMeeqYMnbas8788FQwGxzaH/Chax4mi3FfdTBn5oZ+ZQLh+QuRx7lwFp7naVN2eX+me8I0IqwZzxjGgvMjzmGFJ7apdl7sT4oHWsTaLrfjhVxxV/mzKKsTt7QL/WWl22WQgDf+t7lrfuByjBRdTsafYap0Isxvk0Tz2BWmMe3OJ/vMRtvjBlo84TRzB0Um4ICplJFBH1AUNorPoGupqFDp2MQnwVK2X90w6b5XxDeb8Eewh+Y2RXGRpCOqsms2c7frfH6frX1LGTrefKwD7DepNTiE/4i+Xfbp2h0BTC05w2CVKlYdewFYyKdNCl0lLgq7DEbaTsd/wzM/FSXW+jjYXmaEZ2SsdpYtKaIQ+4BgXb4mVKZLLqYomGEASGFm7ZNrLv6xJ/7XYT51K60RaI51GxQ6Uqglx05FfV9kN5KeIPdkneQOihYrdULcMFOmPtf7gGqPtDIKB/7jhF/IhcBURA9dLJEzhh2LDauaitXIhweNR49NlXwktD89Ofr8yUuvH6iwFCQdwdDL4jmULy9PLxh4fPdLQoWsRw=')
$key->getPublicKey()->toString('MSBLOB')
$key->getPublicKey()->getFingerprint('sha256')
$key->getPublicKey()->getFingerprint('md5')
$private\040=\040RSA::createKey(256);
$private->getPublicKey()
$private->getPublicKey()->toString('MSBLOB')
$private->toString('MSBLOB')
$r\040=\040new\040App\134R;
$r\040=\040new\040App\134R;
$r->setPrivateKey('aaa')
$private\040=\040RSA::createKey(1024);
use\040phpseclib3\134Crypt\134RSA;
$private\040=\040RSA::createKey(1024);
$public\040=\040$private->getPublicKey()->toString('MSBLOB')
use\040phpseclib3\134Crypt\134PublicKeyLoader;
$s\040=\040PublicKeyLoader::load($public)
$s\040=\040PublicKeyLoader::load($private->toString('MSBLOB'))
$s->sign('aaa')
$y\040=\040$s->sign('aaa')
$p\040=\040PublicKeyLoader::load($public)
$p->verify(3C4y)
$p->verify($y)
$p->verify($y,\040'MSBLOB')
$p->verify($y,\040'SHA256')
$p->verify($y,\040RSA::SIGNATURE_PSS)
$p->verify($y,\040RSA::SIGNATURE_MSBLOB)
$p->verify($y,\040RSA::SIGNATURE_PKCS1)
RSA::setSignatureMode(RSA::SIGNATURE_PKCS1)
$message\040=\040Str::random(32)
$signature\040=\040$s->sign($message)
$p->verify($message,\040$signature)
$encodedSignature\040=\040base64_encode($signature)
$p->verify($message,\040$signature)
$p->verify($message,\040$encodedSignature)
$p->verify($message,\040base64_decode($signature))
$p->verify($message,\040base64_decode($encodedSignature))
$p\040=\040PublicKeyLoader::load('sadffffffasfasdf')
$p\040=\040PublicKeyLoader::load('sadffffffasfasdf')
use\040phpseclib3\134Crypt\134PublicKeyLoader;
$p\040=\040PublicKeyLoader::load('sadffffffasfasdf')
use\040App\134Facades\134SignatureFactory\040as\040F;
F::sign('aa')
use\040App\134Facades\134SignatureFactory\040as\040F;
F::sign('aa')
F::signMessage('aa')
use\040phpseclib3\134Crypt\134RSA;
$private\040=\040RSA::createKey(1024);
$privateKey\040=\040$private->toString('MSBLOB')
$publicKey\040=\040$private->getPublicKey()->toString('MSBLOB')
F::setPrivateKey($privateKey)
F::setPrivateKey($privateKey)->setPublicKey('d')
F::setPrivateKey($privateKey)->setPublicKey($publicKey)->signMessage('aaa')
base64_decode('s1pHwwP85DXIwlD4jxM3WTRHMKRwyjR2LJmDekSSSSwO0QcBqNU1UR5kcpjr89Cdj/n7etLnovnLLJCbWN6GnCUDwnQOoquPnr45CdNSwkHFKspJcDDaPhqrYgEBT2hvmrkSzQ4DuiAdrImW8xGiTcLqr0sErT4MyiPbK5/D8ic=')
F::setPrivateKey($privateKey)->setPublicKey($publicKey)->generateVerifiableSignature()
$msg\040=\040'BgIAAACkAABSU0ExAAQAAAEAAQDjOOjsqAeuQlHghvpj3R5bBk7H/9/Oqh15jXx4b9d37gE1Fb8fFKyyq3xq7OIYe/if+x2tQxA3EJMDMawPWi2HWull1S6wQmWg8AVPCRmCC7d8OcFqKroB7bKvMnN5jr+5auIqHv08T+3rG+YInBdMF4ObPIFrSuqV7jS3cGNVrw==:this-is-msg-signature'
$encodedMsg\040=\040base64_encode($msg)
base64_encode("BgIAAACkAABSU0ExAAQAAAEAAQB9rNWazwe150g8PhL8JXPI8xvMC4LF79fsrrKtb+tAw4ZR1fX+jiVVWSLt6QqUqN09ja4YZCivzrRbC43ahElnyomd4t04vGAw65ytKhr1ggbcpNoHp2HSWSC/Mv/vx6NfXazBd8ILWFGFLeI2vZ6yuMu0yOrScizWVZ8dMsCl2A==:pppppppp"\012)
use\040\040\040\040\040public\040
use\040App\134Exceptions\134PaymentRequestExceptions\134InsufficientProvidedPaymentRequestDataException\040as\040E;
throw\040new\040E
throw\040new\040E('customer_id')
throw\040new\040E(['customer_id'])
use\040App\134Services\134PaymentRequest\134PaymentRequestContext\040as\040L;
app(L::class)
use\040App\134Services\134PaymentRequest\134PaymentRequestContext\040as\040L;
app(L::class)
7D$t\040=\040app(L::class)
$t\040=\040app(L::class)
$t->getCustomer()
use\040App\134Services\134PaymentRequest\134PaymentRequestContext\040as\040L;
$t\040=\040app(L::class)
$t->getStatus()
$t->setStatus('aaa')
$t->getStatus()
PaymentRequest::make()
PaymentRequest::make('a')
PaymentRequest::make(fn()\040=>\040'aa')
PaymentRequest::make(fn()\040=>\040'aa')
PaymentRequest::make(fn()\040=>\040'aa')
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))
PaymentRequest::create()
PaymentRequest::create()
PaymentRequest::create()
PaymentRequest::create()
PaymentRequest::create()
PaymentRequest::create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
PaymentRequest::make(fn($p)\040=>\040$p->setStatus('aa'))->create()
is_null("")
PaymentRequest::select()->delete()
\134App\134Models\134PaymentRequest::select()->delete()
\134App\134Models\134PaymentRequest::select()->delete()
Subscription::find('d32eaf7b-ba76-4f18-a6f7-25f22acaf9de')
User::first()
User::first()
User::first()
$houseId\040=\040House::all()->pluck('id')
$h\040=\040$houseIds
$h\040=\040$houseId
$h\040=\040$houseId->map(function($id)\040{\040return\040['house_id'\040=>\040$id,\040'extended_promo_id'\040=>\040'b7df73ee-b0d3-4727-b43d-186a2928bac4'];\040})
$h->first()
ExtendedPromoEligibleAddress::insert($h->toArray())
$r\040=\040$h->split(30)
foreach($r\040as\040$t)\040{\012ExtendedPromoEligibleAddress::insert($t->toArray());\012}
User::where('email',\040'maxis@yahoo.com')->update(['password'\012=>\040bcrypt(123)])
$t\040=\040[1,1,1,3,4,5]
array_search(1,\040$t)
$t\040=\040[1,1,1,3,4,5,\0405,\0405]
array_search(5,\040$t)
array_search(58,\040$t)
array_search(58,\040$t)
use\040App\134Services\134PaymentProviders\134DesoPaymentProviderService\040as\040A;
app(A::class)
use\040App\134Registries\134PaymentProviderRegistry\040as\040P;
app(P::class)
app(P::class)->all()
Str::slug('aa-r-e-ff-ffff-')
User::first()
Order::where('orderable_type',\040'App\134Port')->count()
Port::count()
Port::whereHas('order')->count()
Port::whereHas('orders')->count()
Order::where('status','activated')->count()
Order::where('orderable_type',\040'App\134Port')->count()
Customer::first()
Order::where('orderable_type',\040'App\134Port')->count()
House::search('address_1:jalan')->count()
House::search('address_1:jalan')->raw()
House::search('address_1:jalan\040and\040eligible_companies:18')->raw()
House::search('eligible_companies:18')->raw()
House::search('eligible_companies:1008')->raw()
House::search('eligible_companies.length\040==\0401')->raw()
House::search('eligible_companies.length\040==\0401')->raw()
House::search('eligible_companies.length\040==\0401')->get()3C
House::search('eligible_companies.length\040==\0401')->get()
House::search('eligible_companies.length\040==\0401')->paginate(1)
House::search('eligible_companies.length\040==\0401')->first()
House::search('eligible_companies.length\040==\0401')->first()->eligibleCompanies()->count()
House::search('eligible_companies.values.length\040==\0401')->first()->eligibleCompanies()->count()
House::search('address_1:kenanga')->first()->eligibleCompanies()->count()
House::search('address_1:kenanga')->first()
House::search('address_1:kenandga')->first()
House::search('address_1:rod')->first()
House::search('address_1:we')->first()
House::search('address_1:cy')->first()
House::search('address_1:119')->first()
House::search('address_1:119')->count()
House::search('address_1:119')->get()
House::search('address_1:selasih')->get()
House::search('address_1:119selasih')->get()
House::search('address_1:119\040selasih')->get()
House::search('address_1:"119\040selasih"')->get()
House::search('address_1:119%20selasih')->get()
House::search('address_1:119,lorong')->get()
House::search('address_1:119,LORONG\040EMAS\0401')->get()
User::where('email'.\040'digirsp@gmail.com')->first()
User::where('email',\040'digirsp@gmail.com')->first()
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('dru4dcf.dqm8KMA*ejq')])
House::latest()->first()
House::latest()->first()->ports
House::latest()->first()->ports()->toSql()->getBindings()
House::latest()->first()->ports()->toSql()
House::latest()->first()->ports
House::latest()->first()->ports()->getBindings()
House::latest()->first()->ports()->getBindings()
House::latest()->first()->ports()->getBindings()
House::latest()->first()->ports()->getBindings()
House::latest()->first()->ports
House::latest()->first()->ports()->toSql()
House::latest()->first()->ports()->toSql()
House::latest()->first()->ports
House::latest()->first()->ports()
House::latest()->first()->ports()
House::latest()->first()->ports
House::latest()->first()->ports
House::latest()->first()->ports
House::latest()->first()
House::latest()->first()->total_available_port
House::latest()->first()->total_available_port
House::latest()->first()->total_available_port
House::latest()->first()->simpleOnu
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('dgm.nyj7xbk.GVF1jav')])
User::where('email',\040'astro@gmail.com')->update(['password'\040=>\040bcrypt('5d24Mk2cJ%bM96^CVB*^8l8n')])
User::where('email',\040'user@boneybone.com')->update(['pasword'\040=>\040bcrypt('cxc@xhc.gqn1rdu6JZV')])
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('cxc@xhc.gqn1rdu6JZV')])
CompanyHouse::find(3)
$t\040=\040CompanyHouse::find(3)
$t->touch()
$t\040=\040CompanyHouse::find(3)
$t->house
$t->eligibleHouses
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses()->toSql()
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses()->toSql()
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses()->toSql()
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses
$t->eligibleHouses()->getBindings()
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses()->getBindings()
$t->eligibleHouses
$t->eligibleHouses()->touch()
$t->eligibleHouses()->update([])
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses()->update([])
$t\040=\040CompanyHouse::find(3)
$t->touch()
$t\040=\040CompanyHouse::find(3)
House::inRandomOrder()->first()
$r\040=\040House::inRandomOrder()->first()
$r->replicate()
$r->save()
$r\040=\040House::inRandomOrder()->first()
$r->replicate()
$r->save()
$t\040=\040CompanyHouse::find(3)
$t->eligibleHouses->first()
$y\040=\040$t->eligibleHouses->first()
$y->touch()
User::where('email',\040'shukri@sic.com.my
User::where('email',\040'shukri@sic.com.my')->update(['password'\040=>\040bcrypt(1234)])
User::where('email',\040'astro@gmail.com')->First()
encrypt(492)
DB::table('jobs')->count()
House::find(394612)->touch()
House::find(394612)->touch()
House::find(394612)->touch()
House::find(394612)->touch()
House::find(394615)->touch()
House::first()
House::orderBy('id')->count()
House::orderBy('id')->first()
House::orderBy('id',\040'desc')->first()
House::oldest()->first()
House::inRandomOrder()->first()->toSearchableArray()
House::take(10)->get()
House::take(10)->get()->map(function($h)\040{\040return\040$h->toSearchableArray();\040})
140000\040/\04060
140000\040/\04060\040/\04060
null\040>\0400
encrypt(1)
House::first()
House::count()
User::where('email',\040'astro@gmail.com')->first()->id
encrypt('492')
0\040*\0401000
1\040-\0401\040*\0401000
(1\040-\0401)\040*\0401000
$d\040=\040DocumentExport::find(642)
use\040App\134Events\134SplittedDocument\134CompletedDocumentHandled\040as\040H
event(new\040H($d))
event(new\040H($d))
use\040App\134Events\134SplittedDocument\134CompletedDocumentHandled\040as\040H
$d\040=\040DocumentExport::find(642)
event(new\040H($d))
$d\040=\040DocumentExport::find(642)
use\040App\134Events\134SplittedDocument\134CompletedDocumentHandled\040as\040H
ls\040/Users/rizalfakhri/Project/bb/oaoa/storage/app/rfs_export_18082022_726pm.chunk.QgK8DS0D55.xlsx
vim\040/Users/rizalfakhri/Project/bb/oaoa/storage/app/rfs_export_18082022_726pm.chunk.QgK8DS0D55.xlsx
$d\040=\040DocumentExport::find(642)
use\040App\134Events\134SplittedDocument\134CompletedDocumentHandled\040as\040H
$d\040=\040DocumentExport::find(642)
event(new\040H($d))
now()
now()->endOfMinutes()
now()->endOfMinute()
use\040App\134Registries\134InvoiceIssuerLockRegistry\040as\040J
app(J::class)
app(J::class)->all()
app(J::class)->get('cache')
InvoiceIssuerLock::for()
InvoiceIssuerLock::for()
InvoiceIssuerLock::for()
use\040App\134Enums\134CustomerWebhookEventLogEnum\040as\040J
J::Error
use\040App\134Enums\134CustomerWebhookEventLogEnum\040as\040J
J::Error
J::Error->value()
J::Error->value
J::Error
use\040App\134Enums\134CustomerWebhookEventLogEnum\040as\040J
J::Error
use\040Illuminate\134Support\134Collection\040as\040C
Invoice::get()
use\040Illuminate\134Support\134Collection\040as\040C
Invoice::get()
CustomerWebhook::createContext()
CustomerWebhook::createContext()
CustomerWebhook::createContext()->getId()
TransactionWatcher::for('aa')
TransactionWatcher::for('aa')
TransactionWatcher::for('aa')
TransactionWatcher::key('aa')
strlen('0194e879e24ede137e2cf5784ad021b18808c3ee0613a0dd8512babd554c73e58201020312ab56ccef436f49c3d3ac5d13fa2d7d7c7e8a62c2895ea65a9a171418f50d5ebed25b0282065506995a8578a9fd1362b5ee1ae68d88f0fe34b8d5ff261627784d01a5e7a1fcb0210200210282065506995a8578a9fd1362b5ee1ae68d88f0fe34b8d5ff261627784d01a5e70000')
use\040App\134Registries\134TransactionWatcherWebhookDispatcherRegistry\040as\040R
app(R::class)
app(R::class)->all()
App\134Models\134TransactionWatcher::select()->forceDelete()
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('kbv1knq4zfk8ghv*UXZ')])
bcrypt(11111)
0/100
0/100
throw\040new\040\134Exceptionl
throw\040new\040\134Exception;
floor(0.8)
floor(1\040/\040100)
1/100
2/100
120/100
floor(120\040/\040100)
floor(220\040/\040100)
User::count()
User::where('email',\040'user@boneybone.com')->update(['password'\040=>\040bcrypt('kbv1knq4zfk8ghv*UXZ')])
Order::whereNotNull('details->house->network_partner')->count()
Order::where('details->house->id',\040247821)->first()
Order::where('details->house->id',\040249081)->first()
Order::where('serial',\040'ASTPT0000022561')->first()
Order::where('details->house->id',\040'247821')->first()
Order::where('details->house->id',\040'253739')->first()
Import::latest()->first()->houses
Import::latest()->first()->houses->first()
Import::latest()->first()->houses->first()->eligibleCompanies
Artisan::call('utils:execute-single-whitelist-import',\040['importId'\040=>\040208])
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('czq5whp2fhr5RTV_arw')])
User::where('email',\040'digirsp@gmail.com')->update(['password'\040=>\040bcrypt('czq5whp2fhr5RTV_arw')])
User::where('email',\040'astro@gmail.com')->update(['password'\040=>\040bcrypt('bmv6HPT.rpa*ezc.fdt')])
Carbon::parse('2021-10-08T06:27:00.000Z')
use\040Carbon\134Carbon;
Carbon::parse('2021-10-08T06:27:00.000Z')
use\040Carbon\134Carbon;
Carbon::parse('2021-10-08T06:27:00.000Z')->timezone('Asia/Kuala_Lumpur')
Carbon::parse('2021-10-08T06:27:00.000Z')->timezone('Asia/Kuala_Lumpur')->toDateTimeString()
House::where('address_1',\040'51,Jalan\040Lahat\040Baru\04010')->first()
APp\134Onu::first()
App\134Onu::first()
App\134Onu::find(102249)
App\134Onu::find(102249)->ports
CompanyPort::where('port_id',\040102354)->first()
CompanyPort::where('port_id',\040102354)->first()
Order::where('details->house->address_1',\040'51,Jalan\040Lahat\040Baru\04010')->first()
Order::where('id',\04029644)->delete()
decrypt('eyJpdiI6IlwvenNQNSt2cFdCSGNNZldiS3pNOXRBPT0iLCJ2YWx1ZSI6IkxEZTExd1wvUElpUTBYV243NTlIWUtBPT0iLCJtYWMiOiJkMWQzMmVhNmZlZmQ4ZDk5NjRlY2ZjMGQwZjY5YjQ1ZTY0OTZiNTUyNzE2OTNmZDZmNDE4Zjg4Nzc4MDBkZTViIn0%3D')
decrypt('eyJpdiI6IlwvenNQNSt2cFdCSGNNZldiS3pNOXRBPT0iLCJ2YWx1ZSI6IkxEZTExd1wvUElpUTBYV243NTlIWUtBPT0iLCJtYWMiOiJkMWQzMmVhNmZlZmQ4ZDk5NjRlY2ZjMGQwZjY5YjQ1ZTY0OTZiNTUyNzE2OTNmZDZmNDE4Zjg4Nzc4MDBkZTViIn')
decrypt('eyJpdiI6IlwvenNQNSt2cFdCSGNNZldiS3pNOXRBPT0iLCJ2YWx1ZSI6IkxEZTExd1wvUElpUTBYV243NTlIWUtBPT0iLCJtYWMiOiJkMWQzMmVhNmZlZmQ4ZDk5NjRlY2ZjMGQwZjY5YjQ1ZTY0OTZiNTUyNzE2OTNmZDZmNDE4Zjg4Nzc4MDBkZTViIn0')
User::where('email',\040'maxis@yahoo.com')->update(['password'\040=>\040bcrypt('zkn7whb2nhe.NBJ_ndz')])
DB::table('users')->first()
DB::table('users')->first()
DB::table('users')->where('email',\040'superadmin@vpn21.mail')->update(['password'\040=>\040bcrypt('111')])
DB::table('users')->where('email',\040'superadmin@vpn21.mail')->update(['password'\040=>\040bcrypt('111111')])
DB::table('users')->where('email',\040'navid202020@gmail.com')->update(['password'\040=>\040bcrypt('111111')])
bcrypt('111111')
PromoV2::ping()
PromoV2::ping()
PromoV2::ping()
bcrypt(111111)
use\040App\134Services\134PromoV2\134Rules\134ForNewUserRule\040as\040T
app(T::class)
use\040App\134Services\134PromoV2\134Rules\134ForNewUserRule\040as\040T
app(T::class)
use\040App\134Services\134PromoV2\134Benefits\134AddMonthsIntoActiveSubscription\040as\040K
app(K::class)
null\040?:\040[]
use\040App\134Registries\134PromoRuleRegistry\040as\040R
app(R::class)
app(R::class)->all()
use\040App\134Registries\134PromoRuleRegistry\040as\040R
app(R::class)->all()
Str::uuid()
str_uuid()
use\040Illuminate\134Support\134Str;
Str::uuid()
PromoV2::first()
use\040App\134Data\134Models\134PromoV2;
PromoV2::first()
PromoV2::first()->rules()->toSql()
use\040App\134Data\134Models\134PromoV2;
PromoV2::first()->rules()->toSql()
use\040App\134Contracts\134Promo\134PromoRuleErrorMessage\040as\040T
app(T::class)
use\040App\134Contracts\134Promo\134Concerns\134PromoRuleErrorMessage\040as\040T
app(T::class)
use\040App\134Contracts\134Promo\134Concerns\134PromoRuleErrorMessage\040as\040T
app(T::class)
__('aa')
ChangeRequest::where('serial',\040'ASTPT0000024070')->delete()
User::where('id',\040163)->update(['password'\040=>\040bcrypt(111111)])
CompanyHouse::count()
is_int(90)
now()->diffInWeeks(now())
use\040App\134Data\134Models\134User
User::find(4418225)
User::find(4418225)->getMaxEndOfEnablePeriod()
User::find(4418225)->getMaxEndOfEnablePeriod()
use\040App\134Data\134Models\134User
User::find(4418225)->getMaxEndOfEnablePeriod()
use\040App\134Data\134Models\134User
User::find(4418225)->getMaxEndOfEnablePeriod()
now()->addMonths(2)
use\040App\134Data\134Models\134User
User::find(4418225)->getMaxEndOfEnablePeriod()
Port::count()
Port::whereNotIn('id',\040Order::select('orderable_id'))->count()
use\040App\134Registries\134PromoBenefitRegistry\040as\040T
app(T::class)->all()
User::where('id',\0404418225)->update(['password'\040=>\040bcrypt(11111111)])
use\040App\134Data\134Models\134User;
User::where('id',\0404418225)->update(['password'\040=>\040bcrypt(11111111)])
use\040App\134Data\134Models\134User;
User::where('id',\0404418230)->update(['password'\040=>\040bcrypt(11111111)])
User::where('email',\040'nadzirah@allo.my')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'nadzirah@allo.my')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'nadzirah@allo.my')->first()->id
User::where('email',\040'cmfn@allo.my')->update(['password'\040=>\040bcrypt(111111)])
User::where('id',\040168)->update(['password'\040=>\040bcrypt(111111)])
User::where('id',\040168)->first()
User::where('email',\040'msuhaimi@allo.my')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'msuhaimi@allo.my')->update(['password'\040=>\040bcrypt(111111)])
use\040App\134Contract\134UserRequestContext\040as\040C
app(C::class)
use\040App\134Contracts\134UserRequestContext\040as\040C
app(C::class)
use\040App\134Registries\134MagicLinkRegistry\040as\040R
app(R::class)
app(R::class)->all()
User::role('Inside\040Sales')->count()
User::role('Allo\040Om/F')->count()
User::role('Allo\040OM/F')->count()
User::where('email',\040'rizaltest@gmail.com')->first()
User::where('email',\040'rizal@gmail.com')->first()
User::where('email',\040'rizal@gmail.com')->update(['password'\040=>\040bcrypt(111111)])
State::first()
State::get()
House::where('state_id',\0407)->count()
DocumentExport::latest()->first()
SplittableDocumentExport::first()
SplittableDocumentExport::where('document_export_id',\040283)->first()
SplittableDocumentExport::where('document_export_id',\040283)->get()->pluck('total_rows')
DocumentExport::latest()->first()
SplittableDocumentExport::where('document_export_id',\040284)->get()->pluck('total_rows')
DocumentExport::latest()->first()
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
DocumentExport::latest()->first()
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040286)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040287)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040288)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
DocumentExport::latest()->first()
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040289)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040290)->get()->pluck('total_rows')
DocumentExport::latest()->first()
SplittableDocumentExport::where('document_export_id',\040293)->get()->pluck('total_rows')
SplittableDocumentExport::where('document_export_id',\040293)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040293)->get()->sum('total_rows')
SplittableDocumentExport::where('document_export_id',\040293)->get()->sum('total_rows')
CompanyHouse::groupBy('house_id')->count()
CompanyHouse::first()
CompanyHouse::count()
CompanyHouse::where('company_id',\04020)->count()
CompanyHouse::where('company_id',\04020)->skip(5000)->take(1000)->get()
CompanyHouse::where('company_id',\04020)->skip(70000)->take(1000)->get()
User::first()->hasRole('admin')
User::first()->hasRole('Admin')
DB::table('jobs')->count(\012)
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DB::table('jobs')->selecT()->delete()
DocumentExport::latest()->first()
$data\040=\040['shopId'\040=>\04026551,\040'nonce'\040=>\040time()]
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$t\040=\040{
$t\040=\040json_decode("{\012\040\040\040\040"shopId":\04026551,
}"
$t\040=\040'{\040\040\040\040"shopId":\04026551,\040\040\040\040"nonce":\0401673187165,\040\040\040\040"signature":\040"247da7c4b541f64f631bee0468029c29264d53b0ab749d8903b945bd981da2fd",\040\040\040\040"orderId":\040"O00001",\040\040\040\040"paymentId":\040"P00001"}'
$data\040=\040json_decode($t,\040true)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
unset($data['signature'])
$data
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0406,\012'email'\040=>\040'test@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400,\012'currency'\040=>\040'RUB']
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data
sort($data)
$data
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0406,\012'email'\040=>\040'test@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400,\012'currency'\040=>\040'RUB']
ksort($data)
$data
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0406,\012'email'\040=>\040'test@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.1,\012'currency'\040=>\040'RUB']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0406,\012'email'\040=>\040'test@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\04010,\012'currency'\040=>\040'RUB']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0406,\012'email'\040=>\040'test@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\040100,\012'currency'\040=>\040'RUB']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
urldecode("https:\134/\134/pay.freekassa.ru\134/form\134/69999927\134/92c8cb977f83f9ae6920ee0078ed37ca"\012)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\040'fourteen',\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.10,\012'currency'\040=>\040'USDT']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04014,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.10,\012'currency'\040=>\040'USDT']
json_encode($data)
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04014,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.10,\012'currency'\040=>\040'USD']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04015,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.10,\012'currency'\040=>\040'USDT']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04015,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0401,\012'currency'\040=>\040'USD']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04015,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0405,\012'currency'\040=>\040'USDT']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04014,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0405,\012'currency'\040=>\040'USDT']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04014,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\04010,\012'currency'\040=>\040'USDT']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04017,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.0003,\012'currency'\040=>\040'BNB']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\04017,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.02,\012'currency'\040=>\040'BNB']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0401,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0401,\012'currency'\040=>\040'USD']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0401,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.5,\012'currency'\040=>\040'USD']
ksort($data)
json_encode($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
config('payment-callback-handler')
[1]\040??\040[]
null\040??\040[]
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0401,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.5,\012'currency'\040=>\040'USD']
ksort($data)
$sign\040=\040hash_hmac('sha256',\040implode('|',\040$data),\040'c5b8d8f906ee5cdee7aceaf1754e03dc');
json_encode($data)
$data\040=[\012'shopId'\040=>\04026551,\012'nonce'\040=>\040time(),\012'i'\040=>\0401,\012'email'\040=>\040'test2@test.com',\012'ip'\040=>\040\012'85.8.8.8',\012'amount'\040=>\040'RUB',\012'amount'\040=>\0400.5,\012'currency'\040=>\040'USD']
House::inRandomOrder()->first()
House::inRandomOrder()->first()->eligibleCompanies
Company::where('id',\04018)->get()
Company::where('id',\040'18')->get()
2**1024
1*1024
User::first()
array_get([1,\0404],\0400)
array_get([1,\0404],\0401)
array_get([1,\0404],\04099)
User::first()
User::first()->hasRole('admin')
User::first()->hasRole('Admin')
$toReturn\040=\040['a',\040'ff',\040'promotion',\040'dsfsfs',\040'43545']
array_diff($toReturn,\040['promotion'])
$toReturn\040=\040['a',\040'ff',\040'promotion',\040'dsfsfs',\040'43545']
array_diff($toReturn,\040['promotion'])
array_diff($toReturn,\040['promotion'])
array_diff($toReturn,\040['promotion'])
array_diff($toReturn,\040['promotion'])
CashAdvanceRequest::first()
CashAdvanceRequest::latest()->first()
CashAdvanceRequest::latest()->first()->advanceClaim
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest
CashAdvanceRequest::latest()->first()->advanceClaim->advancable
CashAdvanceRequest::latest()->first()->advanceClaim->advanceable
CashAdvanceRequest::latest()->first()->advanceClaim->advanceable
CashAdvanceRequest::latest()->first()->advanceClaim
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest()->toSql()
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest()
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest()
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest()->toSql()
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest()->toSql()
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest
CashAdvanceRequest::latest()->first()->advanceClaim->claimRequest->expenses
now()
now()->subHours(11.6)
$r\040=\040now()->subHours(11.6)
$r->diff(now())
$r->diff(now())->format('%h\040hours\040%i\040minutyes')
$r\040=\040now()->subHours(11)->subminutes(28)
$r->diff(now())->format('%h\040hours\040%i\040minutyes')
$r\040=\040300
$r\040-=\04012
$r
use\040Carbon\134CarbonInterval\040as\040I
I::minutes(300)
I::minutes(300)->forHumans()
I::minutes(300)->cascade()
I::minutes(300)->cascade()->forHumans()
I::minutes(376)->cascade()->forHumans()
I::minutes(376)->cascade()->format('%h\040Hours\040%i\040minutes
I::minutes(376)->cascade()->format('%h\040Hours\040%i\040minutes')00
I::minutes(376)->cascade()->format('%h\040Hours\040%i\040minutes')
use\040App\134Contract\134AdvanceRequest\040as\040A
app(A::class)
use\040App\134Contracts\134AdvanceRequest\040as\040A
app(A::class)
$t\040=\040User::first()
gettype($t)
get_class($t)
bcrypt(111111)
User::where('email',\040'becak22222@gmail.com')->first()
App/Data/Models/User::where('email',\040'becak22222@gmail.com')->first()
App\134Data\134Models\134User::where('email',\040'becak22222@gmail.com')->first()
App\134Data\134Models\134User::where('email',\040'becak22222@gmail.com')->update(['password'\040=>\040bcrypt(11111111)])
User::frst()
User::first()
[$r,\040$t]\040=\040explode('-',\040'hhh-lll')
$r
$t
[$r,\040$t]\040=\040explode('-',\040'hhhlll')
DB::connection('ixt')->table('ixt_accounts')->first()
use\040App\134Contracts\134MigrationItem\040as\040I
app(I::class)
use\040Carbon\134Carbon
Carbon::parse('12\040march\0402023')
Carbon::parse('12\040march\0402023\0405\040pm')
Carbon::parse('12\040march\0402023\0405\040pm')->timestamp
Carbon::parse('12\040march\0402023\0408\040pm')->timestamp
Carbon::parse('12-03-2023\04004:00')->timestamp
use\040Carbon\134Carbon
Carbon::parse('12-03-2023\04004:00')->timestamp
Carbon::parse('14-03-2023\04015:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('14-03-2023\04015:40')->timestamp
Carbon::parse('13-03-2023\04015:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('13-03-2023\04015:40')->timestamp
Carbon::parse('11-03-2023\04015:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04015:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04016:44')->timestamp
Carbon::parse('11-03-2023\04019:44')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04019:44')->timestamp
Carbon::parse('11-03-2023\04021:44')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04021:44')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04022:44')->timestamp
Carbon::parse('13-03-2023\04015:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('13-03-2023\04015:40')->timestamp
Carbon::parse('13-03-2023\04016:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('13-03-2023\04016:40')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04016:40')->timestamp
Carbon::parse('11-03-2023\04016:53')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04016:53')->timestamp
use\040Carbon\134Carbon
Carbon::parse('11-03-2023\04019:53')->timestamp
use\040Carbon\134Carbon
Carbon::parse('09-03-2023\04021:13')->timestamp
Carbon::parse('09-03-2023\04022:13')->timestamp
Carbon::parse('10-03-2023\04022:13')->timestamp
Carbon::parse('09-03-2023\04011:13')->timestamp
Carbon::parse('09-03-2023\04011:13:47')->timestamp
Carbon::parse('09-03-2023\04011:42:47')->timestamp
AuthServer::getClientAccessToken()
User::where('email',\040'mark@ixtelecom.net')->update(['password'\040=>\040bcrypt('111111')])
Status::getApprovedId()->id
null\040??\040'aa'
Opportunity::first()
Opportunity::first()->QuoteLine
Opportunity::first()->Quotes
Opportunity::first()->Quotes->first()
Opportunity::first()->Quotes->first()->QuoteItems
Opportunity::first()->Quotes->first()->QuoteParentsPivot
Opportunity::first()->Quotes->first()->QuoteParents
Opportunity::first()->Quotes->first()->Opportunity
Opportunity::first()->Quotes->first()->BusinessCase
Opportunity::first()->Quotes->first()->QuoteItems
Opportunity::first()->Quotes->first()->QuoteItems->first()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->QuoteLine
Opportunity::first()->Quotes->first()->QuoteItems
Opportunity::first()->Quotes->first()->QuoteItems->first()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLine
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
BusinessCaseQuoteLine::where('bc_id',\0401)->count()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->toSql()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->getBindings()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines()->getBindings()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines()->toSql()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->QuoteLine
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCaseQuoteLineCostLine
Lead::first()
Leads::first()
Leads::first()->Opportunity
Opportunity::where('leads_id',\0401)
Opportunity::where('leads_id',\0401)->get()
Opportunity::where('leads_id',\0401)->get()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines()->toSql()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines()->getBindings()
Opportunity::first()->Quotes->first()->QuoteItems->first()
Opportunity::first()->Quotes->first()->QuoteItems->first()
BusinessCase::first()
BusinessCase::find(399)
BusinessCase::find(399)->BusinessCaseItems
BusinessCase::find(399)->BusinessCaseQuoteLines
BusinessCase::find(399)->BusinessCaseQuoteLines->first()->QuoteLine
BusinessCase::find(399)->BusinessCaseQuoteLines->first()->QuoteLine
Opportunity::first()->Quotes->first()->QuoteItems->first()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->QuoteLine
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->Costline
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->Costline()->toSql()
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->Costline()->getBindings()
User::where('email',\040'julia@ixtelecom.net')->first()
User::where('email',\040'juliaalvita@ixtelecom.net')->first()
User::where('email',\040'juliaalvita@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'juliaalvita@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'juliaalvita@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
User::where('email',\040'juliaalvita@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLinesCostLine
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCaseQuoteLineCostline
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCaseQuoteLineCostline
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCase
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCase
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCase->BusinessCaseIndirectPay
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->BusinessCase->BusinessCaseInterCompany
Opportunity::first()->Quotes->first()->QuoteItems->first()->BusinessCaseQuoteLines->Costline
BusinessnessCaseCostLine""first()
BusinessnessCaseCostLine::first()
BusinessCaseCostLine::first()
BusinessCaseCostLine::first()
BusinessCaseCostline::first()
BusinessCaseCostline::first()->BusinessCaseInterCompany
BusinessCaseCostline::first()->BusinessCaseIndirectPay
BusinessCaseCostline::whereExists('BusinessCaseInterCompany')->count()
BusinessCaseCostline::whereHas('BusinessCaseInterCompany')->count()
BusinessCaseCostline::inRandomOrder()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseInterCompany
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseIndirectPay
BusinessCaseCostline::inRandomOrder()->first()->BusinessCaseIndirectPay()->toSql()
Costing::first()
Costing::first()->costline
Costing::last()
Costing::latest()->first()
Costing::latest()->first()->costline
0.00\040??\0401.12
AuthServer::getClientAccessToken()
use\040App\134Repositories\134UserRepository\040as\040R
app(R::class)
app(R::class)
app(R::class)
app(R::class)
app(R::class)
use\040App\134Repositories\134UserRepository\040as\040R
app(R::class)
use\040App\134Repositories\134UserRepository\040as\040R
$r\040=\040app(R::class)
$r->getUserById('e6bd7f35-5bd2-4b34-b2d0-b2374d9dbd5c')
use\040App\134Repositories\134UserRepository\040as\040R
$r\040=\040app(R::class)
$r->getUserById('e6bd7f35-5bd2-4b34-b2d0-b2374d9dbd5c')
use\040App\134Repositories\134UserRepository\040as\040R
$r\040=\040app(R::class)
$r->getUserById('e6bd7f35-5bd2-4b34-b2d0-b2374d9dbd5c')
use\040App\134Repositories\134UserRepository\040as\040R
$r\040=\040app(R::class)
$r->getUserById('e6bd7f35-5bd2-4b34-b2d0-b2374d9dbd5c')
now()->format('d\040f')
now()->format('d\040F')
now()->format('d\040F,\040Y')
now()->format('d\040F,\040Y\040h:i:s')
now()->format('d\040F,\040Y\040h:iA')
now()->format('d\040F,\040Y\040h:i\040A')
now()->format('d\040F,\040Y\040H:i\040A')
now()->format('d\040F,\040Y\040H:iA')
now()->format('d\040F,\040Y\040h:i\040A')
now()->format('d\040F,\040Y\040h:iA')
config('postmark.secret')
config('postmark.secret')
now()->subHours(13)
now()->subHours(13)->diffInSeconds(now())
now()->subHours(13)->diffInSeconds(now())->cascade()->forHumans()
\134Carbon\134CarbonInterval::seconds(now()->subHours(13)->diffInSeconds(now()))->cascade()->forHumans()
\134Carbon\134CarbonInterval::seconds(now()->subHours(13)->addMinutes(45)->diffInSeconds(now()))->cascade()->forHumans()
app(ExportJob::class)
$r\040=\040app(ExportJob::class)
$r\040=\040app(ExportJob::class)
$r->exportableEntities()->toSql()
$r->exportableEntities()->getBindings()
$r\040=\040app(ExportJob::class)
$r->exportableEntities()->getBindings()
$r->exportableEntities()->toSql()
$t\040=\040Travel::first()
get_class($t)
$e\040=\040ExportJob::first()
$e->exportableEntities
$e->exportableEntities->first()
$e->exportableEntities->first()->exportable
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
Travel::select()->update(['is_exported'\040=>\040false])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
now()->format('d\040F,\040Y\040h:i\040A')
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
ExportJob::select()->update(['status'\040=>\040'pending'])
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
ClaimExpense::first()
ClaimExpense::first()->contexts
ClaimExpense::find('2aaa5ddb-408c-4e44-948e-c5585ef1d3f7')
ClaimExpense::find('2aaa5ddb-408c-4e44-948e-c5585ef1d3f7')->contexts
Travel::select()->update(['is_exported'\040=>\040false,\040'export_status'\040=>\040'pending_export'])
Travel::latest()
Travel::earliest()
Travel::oldest()
Travel::oldest()->first()
Travel::latest()->first()
Quotation::where('is_customer_accepted')->count()
Quotation::where('is_customer_accepted')->first()
Quotation::where('is_customer_accepted')->first()->purchaseOrders
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders')
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders')->first()
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders')->first()->purchaseOrders
Quotation::where('is_customer_accepted')->whereHas(fn()\040=>\040false)->count()
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders',\040fn()\040=>\040false)->count()
uotation::where('is_customer_accepted')->whereHas('purchaseOrders',\040fn($q)\040=>\040$q->first())->count()
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders',\040fn($q)\040=>\040$q->first())->count()
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders',\040fn($q)\040=>\040dd($q->toSql()))->count()
Quotation::where('is_customer_accepted')->whereHas('purchaseOrders',\040fn($q)\040=>\040dd($q->toSql()))->count()
Quotation::first()
Quotation::first()->purchaseOrder
Quotation::whereHas('purchaseOrder')->firsT()
Quotation::whereHas('purchaseOrder')->firsT()
Quotation::whereHas('purchaseOrder')->first()->purchaseOrder
Quotation::whereHas('purchaseOrders')->first()->purchaseOrders
Quotation::latest()->first()
Quotation::latest()->first()->user
Quotation::latest()->first()->quoteLines
Quotation::inRandomOrder()->first()
Quotation::inRandomOrder()->first()
Quotation::inRandomOrder()->first()
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
Quotation::inRandomOrder()->first()->quoteLines
$t\040=\040[36,\040727)
$t\040=\040[36,\040727]
max($t)
collect($t)
collect($t)->max()
collect($t)->max()
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password'\040=>\040bcrypt(111111)])
LeaveRequest::latest()->first()
LeaveRequest::latest()->first()->leave_dates
json_decode(LeaveRequest::latest()->first()->leave_dates)
json_decode(LeaveRequest::latest()->first()->leave_dates)
LeaveRequest::latest()->first()->leave_dates
Company::all()
IxCompany::all()
IxCompany::all()->pluck('name')
sys_get_temp_dir()
$cashAdvanceRequest\040=\040CashAdvanceRequest::first()
$requester\040=\040$cashAdvanceRequest->requester
$cashAdvanceRequest\040=\040CashAdvanceRequest::inRandomOrder()->first()
$requester\040=\040$cashAdvanceRequest->requester
$requester->approvals
$requester->approvals()->where('approval_type_id',\0403)->get()
$requester
$requester->approvals()->where('approval_type_id',\0403)->get()
$cashAdvanceRequest->approvalRequests
$req\040=\040$requester->approvals()->where('approval_type_id',\0403)->count()
$app\040=\040$cashAdvanceRequest->approvalRequests()->where('status',\040'APPROVED')->count()
bcrypt(111111)
app()_
app()
app(Ujang::class)
app\134(Ujang::class)
app\134(Ujang::class)
app(\134Ujang::class)
app('app-details'\012)
app(Ujang::class)
new\040Ujang
new\040Ujang
app(App\134Ujang::class)
app(App\134Ujang::class)
app(App\134Ujang::class)
app(App\134Ujang::class)
app(App\134Ujang::class)
app(App\134Ujang::class)
app(App\134Ujang::class)
use\040App\134Contracts\134Ujang\040as\040U
new\040U
app(U::class)
Service::first()
Opportunity::find('936533b0-348d-431e-bf64-5a0bc056fe93')
Opportunity::find('936533b0-348d-431e-bf64-5a0bc056fe93')->quotations
$q\040=\040Quoteline::where('service_id',\040'93168f8a-7527-4d12-9e98-77511e8398e0')->count()
use\040App\134Models\134Quoteline
$q\040=\040Quoteline::where('service_id',\040'93168f8a-7527-4d12-9e98-77511e8398e0')->count()
$q\040=\040Quoteline::where('service_id',\040'92a45022-3846-43fd-950a-6f4f2f7f3a5e')->count()
'aaa'\040??\040[]
null\040??\040[]
use\040App\134Registries\134RequirementImportRegistry\040as\040R
app(R::class)
app(R::class)->all()
5*20%2
7*20%2
(7*20)%2
(5*20)%2
(5*20)%1
(5*20)
(19*20)
(19*20)%2
(17*20)%2
17*20
21*20
(2*20)%2
(2*20)%7
(21*20)%7
(100*20)%7
(121*20)%7
(200*20)%7
(214*20)%7
(221*20)%7
(221*20)%5
(220*20)%5
(2*20)%5
(19*20)%5
(19*20)%3
Country::first()
Country::first()->states
Country::first()->states
Country::where('name',\040'indonesia')->first()
Country::where('name',\040'indonesia')->first()->states
Collator::create(')
Collator::create('')
$c\040=\040Collator::create('')
$c->setStrength(Collator::PRIMARY)
$c->compare('Badakhshān',\040'Badakhshan')
$c->compare('Badakhshāni',\040'Badakhshan')
$c->compare('Badakhshān',\040'Badakhshan')
$c->compare('Badakhshan',\040'Badakhshan')
$c->compare('Badakhshān',\040'badakhshan')
MaterialInput::whereNull('slug')->count()
MaterialInput::whereNotNull('slug')->count()
MaterialInput::whereNotNull('slug')->forceDelete()
Driver::first()
Driver::first()->workSessions
WorkSession::first()
WorkSession::first()->update(['session_active'\040=>\040false])
QuoteLine::first()
QuoteLine::first()->user
use\040App\134Contracts\134RequirementTemplateImport\040as\040T
app(T::clas);
app(T::class);
use\040App\134Contracts\134RequirementTemplateImport\040as\040T
app(T::class);
0.995/1
1/0.995
0.995*100
0.9950*100
User::first()
QuoteLine::latest()->first()
QuoteLine::latest()->first()->qsSubmission
QuoteLine::latest()->first()->qsSubmission()->toSql()
QuoteLine::latest()->first()->qsSubmission()->toSql()
AuthServer::getClientAccessToken()
QuoteSolutionSubmission::latest()->first()
QuoteSolutionSubmission::latest()->first()->updateBy
QuoteSolutionSubmission::latest()->first()->updatedBy
USer::first()
User::first()
User::where('email',\040'\040tesasdsdfs@sadf.com')->first()
User::where('email',\040'tesasdsdfs@sadf.com')->first()
DB::table('users')->where('email',\040'tesasdsdfs@sadf.com')->first()
DB::table('users')->where('email',\040'tesasdsdfs@sadf.com')->update(['password'\040=>\040bcrypt(11111111)])
DB::table('users')->where('email',\040'tesasdsdfs@sadf.com')->update(['email'\040=>\040'thetet@gmail.com'])
DB::table('users')->where('email',\040'thetet@gmail.com')->update(['email'\040=>\040'thetet_deleted@gmail.com'])
$t\040=\040'blabla_deleted@gmail.com'
[$m,\040$n]\040=\040explode('@',\040$t)
Str::endsWith('_deleted',\040$m)
use\040Illuminate\134Support\134Facades\134Str;
Str::endsWith('_deleted',\040$m)
use\040Str;
Str::endsWith('_deleted',\040$m)
str_endswith()
endsWith()
DB::table('users')->where('email',\040'thetet_deleted@gmail.com')->update(['email'\040=>\040'thetet@gmail.com'])
new\040QuotelineCreateRequest()
use\040App\134Http\134Requests\134QuoteLineCreateRequest;
new\040QuoteLineCreateRequest()
Carbon::createFromTimestamp(1691547563)
use\040Carbon\134Carbon
Carbon::createFromTimestamp(1691547563)
use\040Carbon\134Carbon
Carbon::create('21\040August\0402023\04007:00')->tz('asia/jakarta')
Carbon::create('21\040August\0402023\04008:00')->tz('asia/jakarta')
Carbon::create('21\040August\0402023\04008:00')->tz('Asia/Jakarta')
Carbon::create('21\040August\0402023\04008:00')->tz('Asia/Jakarta')->timestamp
urldecode('formatted_address%2Cname%2Crating%2Copening_hours%2Cgeometry')
app('geocoder')
app('geocoder')->geocode('Jakarta')
app('geocoder')->geocode('Jakarta')->get()
app('geocoder')->geocode('Jakarta')->get()
app('geocoder')->geocode('Jakarta')->get()->first()
app('geocoder')->geocode('Jakarta')->dump('kml')
app('geocoder')->geocode('Jakarta')->dump('json')
app('geocoder')->geocode('Jakarta')->dump('wkb')
app('geocoder')->geocode('Jakarta')->dump('wkt')
app('geocoder')->geocode('SG1\040Equinix')->first()
app('geocoder')->geocode('SG1\040Equinix')->get()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getFormattedAddress()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getPolitical()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getSublocalityLevels()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getSublocalityLevels()->first()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getSublocalityLevels()->all()
$formatter\040=\040new\040\134Geocoder\134Formatter\134StringFormatter();
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getName()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getResultType()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getStreetName()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getPostalCode()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getCity()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getState()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getSubLocality()
app('geocoder')->geocode('SG1\040Equinix')->get()->first()->getLocality()
app('geocoder')->geocode('AIMS\040Cyberjaya')->get()->first()->getLocality()
app('geocoder')->geocode('AIMS\040Cyberjaya')->get()->first()->getSubLocality()
app('geocoder')->geocode('AIMS\040Cyberjaya')->get()->first()->getStreetName()
app('geocoder')->geocode('AIMS\040Cyberjaya')->get()->first()->getCountry()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getCountry()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getStreetName()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getLocality()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getSublocality()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getFormattedAddress()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getPostCode()
app('geocoder')->geocode('Petronas\040Tower')->get()->first()->getPostalCode()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getPostalCode()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getLocality()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getSubLocality()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getFormattedAddress()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getAdminLevels()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getAdminLevels()->all()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getAdminLevels()->first()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getAdminLevels()->first()->getName()
app('geocoder')->geocode('Mutiara\040ville\040tower\040e')->get()->first()->getAdminLevels()->first()->__toString()
app('geocoder')->geocode('ix\040telecom')->get()->first()->getAdminLevels()->first()->__toString()
app('geocoder')->geocode('sg1\040equinix')->get()->first()->getAdminLevels()->first()->__toString()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()->getAdminLevels()->first()->__toString()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()->getAdminLevels()->all()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()->getFormattedAddress()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()->getLocality()
app('geocoder')->geocode('Phase\0404,\04056,\040Hilir\040Sungai\040Kluang\0401,\040Bayan\040Lepas\040Industrial\040Park,\04011900\040Bayan\040Lepas,\040Penang\040(Latlong:\0405.303733426571138,\040100.29168922807085)')->get()->first()->getSubLocality()
CompanyCOntact::firsat()
CompanyCOntact::first()
CompanyContact::first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Wilson\040Chang\040Chin\040Weng')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Wilson\040Chang\040Chin\040Weng')->get()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Wilson\040Chang\040Chin\040Weng')->toSql()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Wilson\040Chang\040Chin\040Weng')->getBindings()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Sim\040Ailing')->getBindings()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Sim\040Ailing')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'ZULHILMI')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Stefan\040Mihov')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'Vanessa\040Hou')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040'\040',\040last_name)",\040'MIchael\040Leung')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040last_name)",\040'MIchael\040Leung')->first()
CompanyContact::whereRaw("CONCAT(first_name,\040last_name)",\040'MichaelLeung')->first()
CompanyContact::select(DB::raw"CONCAT(first_name,\040\134'\040\134',\040last_name)",\040'Michael\040Leung')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040\134'\040\134',\040last_name)\040as\040full_name"))->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'Syarifah\040Ahmad')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'Syarifah\040Ahmad')->latest()->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'Syarifah\040Ahmad')->get()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'AMARJIT')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'Iandra\040Luiz')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name"))->having('full_name',\040'Varun\040Madan')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id"))->having('full_name',\040'Varun\040Madan')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id"))->having('full_name',\040'Varun\040Madan')->first()
(int)\040'ontime'
(int)\040'ontime'
CompanyContact::latest()->first()
CompanyContact::latest()->first()->accounts
CompanyContact::first()
CompanyContact::first()->account()
CompanyContact::first()->accounts()
CompanyContact::first()->accounts
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id"))->having('full_name',\040'HAZIQ\040AIZUDDIN')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id"))->having('full_name',\040'HAZIQ\040AIZUDDIN')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id"))->having('full_name',\040'HAZIQ\040AIZUDDIN')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id,\040id"))->having('full_name',\040'HAZIQ\040AIZUDDIN')->first()
CompanyContact::find('99dd99b0-0a82-4a25-9c5c-c5f1f8899ace')
CompanyContact::find('99dd99b0-0a82-4a25-9c5c-c5f1f8899ace')->accounts
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')->contacts
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')->companyContact
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')->companyContacts
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')->companyContacts->first()
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->accounts
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->company
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->company->accounts
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->company->companyAccounts
Company::find('92a3f603-bb06-4ac6-9fce-114d7df580d3')->contacts
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->contacts
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->accounts
CompanyContact::find('99dd99b0-a456-4375-9096-26b95fba74cc')->accounts()->toSql()
CompanyAccountContact::first()
CompanyAccountContact::where('company_contact_id',\040'99dd99b0-a456-4375-9096-26b95fba74cc')->first()
CompanyContact::select(DB::raw("CONCAT(first_name,\040'\040',\040last_name)\040as\040full_name,\040company_id,\040id"))->having('full_name',\040'lily\040zhang')->first()
CompanyAccountContact::where('company_contact_id',\040'99dd99b0-31ff-42f2-9427-678ee42372ec')->first()
User::first()
AuthServer::getAuthServerEndpoint()
AuthServer::getAuthServerEndpoint()
AuthServer::getAuthServerEndpoint()
AuthServer::getAuthServerEndpoint()
QuoteLine::latest()->first()
QuoteLine::latest()->first()->inputs
QuoteLine::latest()->first()->inputs->first()
QuoteLine::latest()->first()->inputs->first()->label
User::first()
User::latest()->first()
User::latest()->first()->availableServers()->count()
User::latest()->first()->availableServers()->toSql()
User::latest()->first()->availableServers
Shorter::create('/')
app('geocoder')->geocode('aa')
app('geocoder')->geocode('aa')->get()
app('geocoder')->geocode('jakarta')->get()
app('geocoder')->geocode('jakarta')->first()
app('geocoder')->geocode('jakarta')->get()
app('geocoder')->geocode('jakarta')->get()->first()
app('geocoder')->geocode('jakarta')->get()->first()->getFullAddress()
app('geocoder')->geocode('jakarta')->get()->first()->fullAddress()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->first()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->first()->formattedAddress()(\012_\012)
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->first()->formattedAddress()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->first()->getFormattedAddress()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->last()->getFormattedAddress()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()->[2]->getFormattedAddress()
app('geocoder')->geocode('-6.9837621,110.4619708')->get()[2]->getFormattedAddress()
use\040Carbon\134Carbon
Carbon::parse('2023-09-06\04022:00')
Carbon::parse('2023-09-06\04022:00')->timestamp
Carbon::parse('2023-09-06\04022:00')->timestamp
Carbon::parse('2023-09-07\04003:00')->timestamp
Carbon::parse('2023-09-07\04000:21')->timestamp
User::first()
use\040Lookup;
Lookup::test()
Lookup::test()
Lookup::test()
Lookup::test()
Lookup::test()
Lookup::test()
Lookup::test()
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Mahesh')
Lookup::getUser('Mahesh')
Lookup::getUser('Mahesh')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymark\040Fernan')
Lookup::getUser('Jaymar')
Lookup::getCompany('Symphony\040Communication\040Public\040Company\040Limited')
Lookup::getCompany('Telek')
Lookup::getCompany('Telec')
Lookup::getCompany('Telec')
Lookup::getContact('may')
Lookup::getContact('lily\040zhang')
Lookup::getContact('lily\040zhang')
CompanyContact::find('98b323a1-40ac-4fc4-9e42-afe075e50f5e')
CompanyContact::where('id',\040'98b323a1-40ac-4fc4-9e42-afe075e50f5e')
CompanyContact::where('id',\040'98b323a1-40ac-4fc4-9e42-afe075e50f5e')->first()
CompanyContact::first()
CompanyContact::first()
CompanyContact::where('id',\040'98b323a1-40ac-4fc4-9e42-afe075e50f5e')->first()
CompanyContact::find('98b323a1-40ac-4fc4-9e42-afe075e50f5e')
Lookup::getContact('lily')
Lookup::getContact('lily')
DB::connection('auth_boneybone')->table('countries')->first()
QuoteSolutionSubmission::find('99d794f7-3828-4cf3-889b-668841fe1a43')
QuoteSolutionSubmission::find('99d794f7-3828-4cf3-889b-668841fe1a43')->assignedSolution
ReferenceNumber::latest()->first()
ReferenceNumber::latest()->first()->reference_number
$t\040=\040ReferenceNumber::latest()->first()->reference_number
00001220
ltrim('00002938',\0400)
sprintf("%08d",\04019)
sprintf("OPP%08d",\04019)
Str::contains("CONVERGE\040ICT\040SOLUTIONS,\040INC",\040"converge\012")
Str::contains(strtolower("CONVERGE\040ICT\040SOLUTIONS,\040INC"),\040"converge\012")
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
use\040App\134Jobs\134ResyncQuoteSolutionSubmissionData\040as\040J
J::dispatch()
J::dispatch()
AuthServer::getClientAccessToken()
$r\040=\0403
explode(',',\040$r)
User::count()
QuoteLine::find('9a61ca3d-ac2d-46b3-a5bf-2e637a046bc0')
QuoteLine::find('9a61ca3d-ac2d-46b3-a5bf-2e637a046bc0')->qsSubmission
QuoteLine::find('9a61ca3d-ac2d-46b3-a5bf-2e637a046bc0')->qsSubmission->assignedSolution
QuoteLine::find('9a61ca3d-ac2d-46b3-a5bf-2e637a046bc0')->qsSubmission
range(0,1)
range(1,1)
range(1,0)
range(1,2)
$t\040=\040[1,2,3]
unset($t[count($t])
unset($t[count($t)])
$t
unset($t[count($t\040-\0401)])
unset($t[count($t)\040-\0401])
$t
MaterialInput::first()
MaterialInput::where('slug',\040'a-end-city')->count()
MaterialInput::where('slug',\040'a-end-city')->first()
MaterialInput::where('slug',\040'a-end-city')->update(['is_required'\040=>\040false])
MaterialInput::where('slug',\040'a-end-state')->update(['is_required'\040=>\040false])
MaterialInput::where('slug',\040'z-end-state')->update(['is_required'\040=>\040false])
MaterialInput::where('slug',\040'z-end-city')->update(['is_required'\040=>\040false])
MaterialInput::first()
MaterialInput::all()
MaterialInput::all()->pluck('slug')
MaterialInput::all()->pluck('slug')->unique()
MaterialInput::all()->pluck('slug')->unique()->values()
MaterialInput::all()->unique()->map(function($e)\040{\040return\040"'"\040.\040$e->slug\040.\040"'\040=>\040'"\040.\040$e->label\040.\040"'";\040}\040)
MaterialInput::all()->unique()->map(function($e)\040{\040return\040[$e->slug\040=>\040$e->label];\040}\040)
MaterialInput::all()->unique()->flatMap(function($e)\040{\040return\040[$e->slug\040=>\040$e->label];\040}\040)
Opportunity::whereHas('tags')->first()
Opportunity::whereHas('tags')->first()->tags
Opportunity::whereHas('tags')->first()->tags->pluck('name')
Opportunity::whereHas('tags')->first()->tags->pluck('name')->implode(',')
Opportunity::with('quotation.quoteLines')->first()
Opportunity::with('quotations.quoteLines')->first()
Opportunity::with('quotations.quoteLines')->first()
Opportunity::with('quotations.quoteLines')->first()->map(function($oppo)\040{\040return\040$oppo->quotations;\040})
Opportunity::with('quotations.quoteLines')->first()->quotations->map(function($oppo)\040{\040return\040$oppo->quoteLines;\040})
Opportunity::with('quotations.quoteLines')->first()->quotations->map(function($oppo)\040{\040return\040$oppo->quoteLines;\040})->collapse()
User::first()
Quoteline::first()
QuoteLine::first()
QuoteLine::first()->quotation
QuoteLine::first()->quotation->projectKickOffDocument
QuoteLine::first()->quotation->projectKickOffDocument
QuoteLine::find('9a6928f5-eadc-431c-80dd-d8037c181d92')
QuoteLine::find('9a6928f5-eadc-431c-80dd-d8037c181d92')->quotation
QuoteLine::find('9a6928f5-eadc-431c-80dd-d8037c181d92')->quotation->projectKickOffDOcument
QuoteLine::find('9a6928f5-eadc-431c-80dd-d8037c181d92')->quotation->projectKickOffDOcument->projectDocument
use\040App\134Contracts\134ProjectRenewal\040as\040L
app(L::class)
app(L::class)->getNewLead()
use\040Illuminta\134Pipeline\134Pipeline\040as\040P
app(P::class)
use\040Illuminta\134Contracts\134Pipeline\040as\040P
app(P::class)
use\040Illuminta\134Contracts\134Pipeline\134Pipeline\040as\040P
app(P::class)
use\040Illuminate\134Contracts\134Pipeline\134Pipeline\040as\040P
app(P::class)
use\040Illuminate\134Pipeline\134Pipeline\040as\040P
app(P::class)
BusinessCase::whereHas('costings')->first()
BusinessCase::whereHas('costings')->first()->costings
BusinessCase::whereHas('costings')->first()->calculationSummary
BusinessCase::first()
BusinessCase::first()->quotation
BusinessCase::first()->quotation->opportunity
BusinessCase::find('9ac27a69-9338-4f53-8a66-06412215c1df')
BusinessCase::find('9ac27a69-9338-4f53-8a66-06412215c1df')->parentBc
now()->format('d/m/Y\040h:i:s\040A')
Quotation::whereHas('projectKickOffDocument')->first()
Quotation::whereHas('projectKickOffDocument')->first()->projectKickOffDocument
Quotation::find('9ac432c2-e42f-4100-a3ff-f30eb3d91a4e')
Quotation::find('9ac432c2-e42f-4100-a3ff-f30eb3d91a4e')->projectKickOffDocuments
Quotation::find('9ac432c2-e42f-4100-a3ff-f30eb3d91a4e')->projectKickOffDocument
Quotation::find('9ac432c2-e42f-4100-a3ff-f30eb3d91a4e')->projectKickOffDocument()->create()
ProjectKickOffDocument::find('9ac437dc-e912-4b0c-98a1-bb6f6ccdf48c')
ProjectKickOffDocument::find('9ac437dc-e912-4b0c-98a1-bb6f6ccdf48c')->items
Quotation::whereHas('contact')->first()
Quotation::whereHas('contact')->first()->contact
Quotation::whereHas('contact')->first()->contact->company
Quotation::whereHas('contact')
Quotation::whereHas('contact')
Quotation::whereHas('contact')
Quotation::whereHas('contact')->first()
Quotation::whereHas('contact')->first()->contact
Quotation::whereHas('contact')->first()->contact->company
$t\040=\040'\040fdsf'
trim($t)
Opportunity::find('9a8dcf7a-5ba8-4fef-9961-5d81439e8b0b')
Opportunity::find('9a8dcf7a-5ba8-4fef-9961-5d81439e8b0b')->quotations
Opportunity::find('9a8dcf7a-5ba8-4fef-9961-5d81439e8b0b')->quotations->first()->quoteLines
Opportunity::find('9a8dcf7a-5ba8-4fef-9961-5d81439e8b0b')->quotations->first()->quoteLines()->delete()
Cache::remember('aa',\040'thevalue',\040now()->addMinutes(50))
Cache::remember('aa',\040'thevalue',\040function()\040{\040now()->addMinutes(50)\040})
Cache::remember('aa',\040'thevalue',\040function()\040{\040now()->addMinutes(50);\040})
Cache::get('aa')
Cache::put('aaa',\040'thevalue',\040now()->addMinutes(3))
Cache::get('aaa')
Cache::get('aaa')
$p\040=\040new\040ZohoProjectIntegration
use\040App\134Http\134Integrations\134ZohoProject\134ZohoProjectIntegration
$p\040=\040new\040ZohoProjectIntegration
use\040App\134Http\134Integrations\134ZohoProject\134ZohoProjectIntegration
$p\040=\040new\040ZohoProjectIntegration
use\040App\134Http\134Integrations\134ZohoProject\134ZohoProjectIntegration
$p\040=\040new\040ZohoProjectIntegration
$p->GetAllProject()
$projects\040=\040$p->GetAllProject()
$projects->first()
$projects->first()->first()
$projects->first()
$projects->first()[0]
$y\040=\040collect($projects->first())
$y->last()
$u\040=\040$y->first()
Arr::get($u,\040'custom_fields
Arr::get($u,\040'custom_fields')
collect(Arr::get($u,\040'custom_fields'))
collect(Arr::get($u,\040'custom_fields'))->where('Customer\040Name',\040'!=',\040null)
collect(Arr::get($u,\040'custom_fields'))->where('PKD\040Number',\040'!=',\040null)
Arr::get(null,\040'a.a.a.a.a')
LeaveSetting::first()
LeaveSession::first()
Requirement::first()
DB::connection('qs')->table('requirements')->first()
ExportedDocumentChunk::first()
ExportedDocumentChunk::first()->document
ExportedDocumentChunk::first()->document()->toSql()
ExportedDocumentChunk::first()->document()->toSql()
ExportedDocumentChunk::first()->document
ExportedDocument::latest()->first()
ExportedDocument::latest()->first()->created_at
ExportedDocument::latest()->first()->created_at->diffInHour(now())
ExportedDocument::latest()->first()->created_at->diffInHours(now())
User::first()
Service::where('name',\040'Global\040Internet')->first()
Service::where('name',\040'Global\040Internet')->first()->parent
AuthServer::getAuthServerEndpoint()
config('services.qs.api')
DB::connection('qs_db')->select('*')->from('quote_solutions')->first()
DB::connection('qs_db')->table('quote_solutions')->first()
DB::connection('qs_db')->table('quote_solutions')->latest()->first()
DB::connection('qs_db')->table('requirement_quote_solutions')->latest()->first()
Vendor::first()
Vendor::count()
Vendor::where('name',\040'TPM')->first()
Vendor::where('name',\040'like',\040'%TPM%')->first()
Vendor::where('name',\040'like',\040'%Kinx%')->first()
Vendor::where('name',\040'like',\040'%Kinx%')->count()
Vendor::where('name',\040'like',\040'%Kinx%')->geT()
Vendor::where('name',\040'like',\040'%Zetta\040Net%')->get()
Vendor::where('name',\040'like',\040'%Zetta%')->get()
Vendor::where('name',\040'like',\040'%Lintasarta%')->get()
User::first()
Artisan::call('tinker')
Artisan::call('u:generate-raw-sales-data-export',\040['email)
Artisan::call('u:generate-raw-sales-data-export',\040['email'\040=>\040'aaa3@gmail.com'])
$t\040=\040<<<
$t\040=\040<
$t\040=\040<<<EOF\012Server\040error:\040`POST\040http://api.crm.ixtelecom.net/api/quote-lines/9a370503-a7f1-41f3-ac9c-7b7ba410afc2/quote-solutions?skip_event=true`\040resulted\040in\040a\040`50\012{"success":false,"message":"The\040Client\040Credentials\040were\040Invalid."}\012ERROR:\040{"success":false,"message":"The\040Client\040Credentials\040were\040Invalid."}\012EOF
$t
Str::contains('credentials',\040$t)
Str::contains($t,\040'credentials')
$t
Str::contains($t,\040'Credentials')
Str::startWith('QL',\040'QLFKJSDF')
Str::startsWith('QL',\040'QLFKJSDF')
Str::startsWith('QLFKJSDF',\040'QL)
Str::startsWith('QLFKJSDF',\040'QL')
User::count()
User::first()
User::wherE('first_name',\040'like',\040'%harith%')->first()
User::wherE('first_name',\040'like',\040'%har%')->first()
User::wherE('first_name',\040'like',\040'%har%')->get()
User::wherE('first_name',\040'like',\040'%adlina%')->get()
User::wherE('first_name',\040'like',\040'%aishyah%')->get()
$t\040=\040'In\040Progress'
Str::snake(Str::lower($t))
User::first()
Opportunity::first()
Opportunity::whereNull('contact_id')->count()
Opportunity::whereNull('contact_id')->orWhereNull('account_id')->count()
Opportunity::whereNull('contact_id')->orWhereNull('account_id')->first()
Opportunity::whereNull('contact_id')->orWhereNull('account_id')->inRandomOrder()->first()
User::first()->passwordHistories
User::first()->passwordHistories()->toSql()
User::first()->passwordHistories()->getBindings()
UserPasswordHistory::first()
UserPasswordHistory::first()->changed_at
UserPasswordHistory::first()->expired_at
UserPasswordHistory::first()->need_to_change_current_password
use\040App\134Contracts\134User\134PasswordUpdatePipeline\040as\040P
app(P::class)
User::first()->allowedClients
User::first()->allowedClients
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->getBindings()
User::first()->allowedClients()->getBindings()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()
User::latest()->first()
User::latest()->first()->allowedClients
User::first()
User::first()->allowedClients()->getBindings()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->getBindings()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->toSql()
User::first()->allowedClients()->getBindings()
User::latest()->first()->allowedClients
OauthClient::first()
use\040App\134Models\134OauthClient
OauthClient::first()
OauthClient::first()->users
OauthClient::first()->users()->toSql()
OauthClient::first()->users
use\040App\134Models\134OauthClient
OauthClient::first()->users()->toSql()
use\040App\134Models\134OauthClient
OauthClient::first()->users()->toSql()
OauthClient::first()->users()->toSql()
use\040App\134Models\134OauthClient
OauthClient::first()->users()->toSql()
OauthClient::first()->users()->toSql()
use\040App\134Models\134OauthClient
OauthClient::first()->users()->toSql()
OauthClient::first()->users
OauthClient::latest()->first()
OauthClient::latest()->first()->users
OauthClient::latest()->first()->users->first()
OauthClient::latest()->first()->users->first()->roles
OauthClient::latest()->first()->users->first()->roles
ClientPermission::first()
User::first()
User::first()->permissions
RoleHasPermission::first()
ClientRole::whereHas('permissions')->first()
ClientRole::whereHas('permissions')->latest()->first()
ClientRole::whereHas('permissions')->latest()->first()->permissions
Driver::all()
now()->format('d\040M,\040Y')
User::where('email',\040'unazully@gmail.com')->update(['password'\040=>\040bcrypt(111111)]\012)
User::where('email',\040'intansuriana@boneybone.com')->update(['password'\040=>\040111111])
User::where('email',\040'intansuriana@boneybone.com')->first()
User::where('email',\040'like',\040\040'%intan%')->first()
User::where('email',\040'like',\040\040'%intan%')->get()
PurchaseRequestSetting::first()
PurchaseRequestSetting::first()->keys()
array_keys(PurchaseRequestSetting::first())
PurchaseRequestSetting::first()->toArray()
Str::endsWith('toktok_bebek',\040'bebek')
Str::endsWith('toktok_bebek',\040'bebeks')
str_replace('_delegate',\040'',\040'koto_delegate')
User::wherE('email',\040'unazully@gmail.com')->first()
DB::table('oauth_clients')->firsT()
DB::table('oauth_clients')->where('name',\040'like',\040'%zte%')->first()
DB::table('oauth_clients')->where('name',\040'like',\040'%zte%')->get()
DB::table('oauth_clients')->where('id',\040'c0290da6-a697-4801-986d-d9853ac78d29')->update(['redirect'\040=>\040'https://zte.ixtelecom.net/auth/callback,\040http://zte.ixtelecom.net/auth/callback,\040http://zte-system.test/auth/callback'])
DB::table('oauth_clients')->where('name',\040'like',\040'%zte%')->get()
DB::table('oauth_clients')->where('name',\040'like',\040'%zte%')->get()
DB::table('oauth_clients')->find('c0290da6-a697-4801-986d-d9853ac78d29')
DB::table('oauth_clients')->where('id',\040'c0290da6-a697-4801-986d-d9853ac78d29')->update(['redirect'\040=>\040'https://zte.ixtelecom.net/auth/callback,http://zte.ixtelecom.net/auth/callback,http://zte-system.test/auth/callback'])
Str::contains('bebek',\040'bebeka')
Str::contains('bebeka',\040'bebek')
Quotation::first()
Quotation::first()->quoteLines
Quotation::first()->quoteLines
Quotation::first()->quoteLines->first()
Quotation::first()->quoteLines->first()
Quotation::first()->quoteLines
Quotation::first()->quoteLines()->toSql()
Quotation::first()
sprintf("%08d",\040173)
sprintf("W%08d",\040173)
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
WorkSession::generateReferenceNumber()
User::first()
now()->format('Y')
now()->format('m')
now()->format('M')
now()->format('f')
now()->format('n')
(int)\040now()->format('n')
(int)\040now()->format('Y')
ExpenseType::whereNotNull('company_id')->count()
ExpenseType::whereNotNull('company_id')->delete()
User::first()
DB::table('oauth_clients')->where('id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->first()
DB::table('oauth_clients')->where('id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->update(['redirect'\040=>\040'http://crm.boneybone.com/auth/callback,http://ixt-ng-crm.ixtelecom.net/auth/callback,http://ixg-ng-crm.ixtelecom.net/auth/callback,http://ptix-ng-crm.ixtelecom.net/auth/callback,http://ixg-ng-crm-frontend.aebfhvbquy-xmz4qj98162o.p.runcloud.link/auth/callback,http://ixs-ng-crm.ixtelecom.net/auth/callback,http://crm.ixtelecom.net/auth/callback,http://crm-frontend.x1dcsk3yfa-zqy3j1kz03kg.p.runcloud.link/auth/callback,\040http://crm-revamp.test/auth/callback'])
AuthServer::getAuthServerEndpoint()
AuthServer::getAuthServerEndpoint()
DB::table('oauth_clients')->where('id',\040'cf662f39-940f-4a50-93a4-0d9b45888d82')->update(['redirect'\040=>\040'http://crm.boneybone.com/auth/callback,http://ixt-ng-crm.ixtelecom.net/auth/callback,http://ixg-ng-crm.ixtelecom.net/auth/callback,http://ptix-ng-crm.ixtelecom.net/auth/callback,http://ixg-ng-crm-frontend.aebfhvbquy-xmz4qj98162o.p.runcloud.link/auth/callback,http://ixs-ng-crm.ixtelecom.net/auth/callback,http://crm.ixtelecom.net/auth/callback,http://crm-frontend.x1dcsk3yfa-zqy3j1kz03kg.p.runcloud.link/auth/callback,http://crm-revamp.test/auth/callback'])
Company::first()
use\040App\134Models\134Company
Company::first()
entity()
$key\040=\040'dd'
$aliases\040=\040['ee',\040'eel']
Entity::hello()
Entity::hello()
Entity::hello()
Entity::make('a')
Entity::make('a')
Entity::make('a')
$entity\040=\040entity()
$entity\040=\040entity()
$entity::SUCCESSFUL
$entity::$SUCCESSFUL
$entity::$SUCCESSFUL
$entity\040=\040entity()
$entity::$SUCCESSFUL
$t\040=\040'setName'
substr($t,\0400,\0403)
substr($t,\0404)
substr($t,\0403)
entity()
entity()
entity()->createInstance(function($builder)\040{\012$builder->setName('aa');\012})
entity()->createInstance(function($builder)\040{\012$builder->setName(\134App\134Models\134Company::first());\012})
entity()->createInstance(function($builder)\040{\012$builder->setName(['t'\040=>\040'ddd']);\012})
entity()->createInstance(function($builder)\040{\012$builder->setName('aa');\012})
entity()->createInstance(function($builder)\040{\012$builder->setName('aa');\012})
entity()->createInstance(function($builder)\040{\012$builder->setName('aa');\012})
entity()->createInstance(function($builder)\040{\012$builder->setName('aa');\012})
$company\040=\040Company::ffirst()
$company\040=\040Company::first()
$company\040instanceof\040\134Object
$company\040instanceof\040\134stdClass
$company\040instanceof\040Object
$company\040instanceof\040object
function\040t(object\040$u)\040{\040return\040$u;\040}
t('tt')
t($company)
$t\040=\040function()\040{\040return\040'a';\040}
$t()
is_object($t)
is_callable($t)
$company\040=\040Company::first()
is_object($company)
is_callable($company)
entity()
entity()->updateInstance()
entity()->updateInstance()->successfull()
entity()->updateInstance()->successful()
use\040App\134Registries\134EntityProxyRegistry\040as\040P
app(P::class)
app(P::class)->get('company')
app(P::class)->all()
use\040App\134Registries\134EntityProxyRegistry\040as\040P
app(P::class)->all()
use\040App\134Registries\134EntityProxyRegistry\040as\040P
app(P::class)->all()
entity('company')
entity(Company::first())
entity(Company::first())->getInstance()
Company::class
use\040App\134Models\134Company
Company::class
$model\040=\040Company::Class
class_exists($model)
AttributeParser::parse([])
AttributeParser::parse([])
AttributeParser::parse([])->toModel(Compan::class)
AttributeParser::parse([])->toModel(Company::class)
use\040App\134Models\134Company
AttributeParser::parse([])->toModel(Company::class)
use\040App\134Facades\134AttributeParser
AttributeParser::parse([])->toModel(Company::class)
use\040App\134Facades\134AttributeParser
use\040App\134Models\134Company
AttributeParser::parse([])->toModel(Company::class)
use\040App\134Facades\134AttributeParser
use\040App\134Models\134Company
AttributeParser::parse([])->toModel(Company::class)
use\040App\134Facades\134AttributeParser
use\040App\134Models\134Company
$company\040=\040AttributeParser::parse([])->toModel(Company::class)
$company->toArray()
$company\040=\040AttributeParser::parse(['name'\040=>\040'Test\040Company\040Name'])->toModel(Company::class)
$company->save()
$company->save()
$company
use\040App\134Facades\134AttributeParser
use\040App\134Models\134Company
$company\040=\040AttributeParser::parse(['name'\040=>\040'Test\040Company\040Name\0402'])->toModel(Company::class)
use\040App\134Facades\134Entity
Entity::make('company')
Entity::make('company')
Entity::make('company')->addAddress()
Entity::make('company')->addAddress()
use\040App\134Facades\134Entity
Entity::make('company')->addAddress()
entity('company')->addAddress()
function\040s($r,\040$t)\040{\040dd($r,\040$t);\040}
s('a',\040'v',\040'c',\040'd')
entity('company')->addAddress()
use\040App\134Models\134Company
Company::find('b7fd2022-cd2f-451d-9e69-df2b06bbc7dc')
ExpenseType::wherE('company_id',\040'b7fd2022-cd2f-451d-9e69-df2b06bbc7dc')->get()
CashAdvanceRequest::latest()->first()
CashAdvanceRequest::latest()->take(5)
CashAdvanceRequest::latest()->take(5)->get()
CashAdvanceRequest::where('id',\040'e5e20968-3154-40f3-8246-43eb5bedb730')->first()
Company::get()
CashAdvanceRequest::where('id',\040'e5e20968-3154-40f3-8246-43eb5bedb730')->update(['company_id'\040=>\040'df3d04c2-e36d-4f8a-b38c-eb48aae30c90'])
File::exists(app_path('Services/Entities/Company')\012)
File::exists(app_path('Services/Entities/Companyss'))
const\040DEF\040=\040Company::class
DEF
use\040App\134Models\134Company
const\040DOM\040=\040Company::class
DOM
Company::first()
entity('company')->addAddress()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
use\040App\134Services\134Entities\134Company\134CompanyEntityProxy\040as\040P
app(P::class)
app()->call(P::class,\040'getInstance')
app()->call([P::class,\040'getInstance'],\040[])
app()->call([app(P::class),\040'getInstance'],\040[])
app()->call([app(P::class),\040'addAddress'],\040[])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040[]])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040[],\040'user'\040=>\040null])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040[],\040'user'\040=>\040app(User::class)])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040,\040'user'\040=>\040app(User::class)])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040\134App\134Facades\134AttributeParser::parse([]),\040'user'\040=>\040app(User::class)])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040\134App\134Facades\134AttributeParser::parse([]),\040'user'\040=>\040app(User::class)])
app()->call([app(P::class),\040'addAddress'],\040['attributes'\040=>\040\134App\134Facades\134AttributeParser::parse([]),\040'user'\040=>\040app(User::class)])
use\040App\134Facades\134AttributeParser
AttributeParse::parse([])
AttributeParser::parse([])
AttributeParser::parse([])->toArray()
$entity\040=\040entity('company')
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
use\040Illuminate\134Support\134Facades\134App
App::call([entity('company'),\040'addAddress'])
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress()->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->createInstance()->addAddress(['address_1'\040=>\040'test'])->run()
entity('company')->createInstance()->addAddress(['address_1'\040=>\040'test'])->onError(fn()\040=>\040dd('error'))->run()
entity('company')->createInstance()->addAddress(['address_1'\040=>\040'test'])->onError(fn()\040=>\040dd('error'))->run()
Faker\134Factory::create()
DB::table('failed_jobs')->select()->update(['uuid
DB::table('failed_jobs')->select()->update(['uuid'\040=>\040(string)\040\134Illuminate\134Support\134Str::uuid()])
Str::uuid()
Str::uuid()
Str::uuid()
DB::table('failed_jobs')->select()->update(['uuid'\040=>\040(string)\040Str::uuid()])
DB::table('failed_jobs')->select()->update(['uuid'\040=>\040(string)\040Str::uuidV4()])
Uuid::uuidv4()
Str::orderedUuid()
DB::table('failed_jobs')->select()->update(['uuid'\040=>\040(string)\040Str::orderedUuid()])
DB::table('failed_jobs')->whereIn('id',\040DB::table('failed_jobs')->select('id'))->update(['uuid'\040=>\040(string)\040Str::orderedUuid()])
DB::table('failed_jobs')->whereIn('id',\040DB::table('failed_jobs')->select('id')->get())->update(['uuid'\040=>\040(string)\040Str::orderedUuid()])
Uuid::orderedUuid()->toString()
Str::orderedUuid()->toString()
DB::table('failed_jobs')->whereIn('id',\040DB::table('failed_jobs')->select('id')->get())->update(['uuid'\040=>\040(string)\040Str::orderedUuid()->toString()])
DB::table('failed_jobs')->whereIn('id',\040DB::table('failed_jobs')->select('id')->get())->update(['uuid'\040=>\040Str::orderedUuid()->toString()])
DB::table('failed_jobs')->whereIn('id',\040DB::table('failed_jobs')->select('id')->get())->update(['uuid'\040=>\040Str::orderedUuid()->toString()])
Str::orderedUuid()->toString()
$ids\040=\040DB::table('failed_jobs')->select('id')->get()
$ids\040=\040collect(DB::table('failed_jobs')->select('id')->get())
$ids\040=\040collect(DB::table('failed_jobs')->select('id')->get())->map(function($t)\040{\040return\040$t->id;\040})
$ids
DB::table('failed_jobs')->whereIn('id',\040$ids)->update(['uuid'\040=>\040Str::orderedUuid()->toString()])
DB::table('failed_jobs')->update(['uuid'\040=>\040Str::orderedUuid()->toString()])
foreach($ids\040as\040$id)\040{\040DB::table('failed_jobs')->where('id',\040$id)->update(['uuid
foreach($ids\040as\040$id)\040{\040DB::table('failed_jobs')->where('id',\040$id)->update(['uuid'\040=>\040Str::orderedUuid()->toString()])\012}
foreach($ids\040as\040$id)\040{\040DB::table('failed_jobs')->where('id',\040$id)->update(['uuid'\040=>\040Str::orderedUuid()->toString()]);\040}
Quotation::latest()->first()
Quotation::where('id',\040'9c420d69-8094-4c20-8ff4-37476a909c2c')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c421729-d2fc-4cf9-82cd-4829a9b70d10')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c4216e1-468f-458e-af80-a4a3dc90a06b')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c42166b-e15b-4166-8df3-4b17598bed35')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c421651-44e7-4cab-b4c2-8f2c2694130c')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c42161d-ff83-4e1f-a630-e81a287cc77d')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c421588-c10a-4929-b47b-15925d643596')->delete()
Quotation::latest()->first()
Quotation::where('id',\040'9c421559-2f2a-4921-8820-97e88721b780')->delete()
Quotation::latest()->first()
DB::table('failed_jobs')->get()
DB::table('failed_jobs')->whereNull('uuid')->cursor()->each(function\040($job)\040{\012\040\040\040\040DB::table('failed_jobs')\012\040\040\040\040\040\040\040\040->where('id',\040$job->id)\012\040\040\040\040\040\040\040\040->update(['uuid'\040=>\040(string)\040Illuminate\134Support\134Str::uuid()]);\012});
User::first()
DB::table('oauth_clients')->get()
config('app.send_email_on_ticket_creation')
config('app.send_email_on_ticket_assignment')
Ticket::first()->label
Ticket::first()->labels
config('app.default_manager_email_address')
$c\040=\040Company::first()
use\040App\134Models\134Company
$c\040=\040Company::first()
$c\040=\040Company::latest()->firsT()
Company::inRandomOrder()->firsT()
Company::inRandomOrder()->firsT()
Company::inRandomOrder()->firsT()
Company::inRandomOrder()->firsT()
Company::inRandomOrder()->firsT()
$c\040=\040Company::find('b7fd2022-cd2f-451d-9e69-df2b06bbc7dc')
$expenseTypes\040=\040ExpenseType::where('company_id',\040$c->id)->get()
$expenseTypes->sort()
ExpenseType::where('id',\04072)->update(['priority'\040=>\0401])
$expenseTypes->sort()
$expenseTypes\040=\040ExpenseType::where('company_id',\040$c->id)->get()
$e\040=\040$expenseTypes->sortByDesc('priority')
User::where('email',\040'unazully@gmail.com')->first()
AI::test()
use\040App\134Facades\134AI;
AI::test()
AI::provider('claude')->message('parse_address')
use\040App\134Facades\134AI;
AI::provider('claude')->message('parse_address')
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI;
AI::usingPrompt('parse_address')->sendMessagePrompt()
Http::get('https://google.com')->Status()
Http::get('https://google.com/sdflkjsldkfjsd/sdfsdf/sdfsdf')->Status()
Http::get('https://google.com')->json()
$response\040=\040Http::get('https://httpbin.org/get')
$response->json()
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address')->sendMessagePrompt()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'Alun\040alun\040banjarnegara');\040})->sendMessage()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'Alun\040alun\040banjarnegara');\040})->sendMessage()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'stasiun\040cilebut');\040})->sendMessage()
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addData('address',\040'blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress('blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress('blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->dsfkjAddress('blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->dsfkjAddress('blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->dsfkjAddress('blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress('blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->dsfkjAddress('blablabla');\040})
use\040App\134Facades\134AI
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->dsfkjAddress('blablabla');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress();\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress('Terminal\040bulupuitu');\040})
AI::usingPrompt('parse_address',\040function($message)\040{\040$message->addAddress('Terminal\040bulupuitu');\040})->sendMessage()
User::where('email',\040'unazully@gmail.com')->update(['password'\040=>\040bcrypt('KnzqxLLXW9H@')])
User::where('email',\040'suliawanis@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
User::first()
cos(120)
sin(120)
cos(120\040/\040360)
360/2
cos(0.5)
cos(0.8)
cos(3.14)
cos(9999)
M_PI
M_PI\040/\040180
120\040*\040(M_PI\040/\040180)
$rad\040=\040120\040*\040(M_PI\040/\040180)
cos($rad)
deg2rad(120)
$radsin\040=\040deg2rad(120)
sin($radsin)
4*sin($radsin)
4*cos($rad)
cos(deg2rad(60))
cos(deg2rad(60))\040*\0404
3*cos(deg2rad(120))
3*sin(deg2rad(120))
2.5*-1.5
cos(deg2rad(60))
sin(deg2rad(60))
0.8*0.5
sin(deg2rad(90))
cos(deg2rad(90))
cos(deg2rad(90))\040/\0401
cos(deg2rad(90))\040*\0401
$t\040=\04060
cos(deg2rad($t))
1/4
2/4
$t\040=\04090
cos(deg2rad($t))
2/4
cos(deg2rad(350))
cos(deg2rad(190))
cos(deg2rad(115))
cos(deg2rad(89))
sin(deg2rad(115))
sin(deg2rad(190))
cos(deg2rad(190))
cos(deg2rad(180))
sin(deg2rad(180))
sin(deg2rad(90))
cos(deg2rad(325))
cos(deg2rad(246))
sin(deg2rad(246))
$deg\040=\04060
cos(deg2rad($deg))
sin(deg2rad($deg))
$deg\040=\04030
$deg\040=\04060
sqrt(4+9)
sqrt(4+9)\040*\040cos(deg2rad($deg))
2\040*\0400.95
2\040*\0400.75
User::first()
Requirement::latest()->first()->addresses
Requirement::count()
Requirement::whereHas('addresses')->count()
Requirement::whereHas('addresses',\040($q)\040=>\040dd($q));
Requirement::whereHas('addresses',\040($q)\040=>\040dd($q->first()));
Requirement::whereHas('addresses',\040fn($q)\040=>\040dd($q->first()));
Requirement::whereHas('addresses',\040fn($q)\040=>\040dd($q->where('contry_id',\040135));
Requirement::whereHas('addresses',\040fn($q)\040=>\040dd($q->where('contry_id',\040135))->count();
Requirement::whereHas('addresses',\040fn($q)\040=>\040$q->where('contry_id',\040135))->count();
Requirement::whereHas('addresses',\040fn($q)\040=>\040$q->where('country_id',\040135))->count();
sqer(3)
sqrt(3)
sqrt(6)
sqrt(9)
2.44^2
sqrt(6)^4
27/2
27/3
9*9
sqrt(27)
cbrt()
27\040**\040(1/3)
27^(1/3)
sqrt(100)
sqrt(16)
36\040**\040(1/2)
User::where('email',\040'rizalfakhri12@gmail.com')->first()
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password'\040=>\040bcrypt(111111)])
Service::wherE('kind',\040'type_of_product')->count()
Service::wherE('kind',\040'type_of_product')->get()
Service::wherE('kind',\040'type_of_service')->get()
Service::wherE('kind',\040'type_of_service')->get()->count()
Service::wherE('kind',\040'type_of_service')->where('name',\040'Professional\040service')->get()
Requirement::where('opportunity->id',\040'9a5bbbf8-1ba0-4af7-8e1d-70c454bee405')->count()
Requirement::where('opportunity->id',\040'9a5bbbf8-1ba0-4af7-8e1d-70c454bee405')->get()
AI
2.44^2
User::inRandomOrder()->first()->allowedClients
$p\040=\040[1,2,3,4,5,6,7,8,9]
$p\040=\040collect($p)
$p->take(2)
$p->skip(1)->take(2)
$p->skip(1)->take(2)->values()
$p->skip(0)->take(3)->values()
$p->skip(1)->take(3)->values()
$p->skip(3)->take(3)->values()
$path\040=\040public_path('a.xlsx')
use\040Box\134Spout\134Writer\134Common\134Creator\134WriterEntityFactory;
$t\040=\040WriterEntityFactory::createXlsxWriter($path)
$t->openToFile($a)
$t->openToFile($path)
use\040App\134Contracts\134Export\134UserGeneratedDataExport\040as\040E
app(E::class)
use\040App\134Contracts\134Export\134UserGeneratedDataExport\040as\040E
app(E::class)
now()->format('d-m-Y')
now()->format('d/m/Y')
now()->format('d/m/Y\040f')
now()->format('d/m/Y\040F')
now()->format('d/m/Y\040H:i:s')
use\040App\134Services\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'b')
use\040App\134Facades\134EntityFormatter\040as\040F
F::for('a',\040'creator_id')
Lead::latest()->first()
Lead::latest()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Lead::inRandomOrder()->first()->contact
Opportunity::latest()->first()
QuoteLine::with('quoteLineCosting')->inRandomOrder()->first()
Quotation::inRandomOrder()->first()
Quotation::with('opportunity')->inRandomOrder()->first()
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
Quotation::inRandomOrder()->first()->calculationSummary
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
BusinessCase::with('calculationSummary')->inRandomOrder()->first()
CompanyAccount::find('9762fbe8-be8f-4b3f-8e0a-07689e55f1cc')
BusinessCase::with('calculationSummary',\040'quotation')->inRandomOrder()->first()
Project::first()
ProjectKickOffDocument::first()
BusinessCase::with('calculationSummary',\040'quotation')->inRandomOrder()->first()
BusinessCase::with('calculationSummary',\040'quotation')->inRandomOrder()->first()
ProjectDocument::latest()->first()
use\040App\134Models\134ProjectDocument
ProjectDocument::latest()->first()
Requirement::latest()->first()
Requirement::inRandomOrder()->first()
Requirement::inRandomOrder()->first()
Requirement::inRandomOrder()->first()
Requirement::inRandomOrder()->first()
Requirement::inRandomOrder()->first()
DB::connection('qs_db')->table('requirements')->inRandomOrder()->first()
DB::connection('qs_db')->table('quote_solutions')->inRandomOrder()->first()
DB::connection('qs_db')->table('quote_solutions')->inRandomOrder()->first()
DB::connection('qs_db')->table('quote_solutions')->inRandomOrder()->first()
use\040App\134Models\134ProjectDocument
ProjectDocument::inRandomOrder()->first()
ProjectDocument::inRandomOrder()->first()
ProjectDocument::inRandomOrder()->first()
ProjectDocument::inRandomOrder()->first()
ProjectDocument::inRandomOrder()->first()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
PurchaseRequest::inRandomOrder()->firsT()
User::first()
DeliveryOrder::inRandomOrder()->first()
DeliveryOrder::inRandomOrder()->first()
PUrchaseOrder::inRandomOrder()->first()
PUrchaseOrder::inRandomOrder()->first()
PurchaseOrder::inRandomOrder()->first()
now()->format('d')
$t\040=\040[1,2,3,4,5,6,7,8,9,10]
collect($t)->splice(3)
collect($t)->slice(3)
$t
collect($t)->split(3)
sqrt(deg2rad(10))
4*sqrt(deg2rad(10))
10*sqrt(deg2rad(10))
(4*10)*sqrt(deg2rad(10))
(25*10)*sqrt(deg2rad(10))
sqrt(10)
sqrt(4)*10
sqrt(25)*10
sqrt(100)*10
User::inRandomOrder()->first()
User::inRandomOrder()->first()
User::inRandomOrder()->first()
Memo::find(2)
Memo::find(2)->companies
Memo::find(2)->companies
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->getBindings()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->toSql()
Memo::find(2)->companies()->getBindings()
Memo::find(2)->companies
Memo::find(2)->companies
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')
use\040App\134Models\134Company
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos
use\040App\134Models\134Company
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos()->toSql()
use\040App\134Models\134Company
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos()->toSql()
Company::find('df3d04c2-e36d-4f8a-b38c-eb48aae30c90')->memos
encrypt('aa')
decrypt('eyJpdiI6IkM0WVBNRmJ3WjdDZE9qUThBWTRsNXc9PSIsInZhbHVlIjoiTSs2ZTZDdU1WaU9EM3lFREpqcU1mdz09IiwibWFjIjoiZjhkNGVmMjhmZjE0OWFjOWViMDlmZGE5ZDc4MjVmMDZiOTAwNTIwNzYyZDc3OTYyOTliMzkwMDdlNTg2NzQ1MSJ9')
encrypt(json_encode(:vs
encrypt(json_encode(['user_id'\040=>\0401,\040'password_id'\040=>\0401]))
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
encrypt('ixtelecom|'.strtotime('NOW'))
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
encrypt(json_encode(['user_id'\040=>\0401,\040'password_id'\040=>\0401]))
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
User::wherE('email',\040system@broadband.com')
User::wherE('email',\040'system@broadband.com')->update(['password'\040=>\040bcrypt(111111)])
Operator::where('username',\040'ixtelecom')->first()
Operators::where('username',\040'ixtelecom')->first()
Operators::where('username',\040'ixtelecom')->update(['password
Operators::where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(111111)])
Operators::where('username',\040'ixtelecom')->update(['password'\040=>\040bcrypt(11111111)])
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
15BUser::first()
User::first()
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
encrypt(json_encode(['user_id'\040=>\0409,\040'password_id'\040=>\0401]))
config('app.key')
encrypt(json_encode(['operator_id'\040=>\0409,\040'password_id'\040=>\0401]))
config('auth-server.auth_server_endpoint')
config('auth-server.endpoint')
config('auth-server.endpoint')
config('auth-server.redirecT_uri')
config('auth-server.redirect_uri')
app('bb-auth-server')
app('bb-auth-server')
app('bb-auth-server')
AuthServer::getAccessToken()
1000\040*\0404
1000\040/\0404
46139/4.3
46139/0.07
46139*0.07
Currency::first()
46139*0.0003000000
46139/0.0003000000
Vendor::count()
use\040App\134Models\134Vendor
Vendor::count()
Vendor::first()
now()->format('d/m/Y\040H:i:s')
now()->addHours(12)->format('d/m/Y\040H:i:s')
ClaimRequest::latest()->first()
ClaimRequest::latest()->first()->approvals
ClaimRequest::latest()->first()->approvalRequests
ClaimRequest::whereHas('approvalRequests')->count()
ClaimRequest::whereDontHave('approvalRequests')->count()
ClaimRequest::whereDontHas('approvalRequests')->count()
ClaimRequest::whereHas('approvalRequests')->count()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040dd($q->where('status',\040'APPROVED')->exists());\040})->count()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->count()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->latest()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->inRandomOrder()->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->toSql()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->where('status',\040'REVIEWED')->count()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->where('status',\040'REVIEWED')->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->where('status',\040'PENDING')->first()
ClaimRequest::whereHas('approvalRequests',\040function($q)\040{\040$q->where('status',\040'APPROVED');\040})->where('status',\040'REVIEWED')->first()
Service::all()
ServiceType::all()
ProductType::all()
ServiceType::all()
SubserviceType::all()
SubserviceType::first()
SubserviceType::first()->parent
SubserviceType::first()->service
SubserviceType::all()
SubserviceType::all()->pluck('name')
ProductType::all()->pluck('name')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('sub_service_type')
Requirement::where('product_type',\040'Connectivity')->get()->first()
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->sortBy(fn($r)\040=>\040$r->subservice_type;)
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->sortBy(fn($r)\040=>\040$r->subservice_type))
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->sortBy(fn($r)\040=>\040$r->subservice_type)
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->sortBy(fn($r)\040=>\040$r->subservice_type,\040'asc')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->sortBy('subservice_type',\040'asc')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sortBy('subservice_type',\040'asc')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sortBy('subservice_type')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sortBy('subservice_type')
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sortBy('subservice_type',\0401)
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sort()
Requirement::where('product_type',\040'Connectivity')->get()->pluck('subservice_type')->unique()->values()->sort()->values()
SubserviceType::all()->pluck('name')
User::wherE('email',\040'suliawanis@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
$pkd\040=\040ProjectKickOffDocument::find('9cd2c364-03a8-40ea-870e-e12b26b7be0a')
$pkd->projectDocument
$pkd->projectDocuments
User::inRandomOrdeR()->first()
User::inRandomOrdeR()->first()
User::inRandomOrdeR()->first()->claimableMonths
User::inRandomOrdeR()->first()->claimableMonths
User::inRandomOrdeR()->first()->claimableMonths
User::inRandomOrdeR()->first()->claimableMonths()
User::inRandomOrdeR()->first()->claimableMonths()
User::inRandomOrdeR()->first()->claimableMonths
User::inRandomOrdeR()->first()->claimableMonths
User::inRandomOrdeR()->first()->claimableMonths
ZohoConfig::getConfig()
Carbon::createFromTimestamp(1691547563)
use\040Carbon\134Carbon;
Carbon::createFromTimestamp(1723478400000)
Carbon::createFromTimestamp(17234784)
Carbon::createFromTimestamp(17234784000)
Carbon::createFromTimestamp(1723478400)
Carbon::createFromTimestampMs(17234784000)
Carbon::createFromTimestampMs(172347840000)
Carbon::createFromTimestampMs(1723478400000)
Carbon::createFromTimestampMs(1723478400000)
Service::where('slug',\040'like',\040'%bandwidth')->count()
MaterialInput::where('slug',\040'like',\040'%bandwidth')->count()
MaterialInput::where('slug',\040'like',\040'%bandwidth')->update(['type'\040=>\040'bandwidth_selector'])
MaterialInput::where('slug',\040'like',\040'%sla%')->update(['type'\040=>\040'sla_selector'])
MaterialInput::where('slug',\040'like',\040'%bandwidth%')->update(['type'\040=>\040'bandwidth_selector'])
MaterialInput::where('slug',\040'like',\040'%ip-address%')->update(['type'\040=>\040'ip_address_selector'])
MaterialInput::where('slug',\040'like',\040'%additional-ip%')->update(['type'\040=>\040'ip_address_selector'])
MaterialInput::where('slug',\040'like',\040'%interface%')->update(['type'\040=>\040'interface_handsoff_selector'])
$layers\040=\040ApprovalLayer::where('approver_id',\040'c2e80d41-9e6a-40a6-8ab1-7778eeccf286')->get()
$approvals\040=\040Approval::whereIn('approval_layer_id',\040$layers->pluck('id'))->where('is_approved',\0400)->first()
$approvals->approvalEmail
$layers\040=\040ApprovalLayer::where('approver_id',\040'c2e80d41-9e6a-40a6-8ab1-7778eeccf286')->get()
ApprovalEmail::latest()->first()
ApprovalEmail::latest()->first()->approval
ApprovalEmail::where('id',\04057420)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
15D$t\040=Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
$t\040=Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
$t->update(['is_approved'\040=>\040null])
$t\040=Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
$t\040=Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
$t->update(['is_approved'\040=>\040null])
ApprovalEmail::where('id',\0405742)->update(['is_active'\040=>\040true])
$t->update(['is_approved'\040=>\040null])
$t\040=Approval::find('9d0ba6d5-2c63-4795-a0de-b08f2f3a758a')
$t->update(['is_approved'\040=>\040null])
BusinessCase::find('9d0b6006-7903-41ca-887f-49797838e4ee')3C
BusinessCase::find('9d0b6006-7903-41ca-887f-49797838e4ee')
$layers\040=\040ApprovalLayer::where('approver_id',\040'c2e80d41-9e6a-40a6-8ab1-7778eeccf286')->get()
$approvals\040=\040Approval::whereIn('approval_layer_id',\040$layers->pluck('id'))->where('is_approved',\040null)->count()
$approvals\040=\040Approval::whereIn('approval_layer_id',\040$layers->pluck('id'))->where('is_approved',\040null)->first()
$approvals\040=\040Approval::whereIn('approval_layer_id',\040$layers->pluck('id'))->where('is_approved',\040null)->latest()->first()
$approvals\040=\040Approval::whereIn('approval_layer_id',\040$layers->pluck('id'))->where('is_approved',\040null)->whereBetween('created_at',\040[now()->startOfYear(),\040now()->endOfYear()])->count()
EmailDraft::get()->pluck('subject')
$s\040=\040EmailDraft::get()->pluck('subject')->map(fn($ss)\040=>\040explode(',',\040$ss))
$s\040=\040EmailDraft::get()->pluck('subject')->map(fn($ss)\040=>\040explode(',',\040$ss))->collapse()
$s
$s->unique()
$s->unique()->values()
$s->unique()->values()->take(2)
User::where('email',\040'unazully@gmail.com')->update(['password'\040=>\040bcrypt(1111111)])
Service::latest()->first()
Service::all()->pluck('kind')->unique()
Service::find('92a4d293-c2a8-4178-ac91-0b96e4257b42')
Service::withTrashed()->find('92a4d293-c2a8-4178-ac91-0b96e4257b42')
Service::all()->pluck('kind')->unique()
Service::where('kind',\040'type_of_product')->get()->pluck('name')
Service::all()->pluck('kind')->unique()
$oppo\040=\040Opportunity::find('9d0a76f8-cb2c-4cd7-bd25-15e934760b66')
$q\040=\040$oppo->quotations->first()
$q->quoteLines
$ql\040=\040$q->quoteLines->first()
$ql->service
$ql->subService
$ql->subSubSservice
$ql->subSubService
Service::where('kind',\040'type_of_service')->get()->pluck('name')
MaterialInputs::all()
MaterialInput::all()
MaterialInput::take(30)->get()
MaterialInput::latest()->take(30)->get()
MaterialInput::count()
MaterialInput::query()->Delete()
Material::count()
Material::count()
$o\040=\040Opportunity::find('9d6f9ba0-5466-4b3a-a4ab-75aba2124c7a')
$q\040=\040$o->quotations->first()
$ql\040=\040$q->quoateLines->first()
$ql\040=\040$q->quoateLines
$ql\040=\040$q->quoteLines->first()
$ql->subSubService
Service::find('9a324b98-172c-43fe-9542-7af33b591df1;)
Service::find('9a324b98-172c-43fe-9542-7af33b591df1')
Service::withTrashed()->find('9a324b98-172c-43fe-9542-7af33b591df1')
$ql\040=\040QuoteLine::where('reference_number',\040'QL00127353')->first()
User::where('email','rizalfakhri12@gmail.com')->update(['password'\040=>\040bcrypt(1111111)]\012)
Project::latest()->first()
Project::latest()->first()->takss
Project::latest()->first()->taks
Project::latest()->first()->tasks
kj:W
User::query()->delete()
User::query()->delete()
$project\040=\040Project::latest()->first()
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
$s->getProjectTasks($project)
$s->getProjectTasks($project,\040paginated:\040true)
$s->getProjectTasks($project,\040paginated:\040true)
$s->getProjectTasks($project,\040paginated:\040true,\040page:\0403)
use\040App\134Services\134Internal\134TaskService
$project\040=\040Project::latest()->first()
$s\040=\040new\040TaskService
$s->getProjectTasks($project,\040paginated:\040true,\040page:\0403)
use\040App\134Services\134Internal\134TaskService
$project\040=\040Project::latest()->first()
$s\040=\040new\040TaskService
$s->getProjectTasks($project,\040paginated:\040true)
use\040App\134Services\134Internal\134TaskService
$project\040=\040Project::latest()->first()
$s\040=\040new\040TaskService
$s->getProjectTasks($project,\040paginated:\040true)
use\040App\134Services\134Internal\134TaskService
$project\040=\040Project::latest()->first()
$s\040=\040new\040TaskService
$s->getProjectTasks($project,\040paginated:\040true)
$s->getProjectTasks($project,\040paginated:\040true)->currentPage()
$s->getProjectTasks($project,\040paginated:\040true,\040page:\0403)
$s->getProjectTasks($project,\040paginated:\040true,\040page:\0403)->currentPage()
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
$project\040=\040Project::latest()->first()
$s->getProjectTasks($project,\040paginated:\040true)
$s->getProjectTasks($project,\040paginated:\040true)->currentPage()
$s->getProjectTasks($project,\040paginated:\040true,\040page:\0402)->currentPage()
$s\040=\040new\040TaskService
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
Task::latest()->first()
$s->getTaskById('3763b82f-f5af-4c23-83f1-abea56ee846e')
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
$s->getTaskById('3763b82f-f5af-4c23-83f1-abea56ee846e')
Task::with('project')->first()
Task::first()
Task::first()->project
Task::first()->project()->toSql()
Task::first()->project()->getBindings()
Task::first()->project
Task::with('project')->first()
Task::with('project')->first()->owner
Task::with('project')->first()->owners
Task::with('project')->whereHas('owners')->first()
Task::with('project')->whereHas('owners')->first()->owners
Task::with('project')->whereHas('owners')->first()->project
$i\040=\040['owners']
array_merge($i,\040'project')
array_combine($i,\040'project')
array_combine($i,\040['project'])
array_merge($i,\040['project'])
$s->getTaskById('3763b82f-f5af-4c23-83f1-abea56ee846e')
use\040App\134Services\134Internal\134TaskService
$s\040=\040new\040TaskService
$s->getTaskById('3763b82f-f5af-4c23-83f1-abea56ee846e',\040includes:\040['owners'])
Project::first()->users
Project::first()->users()->toSql()
Task::first()
Task::first()->project
Task::first()->project->users()
Task::first()->project->users()->attach('06e0c16d-8bd9-4b03-9a35-380253d6d49a')
Task::first()->owners()->attach('06e0c16d-8bd9-4b03-9a35-380253d6d49a')
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password'\040=>\040'Kontol111'])
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password'\040=>\040bcrypt('Kontol111')])
csrf_token()
csrf()
Task::latest()->first()->attachments
Task::latest()->first()->attachments()->toSql()
Task::find('8888e3e7-b273-4e8f-938f-9d3c55231166')
Task::find('8888e3e7-b273-4e8f-938f-9d3c55231166')->owners
Task::find('32036ba7-9781-43e1-bd46-703f2496429a')
Task::find('32036ba7-9781-43e1-bd46-703f2496429a')->owners
$task\040=\040Task::find('32036ba7-9781-43e1-bd46-703f2496429a')
$task->getMedia('attachments')
$task->getMedia('attachments')->where('model_id',\040'32036ba7-9781-43e1-bd46-703f2496429a')->first()
$task\040=\040Task::find('32036ba7-9781-43e1-bd46-703f2496429a')
$task->media
$task\040=\040Task::find('32036ba7-9781-43e1-bd46-703f2496429a')
$task->comments
Task::find('32036ba7-9781-43e1-bd46-703f2496429a')
Task::find('32036ba7-9781-43e1-bd46-703f2496429a')->comments
Task::find('32036ba7-9781-43e1-bd46-703f2496429a')->media
Quotation::where('reference_number',\040'QUO00004785')->first()
Quotation::where('reference_number',\040'QUO00004785')->first()->quoteLines
Quotation::where('reference_number',\040'QUO00004785')->first()->quoteLines->first()
Quotation::where('reference_number',\040'QUO00004785')->first()->quoteLines->first()->inputs
Quotation::where('reference_number',\040'QUO00004785')->first()->quoteLines->first()->inputs->pluck('slug')
Quotation::where('reference_number',\040'QUO00003396')->first()->quoteLines->first()->inputs->pluck('slug')
QuoteLine::where('reference_number',\040'QL00118808')->first()
QuoteLine::where('reference_number',\040'QL00118808')->first()->inputs
$q\040=\040Quotation::where('reference_number',\040'QUO00003420')->first()
$q->quoteLines
Quotation::where('reference_number',\040'QUO00003267')->first()
Quotation::where('reference_number',\040'QUO00003267')->first()->quoteLines->count()
Quotation::where('reference_number',\040'QUO00003267')->first()->business_case_id
User::first()
$a\040=\040['a'\040=>\0402]
$b\040=\040['b'\040=>\0404]
array_merge($a,\040$b)
Project::find('9ced5faa-f264-4751-b870-49e70c4903b8')
Project::find('10adde8f-d870-4fc5-87be-4b801e36d71f')
User::where('email',\040'rizalfakhri12@gmail.com')->update(['password'\040=>\040bcrypt(1111111)])
Notification::latest()->first()
use\040App\134Models\134Notification
Notification::latest()->first()
Notification::latest()->first()->payload
use\040App\134Models\134Notification
Notification::latest()->first()->payload
Notification::latest()->first()->payload
Notification::latest()->first()->payload
use\040App\134Models\134Notification
Notification::latest()->first()->payload
Notification::find('fd2feb32-a5b8-41a3-93c4-f12a7def23a8')
use\040App\134Models\134Notification
Notification::find('fd2feb32-a5b8-41a3-93c4-f12a7def23a8')
Notification::find('fd2feb32-a5b8-41a3-93c4-f12a7def23a8')->payload
Task::has('media')->first()
Task::has('media')->first()->getMedia('attachments')->first()
Task::has('media')->first()->getMedia('attachments')->take(5)->get()
Task::has('media')->first()->getMedia('attachments')->take(5)
Task::has('media')->first()->getMedia('attachments')->latest()->take(5)
Task::has('media')->first()->getMedia('attachments')->latest()->take(5)
Task::has('media')->first()->getMedia('attachments')->take(5)
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
User::find('03e83e82-ae24-4beb-83e8-23d1383e4e08')
DB::enableQueryLog();
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
DB::enableQueryLog();
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
dd(DB::getQueryLog());
DB::enableQueryLog();
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
DB::enableQueryLog();
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
dd(DB::getQueryLog());
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
$comment->user
$comment\040=\040Comment::find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
$comment->user
$comment\040=\040Comment::with('user')->find('5466f4ff-7221-426f-b1dc-9e0ff64e2300');
User::First()
User::First()
QuoteLine::latest()->first()
QuoteLine::latest()->first()->pivot
QuoteLine::with('pivot')->first()
QuoteLine::first()->pivot
QuoteLine::first()->pivot()
QuoteLine::first()->pivot
QuoteLine::latest()->first()->pivot
QuoteLine::latest()->first()->milestone
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdf')->build()
YorCreative\134UrlShortener\134Services\134UrlsService
YorCreative\134UrlShortener\134Services\134UrlService
use\040YorCreative\134UrlShortener\134Services\134UrlService
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdf')->build()
use\040YorCreative\134UrlShortener\134Services\134UrlService
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdf')->build()
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdfff')->build()
use\040YorCreative\134UrlShortener\134Services\134UrlService
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdffff')->build()
use\040YorCreative\134UrlShortener\134Services\134UrlService
$url\040=\040UrlService::shorten('https://t.com/dfkjsdfkjsfd/sdfkjskdjfs/skdjfksdfffff')->build()
route('email-drafts.show',\040'ff')
$e\040=\040EmailDraft::latest()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatchNow($e)
$e->services()
$e->services()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e->services
$e->services->first()
$e->services->first()->subservices
$e->services
$e->services->first()->subservices
$e->services->first()->subservices->first()
$e->services->first()->subservices->first()->data
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
Requirement::first()
Requirement::first()->address
Requirement::first()->addressIs('z-end')
Requirement::first()->addressIs('z-end')->fullAddress
Requirement::first()->addressIs('a-end')->fullAddress
Requirement::inRandomOrder()->first()->addressIs('a-end')->fullAddress
Requirement::inRandomOrder()->first()->addressIs('z-end')->fullAddress
$e\040=\040EmailDraft::inRandomOrder()->first()
$e->services->first()->subservices->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
$e
$e\040=\040EmailDraft::inRandomOrder()->first()
$e->services
$e->services->first()
$e->services->first()->subservices->first()
$e->services->first()->subservices->first()->data
$e->services->first()->subservices->first()->data->first()
$e->services->first()->subservices->first()->data->first()->requirement
$e->services->first()->subservices->first()->data->first()->requirement->addressIs('a-end')
$e->services->first()->subservices->first()->data->first()->requirement->addressIs('a-end')->fullAddress
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e->services->first()->subservices->first()->data->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e->services->first()->subservices->first()->data->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
check_string('GI-DIA',\040['GI-DIA'])
check_string('GI-DIA',\040['DIA'])
15D!check_string('GI-DIA',\040['DIA'])
!check_string('GI-DIA',\040['DIA'])
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
G::dispatch($e)
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
$e\040=\040EmailDraft::find(12)
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::find(12)
$e->services->first()->subservices
$e->services->first()->subservices->first()
$e->services->first()->subservices->first()->data
$e->services->first()->subservices->first()->data->first()
$e->services->first()->subservices->first()->data->first()->requirement
$e\040=\040EmailDraft::find(12)
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
$e\040=\040EmailDraft::inRandomOrder()->first()
use\040App\134Jobs\134GenerateRequirementTemplateSpreadsheet\040as\040G
G::dispatch($e)
G::dispatch($e)
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
$e->getMediaCollection('requirement_templates')
$e->getMedia()
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
File::exists('requirements-global-internet-MauYPre30n.xlsx')
File::exists('requirement-spreadsheets/requirements-global-internet-MauYPre30n.xlsx')
File::exists(storage_path('requirement-spreadsheets/requirements-global-internet-MauYPre30n.xlsx'))
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
$e->getMedia('requirement_templates')
$e->getMedia('requirement_templates')->first()
$e->getMedia('requirement_templates')->first()->path
$e->getMedia('requirement_templates')->first()->getPath()
$e->getMedia('requirement_templates')->first()->original_url
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
$e->getMedia('requirement_templates')
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$e\040=\040EmailDraft::latest()->first()
$e->getMedia('finalized_requirement_spreadsheets')
$e->getMedia('finalized_requirements_spreadsheets')
$e->getMedia('finalized_requirements_templates')
$e->getMedia('finalized_requirement_templates')
$e->getMedia('finalized_requirement_templates')->first()
$e->getMedia('finalized_requirement_templates')->first()->getPath()
$oauth\040=\040DB::table('oauth_clients')->where('id',\040'fa603401-2778-4e3d-ae31-d0040e237b0f')->first()
$oauth->redirect\040=\040'https://people.ixtelecom.net/auth/callback,http://hrms-vue.test/auth/callback,http://auth-sdk-bench.test/auth/callback'
$oauth->save()
use\040App\134Models\134OauthClient
$oauth\040=\040OauthClient::where('id',\040'fa603401-2778-4e3d-ae31-d0040e237b0f')->first()
$oauth->redirect\040=\040'https://people.ixtelecom.net/auth/callback,http://hrms-vue.test/auth/callback,http://auth-sdk-bench.test/auth/callback'
$oauth->save()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$defaultAuth\040=\040Firebase::auth();
$defaultAuth->createFirestore();
$defaultAuth->getUser()
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
User::first()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
php\040-m\040|\040grep\040grpc
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
use\040Kreait\134Laravel\134Firebase\134Facades\134Firebase;
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
$firestore\040=\040Firebase::firestore()
app('firebase.firestore')
app('firebase.messaging')
app('firebase.database')
app('firebase.database')->getRefeence('aa')
app('firebase.database')->getReference('aa')
app('firebase.database')->getReference('2TJEFF')
app('firebase.database')->getReference('2TJEFF')->getSnapshot()
$firestore\040=\040Firebase::firestore()
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient();
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient();
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient();
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient();
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient();
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
use\040Google\134Cloud\134Firestore\134FirestoreClient;
$firestore\040=\040new\040FirestoreClient(['transport'\040=>\040'rest']);
User::first()
EmailDraft::first()
use\040App\134Models\134EmailDraft
EmailDraft::first()
EmailDraft::first()
use\040App\134Models\134EmailDraft
EmailDraft::first()
ucwords("last\040mile\040provider")
ucwords("NRC")
ucwords("Lead\040time")
in_array(ucwords('lead\040time'),\040['Last\040Mile\040Provider',\040'Lead\040Time\040',\040'Remarks',\040'NRC',\040'MRC'])
in_array(ucwords('Lead\040Time'),\040['Last\040Mile\040Provider',\040'Lead\040Time\040',\040'Remarks',\040'NRC',\040'MRC'])
ucwords('Lead\040Time')
in_array('Lead\040Time',\040['Last\040Mile\040Provider',\040'Lead\040Time\040',\040'Remarks',\040'NRC',\040'MRC'])
Service::first()
EmailDraftService::first()
Str::contains('DIA',\040'GI_DIA')
Str::contains('GI-DIA',\040'DIA')
Str::contains('GI-DiA',\040'DIA')
now()->addBusinessDays(3)
Media::getRegistry()
Media::getRegistry()
Media::getRegistry()
Media::getRegistry()->all()
Media::getRegistry()->get('youtube')
Media::getRegistry()->get('youtube')
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Log::error('aa')
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()
Media::getRegistry()->get('youtube')->getContents()[0]
Media::getRegistry()->get('youtube')->getContents()[0]->getTitle()
Media::getRegistry()->get('youtube')->getContents()[49]
Media::getRegistry()->get('youtube')->getContents()[49]->getTitle()
Media::searchQuery('tayo')->getContents()
Media::searchQuery('tayo')->getContents()
Media::searchQuery('ariana\040grande')->getContents()[0]->getTitle()
urldecode('Ariana\040Grande\040-\040we\040can&#39;t\040be\040friends\040(wait\040for\040your\040love)\040(official\040music\040video)')
html_entity_decode('Ariana\040Grande\040-\040we\040can&#39;t\040be\040friends\040(wait\040for\040your\040love)\040(official\040music\040video)')
Media::searchQuery('ariana\040grande')->getContents()[0]->getTitle()
Media::searchQuery('ariana\040grande')->getContents()[8]->getTitle()
Media::searchQuery('ariana\040grande')->getContents()[8]->getContentId()
use\040App\134Facades\134Media;
Media::searchQuery('aa')
Media::searchQuery('aa')->getContents()
Media::searchQuery('aa')->getContents()
Media::searchQuery('aa')->getContents()
Str::contains('a',\040'b')
Str::contains('a',\040'ba')
Str::contains('ab',\040'abas')
Str::contains('thestring',\040'g')
Str::contains('thestring',\040'l')
Str::contains('Additional\040Information\040(Connectivity)',\040'Additional\040Information')
Str::contains('Additional\040Information\040(Connectivity)',\040'Additional\040Informations')
rang(0,\0401)
range(0,\0401)
use\040Carbon\134Carbon
Carbon::parse('01-01-2024\04009:43\040pm')
Carbon::parse('01-01-2024\04009:43\040am')
Carbon::parse('01-01-2024\04009:43\040am')->timezone('Asia/Kuala_Lumpur')
User::first()
User::first()
Task::inRandomOrder()->first()
Task::inRandomOrder()->first()->timeLogs
Task::inRandomOrder()->first()->timeLogs()->toSql()
$o\040=\040now()
$i\040=\040now()->addHours(4)->addMinutes(10)
$o->diffInMinutes($i)
$o->diff($i)->format('%H:%I:%S')
Task::find('6bc78424-105a-4727-8fc8-af7c9c3e34de')
Task::find('6bc78424-105a-4727-8fc8-af7c9c3e34de')->timeLogs
$u\040=\040User::where('email',\040'rizalfakhri12@gmail.com')->first()
$ap\040=\040$u->approvals
$ap\040=\040$u->approvals()->where('approval_type_id',\040function($query)\040{\040$query->select('id')->from('approval_types')->where('code',\040'CLAIM_REQUEST')->first();})->orderBy('level',\040'asc')->first(\012)
$ap\040=\040$u->approvals()->where('approval_type_id',\040function($query)\040{\040$query->select('id')->from('approval_types')->where('code',\040'CLAIM_REQUEST')->first();})->orderBy('level',\040'desc')->first(\012)
ApprovalRequest::first()
ApprovalRequest::where('status',\040'AWAITING_APPROVAL')->first()
ApprovalRequest::where('status',\040'AWAITING_APPROVAL')->where('approvable_type',\040'CLAIM_REQUEST')->first()
ApprovalRequest::where('status',\040'AWAITING_APPROVAL')->where('approvable_type',\040'CLAIM_REQUEST')->first()->claimable
ApprovalRequest::where('status',\040'AWAITING_APPROVAL')->where('approvable_type',\040'CLAIM_REQUEST')->first()->approvable
ApprovalRequest::where('status',\040'AWAITING_APPROVAL')->where('approvable_type',\040'CLAIM_REQUEST')->first()->approvable->expenses
ApprovalRequest::select()->count()
User::first()
EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
EmailDraft::latest()->first()
EmailDraft::latest()->first()->data
EmailDraft::latest()->first()->data->pluck('country_id')
EmailDraft::latest()->first()->data->pluck('country_id')->unique()
EmailDraft::latest()->first()->data->pluck('country_id')->countBy()
EmailDraft::latest()->first()->data->pluck('country_id')->countBy()->sortDesc()
EmailDraft::latest()->first()->data->pluck('country_id')->countBy()->sortDesc()->first()
$draft\040=\040\134App\134Models\134EmailDraft::latest()->first()
$data\040=\040$draft->data
$data\040instanceof\040\134Illuminate\134Support\134Collection
$data->pluck('country_id')->countyBy()->sortByDesc()->first()
$data->pluck('country_id')->countBy()->sortByDesc()->first()
$data->pluck('country_id')->countBy()->sortDesc()->first()
$data->pluck('country_id')->countBy()
$data->pluck('country_id')->countBy()->sortDesc()->keys()->first()
$u\040=\040User::where('email',\040'rizalfakhri12@gmail.com')->first()
use\040App\134Notification\134ScheduledSystemMaintenance\040as\040M
$u
$u->notify(new\040M)
use\040App\134Notifications\134ScheduledSystemMaintenance\040as\040M
$u->notify(new\040M)
use\040App\134Notifications\134ScheduledSystemMaintenance\040as\040M
$u\040=\040User::where('email',\040'rizalfakhri12@gmail.com')->first()
$u->notify(new\040M)
use\040App\134Models\134EmailDraft
EmailDraft::latest()->first()
ShortUrl::first()
use\040App\134Models\134Requirement
Requirement::first()
Requirement::select()->toSql()
use\040Carbon\134Carbon
Carbon::parse('01\040november\0402024')
use\040App\134Models\134Requirement
Requirement::count()
use\040App\134Models\134Requirement
Requirement::count()
use\040App\134Models\134EmailDraft
$d\040=\040EmailDraft::latest()->first()
$d->data
$d
$d->data->first()
$d->data->first()->requirement
$\012q:
$d->assignedBy
$d->assignedBy
use\040App\134Models\134EmailDraft
$d\040=\040EmailDraft::latest()->first()
$d->daa
$d->data
$d->data
$d->data->first()
$d->data->first()->requirement
jjjjjjjjjjjjjjjjq
$d
$d->user_id
use\040App\134Models\134EmailDraft
$d\040=\040EmailDraft::latest()->first()
array_merge([1],\040[9,\0404,5,6])
use\040App\134Models\134EmailDraft
$d\040=\040EmailDraft::latest()->first()
$d->user
User::where('email',\040'iskandar@ixtelecom.net')->first()
User::where('email',\040'like',\040'%iskandar@ixtelecom.net')->first()
User::where('email',\040'like',\040'%iskandar@ixtelecom.net')->update(['password'\040=>\040bcrypt(111111)])
DashboardComponent::all()
use\040App\134Facades\134DashboardComponent
DashboardComponent::all()
DashboardComponent::all()
use\040App\134Facades\134DashboardComponent
DashboardComponent::all()
DashboardComponent::all()
Media::all()
Media::searchQuery('a')
DashboardComponent::all()
DashboardComponent::get('ix-moments')
DashboardComponent::get('ix-moments')->render()
$d\040=\040EmailDraft::latest()->first()
use\040App\134Models\134EmailDraft
$d\040=\040EmailDraft::latest()->first()
$d->data
Requirement::latest()->first()
Requirement::latest()->first()->addresses
Requirement::latest()->first()->addressIs('a-end')
Requirement::latest()->first()->addressIs('z-end')
Arr::get(Requirement::latest()->first()->addressIs('a-end'),\040'country.name')
Arr::get(Requirement::latest()->first()->addressIs('z-end'),\040'country.name')
$ql\040=\040QuoteLine::find('9e89cabb-ff41-4baf-b440-a0ddbf0f1927')
$ql\040=\040QuoteLine::where('reference_number',\040'QL00114804')->first()
$ql\040=\040QuoteLine::where('reference_number',\040'QL00114804')->latest()->first()
$ql->quoteLineCosting
$ql->quoteLineCosting()->create()
$ql\040=\040QuoteLine::where('reference_number',\040'QL00114804')->latest()->first()
$ql->quoteLineCosting
$ql->quoteLineCosting->update(['currency'\040=>\040'MYR'])
r:q
